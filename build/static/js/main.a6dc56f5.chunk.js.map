{"version":3,"sources":["utils/txNotifier.ts","utils/web3.js","components/NavBar/ConnectButton.tsx","components/NavBar/index.tsx","components/HomePage/index.tsx","utils/infura.js","constants/contracts.js","utils/number.ts","constants/tokens.js","components/common/AddressBlock.tsx","constants/colors.js","components/common/BalanceBlock.tsx","components/common/MaxButton.tsx","components/common/HelpText.tsx","components/common/PriceSection.tsx","components/common/Comment.tsx","components/common/Wrapper.tsx","components/common/CheckBox.tsx","components/common/NumberBlock.tsx","components/common/Card.tsx","components/common/BigNumberInput.tsx","components/common/ActionButton.tsx","components/PoolList/ListTable.tsx","components/Pool/Unstake.tsx","components/Pool/Stake.tsx","components/Pool/Claim.tsx","components/Pool/Harvest.tsx","components/Pool/Zap.tsx","components/Pool/index.tsx","components/PoolList/index.tsx","components/Distribution/Header.tsx","components/Distribution/Withdraw.tsx","components/Distribution/DistributionZap.tsx","components/Distribution/index.tsx","components/common/IconHeader.tsx","components/Admin/SetParam.tsx","components/Admin/SetDay.tsx","components/Admin/SetPrice.tsx","components/Admin/index.tsx","App.tsx","utils/storage.ts","serviceWorker.js","index.tsx"],"names":["notify","v","console","log","poolAbi","require","mockPoolAbi","distributionAbi","dollarAbi","oracleAbi","priceComsumerAbi","UINT256_MAX","approve","tokenAddr","spender","callback","a","amt","checkConnectedAndGetAddress","account","oToken","window","web3","eth","Contract","methods","send","from","on","hash","updateModalMode","theme","darkMode","connect","Web3","ethereum","getAccounts","addresses","length","enable","toLowerCase","stake","pool","amount","poolContract","BigNumber","toFixed","unstake","claim","zap","harvest","withdraw","cookDistribution","distributionContract","distributionZap","poolAddress","setDay","dayNumber","setToday","setCookPrice","oracle","price","oracleContract","set","updatePriceFeed","setWETHPrice","priceComsumer","priceComsumerContract","setPoolStakeLockupDuration","lockupDays","setStakeLockupDuration","setPoolRewardPerBlock","rewards","setRewardPerBlock","setPoolBlockNumber","blockNumber","setBlockNumber","setPoolBlockTimestamp","blockTimestamp","setBlockTimestamp","ConnectButton","user","setUser","useState","isConnected","setIsConnected","connectWeb3","address","disconnectWeb3","style","paddingTop","paddingRight","onClick","size","entity","icon","label","LinkButton","title","isSelected","paddingLeft","padding","opacity","fontSize","lineHeight","NavBar","updateTheme","history","useHistory","updateIsHome","opened","setOpened","page","setPage","useViewport","below","above","useEffect","home","location","pathname","listen","onClose","push","includes","secondary","className","primary","height","src","MainButton","description","tag","xs","md","width","margin","whiteSpace","HomePage","display","alignItems","marginLeft","marginRight","getTokenAllowance","token","tokenContract","allowance","call","getTokenBalance","balanceOf","getTotalStaked","totalStaked","getStakeLockupDuration","getRewardPerBlock","getPoolBalanceOfStaked","balanceOfStaked","getPoolBalanceOfRewarded","balanceOfRewarded","getPoolBalanceOfVesting","balanceOfVesting","getPoolBalanceOfClaimable","balanceOfClaimable","getPoolBalanceOfClaimed","balanceOfClaimed","getPoolBalanceOfUnstakable","balanceOfUnstakable","getDistributionVestingAmount","getUserVestingAmount","getDistributionAvalibleAmount","getUserAvailableAmount","getDistributionVestedAmount","getUserVestedAmount","getDistributionStartTimestamp","start","getTodayNumber","today","getWETHPrice","getLatestPrice","getSevenMAPrice","getLatestSevenSMA","getBlockNumber","blockNumberE","getBlockTimestamp","blockTimestampE","POOLS","CookDistribution","toBaseUnitBN","rawAmt","decimals","raw","base","decimalsBN","times","pow","integerValue","toTokenUnitsBN","tokenAmount","tokenDecimals","digits","div","isPos","isZero","isPositive","UNI","WETH","COOK","AddressBlock","_name","_appearance","button","secondaryButton","background","border","overlay","content","contentSecondary","surface","surfaceContent","surfaceContentSecondary","surfaceIcon","surfaceUnder","surfaceOpened","surfaceSelected","surfaceHighlight","surfacePressed","surfaceInteractive","feedbackSurface","feedbackSurfaceContent","feedbackSurfaceContentSecondary","warning","warningSurface","warningSurfaceContent","info","infoSurface","infoSurfaceContent","help","helpContent","helpSurface","helpSurfaceContent","negative","negativeContent","negativeSurface","negativeSurfaceContent","positive","positiveContent","positiveSurface","positiveSurfaceContent","badge","badgeContent","badgePressed","tagIdentifier","tagIdentifierContent","tagNew","tagNewContent","tagIndicator","tagIndicatorContent","tagActivity","tagActivityContent","hint","link","focus","selected","selectedContent","selectedDisabled","disabled","disabledContent","disabledIcon","control","controlBorder","controlBorderPressed","controlDisabled","controlSurface","controlUnder","accent","accentStart","accentEnd","accentContent","floating","floatingContent","green","yellow","red","blue","brown","purple","BalanceBlock","asset","balance","suffix","type","integer","gt","str","toString","split","substr","color","colors","textAlign","MaxButton","HelperText","parseFloat","PriceSection","symbol","forceDisplay","amtBN","toNumber","Comment","styled","props","NumberBlock","num","numNum","Card","value","backgroundColor","borderRadius","BigNumberInput","setter","adornment","max","marginBottom","borderBottom","fontWeight","adornmentPosition","adornmentSettings","wide","isNegative","onChange","event","target","onBlur","marginTop","ActionButton","minWidth","ListTable","pools","selectedPool","setSelectedPool","detailMode","hovered","setHovered","useTheme","map","selectedColor","textColor","cursor","onMouseEnter","onMouseLeave","key","name","lockedUpPeriod","rewardPerBlock","Unstake","unstakable","locked","unstakeAmount","setUnstakeAmount","visible","flexBasis","sm","lg","isGreaterThan","Stake","staked","stakeAmount","setStakeAmount","xl","comparedTo","Claim","claimable","claimAmount","setClaimAmount","Harvest","userTotalRewarded","userTotalInVesting","harvestAmount","setHarvestAmount","Zap","cookAvailable","wethBalance","wethAllowance","pairBalanceWETH","pairBalanceCOOK","zapAmount","setZapAmount","wethAmount","setWethAmount","balanceType","setBalanceType","close","WETHToCOOKRatio","onChangeAmountCOOK","amountCOOK","amountCOOKBN","amountCOOKBU","newAmountWETH","multipliedBy","ROUND_FLOOR","items","HelpText","Pool","useParams","override","setPairBalanceCOOK","setPairBalanceWETH","userTotalStaked","setUserTotalStaked","userTotalUnstakable","setUserTotalUnstakable","userTotalLocked","setUserTotalLocked","setUserTotalRewarded","setUserInTotalVesting","userTotalVested","setUserTotalVested","userUNIAllowance","setUserUNIAllowance","userUNIBalance","setUserUNIBalance","userWETHBalance","setUserWETHBalance","userWETHAllowance","setUserWETHAllowance","isCancelled","updatePoolInfo","Promise","all","pairBalanceCOOKStr","pairBalanceWETHStr","pairCOOKBalance","pairWETHBalance","poolInfoId","setInterval","clearInterval","updateUserInfo","userTotalStakedStr","userTotalUnstakableStr","userTotalRewardedStr","userTotalVestingStr","userTotalVestedStr","userTotalClaimedStr","uniAllowance","uniBalance","userTotalStakedBalance","userTotalUnstakableBalance","userTotalLockedBalance","minus","userTotalRewardedBalance","userTotalVestingBalance","userTotalVestedBalance","userTotalClaimedBalance","userTotalInVestingBalance","userInfoId","poolList","_","find","PoolList","setPoolList","setTotalStaked","lockedup","reward","poolRewardPerBlock","reduce","sum","plus","resolve","totalStakedBalance","id","closeButton","WithdrawPageHeader","accountVestingBalance","accountAvalibleBalance","accountVestedBalance","todayNumber","startDayNumber","Withdraw","availableAmount","vestingAmount","records","withdrawAmount","setWithdrawAmount","DistributionZap","Distribution","userVestingBalance","setUserVestingBalance","userVestedBalance","setUserVestedBalance","userAvalibleBalance","setUserAvalibleBalance","startDay","setStartDay","managedPools","setManagedPools","vestingBalance","vestedBalance","avalibleBalance","startTimeStamp","tDay","decimalPlaces","lockedUp","IconHeader","text","SetParam","stakeLockupDuration","rewardPerBlockStr","heading","flexWrap","SetDay","setDayNumber","SetPrice","currentCookPrice","setCurrentCookPrice","currentWethPrice","setCurrentWethPrice","targetCookPrice","setTargetCookPrice","targetWethPrice","setTargetWethPrice","sevenMA","setSevenMA","oraclePrice","setOraclePrice","wethP","currentWETHPrice","ssma","Admin","App","defaultValue","storedTheme","localStorage","getItem","setTheme","assetsUrl","process","layout","maxWidth","newTheme","setItem","storePreference","path","Boolean","hostname","match","Moment","locale","momentLocalizer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a6dc56f5.chunk.js","sourcesContent":["export const notify = {\n  hash: (v) => console.log(v)\n}","/* eslint-disable camelcase */\nimport Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\nimport { notify } from './txNotifier.ts';\nconst poolAbi = require('../constants/abi/Pool.json');\nconst mockPoolAbi = require('../constants/abi/MockPool.json');\nconst distributionAbi = require('../constants/abi/TokenDistribution.json');\nconst dollarAbi = require('../constants/abi/Dollar.json');\nconst oracleAbi = require('../constants/abi/Oracle.json');\nconst priceComsumerAbi = require('../constants/abi/PriceConsumer.json');\nconst UINT256_MAX = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\n\n/**\n * ERC20 Utilities\n */\n\nexport const approve = async (tokenAddr, spender, callback, amt = UINT256_MAX, ) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new window.web3.eth.Contract(dollarAbi, tokenAddr);\n  await oToken.methods\n    .approve(spender, amt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n      if (callback) {\n        callback(hash);\n      }\n    });\n};\n\n\n/**\n * Connection Utilities\n */\n\nexport const updateModalMode = async (theme) => {\n  window.darkMode = theme === 'dark';\n};\n\nexport const connect = async () => {\n  window.web3 = new Web3(window.ethereum);\n\n  let addresses = await window.web3.eth.getAccounts();\n  if (!addresses.length) {\n    try {\n      addresses = await window.ethereum.enable();\n    } catch (e) {\n      console.log(e);\n      return false;\n    }\n  }\n\n  return addresses.length ? addresses[0].toLowerCase() : null;\n};\n\n// eslint-disable-next-line consistent-return\nexport const checkConnectedAndGetAddress = async () => {\n  let addresses = await window.web3.eth.getAccounts();\n  if (!addresses.length) {\n    try {\n      addresses = await window.ethereum.enable();\n      // eslint-disable-next-line no-empty\n    } catch (e) { }\n  }\n\n  return addresses[0];\n};\n\n/**\n * Pool\n */\nexport const stake = async (pool, amount, callback) => {\n  const account = await checkConnectedAndGetAddress();\n  const poolContract = new window.web3.eth.Contract(poolAbi, pool);\n  await poolContract.methods\n    .stake(new BigNumber(amount).toFixed())\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n      callback(hash);\n    });\n};\n\nexport const unstake = async (pool, amount, callback) => {\n  const account = await checkConnectedAndGetAddress();\n  const poolContract = new window.web3.eth.Contract(poolAbi, pool);\n  await poolContract.methods\n    .unstake(new BigNumber(amount).toFixed())\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n      callback(hash);\n    });\n};\n\nexport const claim = async (pool, amount, callback) => {\n  const account = await checkConnectedAndGetAddress();\n  const poolContract = new window.web3.eth.Contract(poolAbi, pool);\n  await poolContract.methods\n    .claim(new BigNumber(amount).toFixed())\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n      callback(hash);\n    });\n};\n\nexport const zap = async (pool, amount, callback) => {\n  const account = await checkConnectedAndGetAddress();\n  const poolContract = new window.web3.eth.Contract(poolAbi, pool);\n  await poolContract.methods\n    .zap(new BigNumber(amount).toFixed())\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n      callback(hash);\n    });\n};\n\nexport const harvest = async (pool, amount, callback) => {\n  const account = await checkConnectedAndGetAddress();\n  const poolContract = new window.web3.eth.Contract(poolAbi, pool);\n  await poolContract.methods\n    .harvest(new BigNumber(amount).toFixed())\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n      callback(hash);\n    });\n};\n\n// token distribution\n\nexport const withdraw = async (cookDistribution, amount) => {\n  const account = await checkConnectedAndGetAddress();\n  const distributionContract = new window.web3.eth.Contract(distributionAbi, cookDistribution);\n  await distributionContract.methods\n    .withdraw(new BigNumber(amount).toFixed())\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n\nexport const getWithdrawRecords = async (cookDistribution) => {\n  const account = await checkConnectedAndGetAddress();\n  const distributionContract = new window.web3.eth.Contract(distributionAbi, cookDistribution);\n  const events = await distributionContract.getPastEvents('TokensWithdrawal', {\n    filter: { userAddress:account },\n    fromBlock: 0,\n  });\n  return events;\n};\n\nexport const distributionZap = async (cookDistribution, poolAddress, amount, callback) => {\n  const account = await checkConnectedAndGetAddress();\n  const distributionContract = new window.web3.eth.Contract(distributionAbi, cookDistribution);\n  await distributionContract.methods\n    .zap(new BigNumber(amount).toFixed(),poolAddress)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n      callback(hash);\n    });\n};\n\n\n/** Admin functions (TESTING ONLY) */\nexport const setDay = async (cookDistribution, dayNumber) => {\n  const account = await checkConnectedAndGetAddress();\n  const distributionContract = new window.web3.eth.Contract(distributionAbi, cookDistribution);\n  await distributionContract.methods\n    .setToday(new BigNumber(dayNumber))\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const setCookPrice = async (oracle, price) => {\n  const account = await checkConnectedAndGetAddress();\n  const oracleContract = new window.web3.eth.Contract(oracleAbi, oracle);\n  await oracleContract.methods\n    .set(new BigNumber(price))\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// deployer account only\nexport const updatePriceFeed = async (cookDistribution) => {\n  const account = await checkConnectedAndGetAddress();\n  const distributionContract = new window.web3.eth.Contract(distributionAbi, cookDistribution);\n  await distributionContract.methods\n    .updatePriceFeed()\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const setWETHPrice = async (priceComsumer, price) => {\n  const account = await checkConnectedAndGetAddress();\n  const priceComsumerContract = new window.web3.eth.Contract(priceComsumerAbi, priceComsumer);\n  await priceComsumerContract.methods\n    .set(new BigNumber(price))\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const setPoolStakeLockupDuration = async (pool, lockupDays) => {\n  const account = await checkConnectedAndGetAddress();\n  const poolContract = new window.web3.eth.Contract(mockPoolAbi, pool);\n  await poolContract.methods\n    .setStakeLockupDuration(new BigNumber(lockupDays).toFixed())\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const setPoolRewardPerBlock = async (pool, rewards) => {\n  const account = await checkConnectedAndGetAddress();\n  const poolContract = new window.web3.eth.Contract(mockPoolAbi, pool);\n  await poolContract.methods\n    .setRewardPerBlock(new BigNumber(rewards).toFixed())\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const setPoolBlockNumber = async (pool, blockNumber) => {\n  const account = await checkConnectedAndGetAddress();\n  const poolContract = new window.web3.eth.Contract(mockPoolAbi, pool);\n  await poolContract.methods\n    .setBlockNumber(new BigNumber(blockNumber).toFixed())\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const setPoolBlockTimestamp = async (pool, blockTimestamp) => {\n  const account = await checkConnectedAndGetAddress();\n  const poolContract = new window.web3.eth.Contract(mockPoolAbi, pool);\n  await poolContract.methods\n    .setBlockTimestamp(new BigNumber(blockTimestamp).toFixed())\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n","import React, { useState } from 'react';\n\nimport {\n  Button, IdentityBadge, IconConnect, IconPower, LinkBase,\n} from '@aragon/ui';\n\nimport { connect } from '../../utils/web3';\n\ntype connectButtonProps = {\n  user: string,\n  setUser: Function\n}\n\nfunction ConnectButton({ user, setUser }: connectButtonProps) {\n  const [isConnected, setIsConnected] = useState(false);\n\n  const connectWeb3 = async () => {\n    const address = await connect();\n    if (address === false) return;\n    setIsConnected(true);\n    setUser(address);\n  };\n\n  const disconnectWeb3 = async () => {\n    setIsConnected(false);\n    setUser('');\n  };\n\n  return isConnected ? (\n    <>\n      <div style={{ paddingTop: 5, paddingRight: 5 }}>\n        <LinkBase onClick={disconnectWeb3} size=\"small\">\n          {' '}\n          <IconPower />\n          {' '}\n        </LinkBase>\n      </div>\n        <IdentityBadge entity={user}  />\n\n    </>\n  ) : (\n    <Button icon={<IconConnect />} label=\"Connect Wallet\" onClick={connectWeb3} />\n  );\n}\n\n\nexport default ConnectButton;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, LinkBase, SidePanel, useViewport } from '@aragon/ui';\nimport ConnectButton from './ConnectButton';\n\ntype NavbarProps = {\n  theme:string,\n  updateTheme: Function,\n  user: string,\n  setUser: Function\n}\n\nfunction NavBar({\n  theme, updateTheme, user, setUser,\n}:NavbarProps) {\n  const history = useHistory();\n  const [isHome, updateIsHome] = useState(true);\n  const [opened, setOpened] = useState(false)\n  const [page, setPage] = useState(\"\");\n  const { below, above } = useViewport()\n  useEffect(() => {\n    const home = history.location.pathname === '/';\n    updateIsHome(home);\n    return history.listen((location) => {\n      setPage(location.pathname)\n      const home = history.location.pathname === '/';\n      updateIsHome(home);\n    })\n  }, [user, history]);\n\n  return (\n    <>\n    <SidePanel title={\"Menu\"} onClose={()=>{setOpened(false)}} opened={opened}>\n      <LinkButton\n        title=\"Home\"\n        onClick={() => {\n          history.push('/');\n        }}\n        isSelected={page==='/'}\n      />\n      <LinkButton\n        title=\"Distribution\"\n        onClick={() => {\n          setOpened(false)\n          history.push('/distribution/');\n        }}\n        isSelected={page.includes('/distribution')}\n      />\n      <LinkButton\n        title=\"Pools\"\n        onClick={() => {\n          setOpened(false)\n          history.push('/pools/');\n        }}\n        isSelected={page.includes('/pools')}\n      />\n      <LinkButton\n        title=\"Admin (TESTING ONLY)\"\n        onClick={() => {\n          setOpened(false)\n          history.push('/admin/');\n        }}\n        isSelected={page.includes('/admin')}\n      />\n      <ConnectButton user={user} setUser={setUser} />\n    </SidePanel>\n    {below('medium') && (<Bar secondary={(\n        <span style={{ fontSize: 24 }}>\n        <i className=\"fas fa-bars\" onClick={() => setOpened(true)}/>\n        </span>\n    )}/>)}\n    {above('medium') && (<Bar\n      primary={\n        (\n          <>\n\n            <LinkBase onClick={ ()=>{\n               history.push('/')\n            }} style={{height:'50%'}}>\n              <img src='https://www.cook.finance/wp-content/uploads/2020/12/Cook_logo-main-new.svg' style={{height:'100%'}} />\n            </LinkBase>\n            \n            <LinkButton\n              title=\"Home\"\n              onClick={() => {\n                history.push('/');\n              }}\n              isSelected={page==='/'}\n            />\n            <LinkButton\n              title=\"Distribution\"\n              onClick={() => {\n                history.push('/distribution/');\n              }}\n              isSelected={page.includes('/distribution')}\n            />\n            <LinkButton\n              title=\"Pools\"\n              onClick={() => {\n                history.push('/pools/');\n              }}\n              isSelected={page.includes('/pools')}\n            />\n            <LinkButton\n              title=\"Admin (TESTING ONLY)\"\n              onClick={() => {\n                history.push('/admin/');\n              }}\n              isSelected={page.includes('/admin')}\n            />\n          </>\n        )\n      }\n      secondary={(\n        <>\n          <ConnectButton user={user} setUser={setUser} />\n\n        </>\n      )}\n    />)}\n\n    </>\n  );\n}\n\n\ntype linkButtonProps = {\n  title:string,\n  onClick: Function,\n  isSelected?:boolean\n}\n\nfunction LinkButton({ title, onClick, isSelected = false }:linkButtonProps) {\n  return (\n    <div style={{ paddingLeft: 40 }}>\n      <LinkBase onClick={onClick}>\n        <div style={{ padding: '1%', opacity: isSelected ? 1 : 0.5, fontSize: 20, lineHeight:3 }}>{title}</div>\n      </LinkBase>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Header, Box, LinkBase, Tag, Text\n} from '@aragon/ui';\nimport { Container, Row, Col } from 'react-grid-system';\nfunction HomePage() {\n  const history = useHistory();\n\n  return (\n    <>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center', width:'100%' }}>\n        <div style={{ marginLeft: '2%'  }}>\n          <Header primary=\"COOK Protocol\" />\n          <Text>Cook Protocol is a completely decentralized Ethereum-based asset management platform built for investors and professional asset managers to unlock an entirely new universe of DeFi innovations.</Text>\n        </div>\n      </div>\n\n      <Container >\n        <Row style={{marginRight:0}}>\n          <MainButton\n            title=\"Distribution\"\n            description=\"Manage Cook balance and withdraw.\"\n            icon={<i className=\"fas fa-wallet\"/>}\n            onClick={() => {\n              history.push('/distribution/');\n            }}\n          />\n          <MainButton\n            title=\"Pools\"\n            description=\"Earn rewards for providing liquidity.\"\n            icon={<i className=\"fas fa-parachute-box\"/>}\n            onClick={() => {\n              history.push('/pools/');\n            }}\n          />\n          </Row>\n      </Container>\n\n    </>\n  );\n}\n\ntype MainButtonPropx = {\n  title: string,\n  description: string,\n  icon: any,\n  onClick: Function,\n  tag?:string\n}\n\nfunction MainButton({\n  title, description, icon, onClick, tag,\n}:MainButtonPropx) {\n  return (\n    <Col xs={12} md={4}>\n    <LinkBase onClick={onClick} style={{ width:\"100%\", margin:10 }}>\n      <Box>\n        <div style={{ padding: 10, fontSize: 18 }}>\n          {title}\n          {tag ? <Tag>{tag}</Tag> : <></>}\n        </div>\n        <span style={{ fontSize: 48 }}>\n          {icon}\n        </span>\n        {/*<img alt=\"icon\" style={{ padding: 10, height: 64 }} src={iconUrl} />*/}\n        <div style={{ paddingTop: 5, opacity: 0.5, whiteSpace: 'normal'}}>\n          {description}\n        </div>\n\n      </Box>\n    </LinkBase>\n    </Col>\n  );\n}\n\nexport default HomePage;\n","import Web3 from 'web3';\n\nconst poolAbi = require('../constants/abi/Pool.json');\nconst mockPoolAbi = require('../constants/abi/MockPool.json');\nconst distributionAbi = require('../constants/abi/TokenDistribution.json');\nconst dollarAbi = require('../constants/abi/Dollar.json');\nconst priceComsumerAbi = require('../constants/abi/PriceConsumer.json');\n\n// eslint-disable-next-line no-undef\n// console.log(window.ethereum);\nlet web3 = new Web3(window.ethereum?window.ethereum:null);\n\n/**\n *\n * @param {string} token address\n * @param {string} account address\n * @param {string} spender address\n * @return {Promise<string>}\n */\nexport const getTokenAllowance = async (token, account, spender) => {\n  const tokenContract = new web3.eth.Contract(dollarAbi, token);\n  return tokenContract.methods.allowance(account, spender).call();\n};\n\n/**\n *\n * @param {string} token address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getTokenBalance = async (token, account) => {\n  if (account === '') return '0';\n  const tokenContract = new web3.eth.Contract(dollarAbi, token);\n  return tokenContract.methods.balanceOf(account).call();\n};\n\n// Pool\n/**\n *\n * @param {string} pool address\n * @return {Promise<string>}\n */\nexport const getTotalStaked = async (pool) => {\n  if (!window.ethereum) {\n    return 0;\n  }\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n  return poolContract.methods.totalStaked().call();\n};\n\nexport const getStakeLockupDuration = async (pool) => {\n  if (!window.ethereum) {\n    return 0;\n  }\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n  return poolContract.methods.getStakeLockupDuration().call();\n};\n\nexport const getRewardPerBlock = async (pool) => {\n  if (!window.ethereum) {\n    return 0;\n  }\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n  return poolContract.methods.getRewardPerBlock().call();\n};\n\n/**\n *\n * @param {string} pool address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getPoolBalanceOfStaked = async (pool, account) => {\n  if (account === '') return '0';\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n  return poolContract.methods.balanceOfStaked(account).call();\n};\n\n/**\n *\n * @param {string} pool address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getPoolBalanceOfRewarded = async (pool, account) => {\n  if (account === '') return '0';\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n  return poolContract.methods.balanceOfRewarded(account).call();\n};\n\n/**\n *\n * @param {string} pool address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getPoolBalanceOfVesting = async (pool, account) => {\n  if (account === '') return '0';\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n  return poolContract.methods.balanceOfVesting(account).call();\n};\n\n/**\n *\n * @param {string} pool address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getPoolBalanceOfClaimable = async (pool, account) => {\n  if (account === '') return '0';\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n  return poolContract.methods.balanceOfClaimable(account).call();\n};\n\n/**\n *\n * @param {string} pool address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getPoolBalanceOfClaimed = async (pool, account) => {\n  if (account === '') return '0';\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n  return poolContract.methods.balanceOfClaimed(account).call();\n};\n\n/**\n *\n * @param {string} pool address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getPoolBalanceOfUnstakable = async (pool, account) => {\n  if (account === '') return '0';\n  const poolContract = new web3.eth.Contract(poolAbi, pool);\n  return poolContract.methods.balanceOfUnstakable(account).call();\n};\n\n/**\n *\n * @param {string} cookDistribution address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getDistributionVestingAmount = async (cookDistribution, account) => {\n  const distributionContract = new web3.eth.Contract(distributionAbi, cookDistribution);\n  return distributionContract.methods.getUserVestingAmount(account).call();\n};\n\n/**\n *\n * @param {string} cookDistribution address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getDistributionAvalibleAmount = async (cookDistribution, account) => {\n  const distributionContract = new web3.eth.Contract(distributionAbi, cookDistribution);\n  return distributionContract.methods.getUserAvailableAmount(account,0).call();\n};\n\n/**\n *\n * @param {string} cookDistribution address\n * @param {string} account address\n * @return {Promise<string>}\n */\nexport const getDistributionVestedAmount = async (cookDistribution, account) => {\n  const distributionContract = new web3.eth.Contract(distributionAbi, cookDistribution);\n  return distributionContract.methods.getUserVestedAmount(account,0).call();\n};\n\n\n\n/**\n *\n * @param {string} cookDistribution address\n * @return {Promise<string>}\n */\nexport const getDistributionStartTimestamp = async (cookDistribution) => {\n  const distributionContract = new web3.eth.Contract(distributionAbi, cookDistribution);\n  return distributionContract.methods.start().call();\n};\n\n\n\n/** Admin functions (TESTING ONLY) */\nexport const getTodayNumber = async (cookDistribution) => {\n  const distributionContract = new web3.eth.Contract(distributionAbi, cookDistribution);\n  return distributionContract.methods.today().call();\n};\n\n\nexport const getWETHPrice = async (priceComsumer) => {\n  const priceComsumerContract = new web3.eth.Contract(priceComsumerAbi, priceComsumer);\n  return priceComsumerContract.methods.getLatestPrice().call();\n};\n\n// deployer account only\nexport const getSevenMAPrice = async (cookDistribution) => {\n  const distributionContract = new web3.eth.Contract(distributionAbi, cookDistribution);\n  return distributionContract.methods.getLatestSevenSMA().call();\n};\n\nexport const getBlockNumber = async (pool) => {\n  const poolContract = new web3.eth.Contract(mockPoolAbi, pool);\n  return poolContract.methods.blockNumberE().call();\n};\n\nexport const getBlockTimestamp = async (pool) => {\n  const poolContract = new web3.eth.Contract(mockPoolAbi, pool);\n  return poolContract.methods.blockTimestampE().call();\n};\n","/* eslint-disable camelcase */\n// eslint-disable-next-line import/prefer-default-export\nexport const POOLS = [\n  {'name': '1 UNI-V2 (WETH/COOK)', 'address':'0x59c7E6B2c565Ff92B762523BD6B778CE66dC0302'},\n  {'name': '2 UNI-V2 (WETH/COOK)', 'address':'0x1F570bf89d86a2C43B9b8d0867267719FC58173D'},\n  {'name': '3 UNI-V2 (WETH/COOK)', 'address':'0x086bCD73D03A5e1163A9224Fa09dC5cF70d73094'},\n  {'name': '4 UNI-V2 (WETH/COOK)', 'address':'0x6b07B7A11cF992B436DE5d3bf28F50eBA606649b'}\n];\nexport const CookDistribution = '0xD63c1597435d2E16d7f216A12A3dA65B3bF12241';\nexport const Oracle = '0xf342D22125Eddc24c6c3D716E048388D1415C20d';\nexport const PriceConsumer = '0x9687796759CAbecC1674A4Aaf23889fC9EC2FCA2';\n","import BigNumber from 'bignumber.js';\n\n/**\n * Convert 10.999 to 10999000\n */\nexport function toBaseUnitBN(rawAmt:string| number| BigNumber, decimals: number):BigNumber {\n  const raw = new BigNumber(rawAmt);\n  const base = new BigNumber(10);\n  const decimalsBN = new BigNumber(decimals);\n  return raw.times(base.pow(decimalsBN)).integerValue();\n}\n\n/**\n * Convert 10999000 to 10.999\n */\nexport const toTokenUnitsBN = (tokenAmount:string|number|BigNumber, tokenDecimals:number): BigNumber => {\n  const amt = new BigNumber(tokenAmount);\n  const digits = new BigNumber(10).pow(new BigNumber(tokenDecimals));\n  return amt.div(digits);\n};\n\nexport const isPos = (amount: BigNumber): boolean => {\n  return !amount.isZero() && amount.isPositive();\n};\n","export const UNI = {\n  addr: '0xfde0923cb9337edab8e8f171a1a4c71da488742b',\n  decimals: 18,\n  symbol: 'UNI',\n};\n\nexport const WETH = {\n  addr: '0xc778417e063141139fce010982780140aa0cd5ab',\n  decimals: 18,\n  symbol: 'WETH',\n};\n\nexport const COOK = {\n  addr: '0x21896eec707465c38a36c94b221df04a354f6b79',\n  decimals: 18,\n  symbol: 'COOK',\n};\n","import React from 'react';\nimport { IdentityBadge } from '@aragon/ui';\n\ntype AddressBlockProps = {\n  label:string,\n  address: string\n}\n\nfunction AddressBlock({ label, address }: AddressBlockProps) {\n  return (\n    <>\n      <div style={{ fontSize: 16, padding: 3 }}>{label}</div>\n      <div style={{ padding: 5 }}>\n        <IdentityBadge entity={address} shorten />\n      </div>\n    </>\n  );\n}\n\nexport default AddressBlock;\n","export default {\n  _name: 'dark',\n  _appearance: 'dark',\n\n  primary: \"rgb(10,10,42)\",\n  secondary: \"rgb(29,33,59)\",\n  button: \"rgb(88,220,96)\",\n  secondaryButton:\"rgb(253,235,63)\",\n\n  background: '#0A0A2A',\n  border: '#2c3a58',\n  overlay: '#28334c',\n  content: '#FFFFFF',\n  contentSecondary: '#7c99d6',\n\n  surface: '#1D213B',\n  surfaceContent: '#FFFFFF',\n  surfaceContentSecondary: '#7c99d6',\n  surfaceIcon: '#6683c3',\n  surfaceUnder: '#2d3954',\n  surfaceOpened: '#7c99d6',\n  surfaceSelected: '#405071',\n  surfaceHighlight: '#405071',\n  surfacePressed: '#3f4e6d',\n  surfaceInteractive: '#405071',\n\n  feedbackSurface: '#4c5d82',\n  feedbackSurfaceContent: '#212B36',\n  feedbackSurfaceContentSecondary: '#637381',\n\n  warning: '#ffa410',\n  warningSurface: '#656569',\n  warningSurfaceContent: '#ffa410',\n\n  info: '#00d2ff',\n  infoSurface: '#415279',\n  infoSurfaceContent: '#18d4fb',\n\n  help: '#7C80F2',\n  helpContent: '#FFFFFF',\n  helpSurface: '#FFFFFF',\n  helpSurfaceContent: '#212B36',\n\n  negative: '#FF6969',\n  negativeContent: '#FFFFFF',\n  negativeSurface: '#655c72',\n  negativeSurfaceContent: '#ff5454',\n\n  positive: '#2cc68f',\n  positiveContent: '#FFFFFF',\n  positiveSurface: '#35585e',\n  positiveSurfaceContent: '#2cc68f',\n\n  badge: '#415279',\n  badgeContent: '#ffffff',\n  badgePressed: '#4c5d82',\n\n  tagIdentifier: '#564090',\n  tagIdentifierContent: '#b6a1ff',\n\n  tagNew: '#35585e',\n  tagNewContent: '#2cc68f',\n\n  tagIndicator: '#415279',\n  tagIndicatorContent: '#00d3ff',\n\n  tagActivity: '#00d2ff',\n  tagActivityContent: '#FFFFFF',\n\n  hint: '#6683c3',\n  link: '#0ca5ff',\n  focus: '#0ca5ff',\n  selected: '#08BEE5',\n  selectedContent: '#FFFFFF',\n  selectedDisabled: '#212B36',\n\n  disabled: '#3f4e6f',\n  disabledContent: '#8497bf',\n  disabledIcon: '#6683c3',\n\n  control: '#57698c',\n  controlBorder: '#2c3a58',\n  controlBorderPressed: '#65779a',\n  controlDisabled: '#3f4e6f',\n  controlSurface: '#F9FAFC',\n  controlUnder: '#F1F3F7',\n\n  accent: '#08BEE5',\n  accentStart: '#32fff5',\n  accentEnd: '#08BEE5',\n  accentContent: '#FFFFFF',\n\n  floating: '#1c2539',\n  floatingContent: '#FFFFFF',\n\n  green: '#9BC75A',\n  yellow: '#F7D858',\n  red: '#F08658',\n  blue: '#3E7BF6',\n  brown: '#876559',\n  purple: '#7C80F2',\n}\n","import React from 'react';\n\nimport BigNumber from 'bignumber.js';\nimport colors from '../../constants/colors';\nimport { Row, Col } from 'react-grid-system';\ntype BlanceBlockProps = {\n  asset: string,\n  balance: BigNumber | string | number\n  suffix?: any\n  type?: string\n}\n\nfunction BalanceBlock({ asset, balance, suffix=\"\", type=\"\" }: BlanceBlockProps) {\n  let integer = '0';\n  let digits = '0';\n  if (new BigNumber(balance).gt(new BigNumber(0))) {\n    const str = new BigNumber(balance).toString();\n    const split = str.split('.');\n    integer = split[0];\n    digits = split.length > 1 ? str.split('.')[1] : '0';\n    digits = digits.length > 2 ? digits.substr(0, 2) : digits\n  }\n  if(type === \"row\"){\n    return(\n      <>\n      <Row>\n        <Col md={12} style={{padding:5}}>{asset}</Col>\n        <Col md={12} style={{ padding:5,fontSize: 30, color:colors.button}}>\n          <span style={{ }}>{integer}</span>\n          .\n          <span style={{}}>\n            {digits}\n          </span>\n          {suffix === \"\" ? '' : <span style={{ fontSize: 18 }}> {suffix}</span> }\n        </Col>\n        </Row>\n      </>\n    )\n  }\n  if(type === \"block\"){\n    return(\n      <>\n      <Row style={{padding:15}}>\n        <Col xs={12} md={6} style={{padding:0, fontSize: 24, textAlign:\"left\"}}>{asset}</Col>\n        <Col xs={12} md={6} style={{ padding:0,fontSize: 30, color:colors.button, textAlign:\"right\"}}>\n          <span style={{ }}>{integer}</span>\n          .\n          <span style={{}}>\n            {digits}\n          </span>\n          {suffix === \"\" ? '' : <span style={{ fontSize: 30 }}> {suffix}</span> }\n        </Col>\n        </Row>\n      </>\n    )\n  }\n  return (\n    <>\n      <div style={{ fontSize: 14, padding: 3 }}>{asset}</div>\n      <div style={{ padding: 3 }}>\n        <span style={{ fontSize: 30 }}>{integer}</span>\n        .\n        <span style={{ fontSize: 30 }}>\n          {' '}\n          {digits}\n          {' '}\n        </span>\n        {suffix === \"\" ? '' : <span style={{ fontSize: 30 }}> {suffix}</span> }\n      </div>\n    </>\n  );\n}\n\nexport default BalanceBlock;\n","import React from 'react';\n\nimport {\n  ButtonBase,\n} from '@aragon/ui';\n\nfunction MaxButton({ onClick }:{ onClick: Function }) {\n  return (\n    <div style={{ padding: 3 }}>\n      <ButtonBase onClick={onClick}>\n        <span style={{ opacity: 0.5 }}> Max </span>\n      </ButtonBase>\n    </div>\n  );\n}\n\nexport default MaxButton;\n","import React from 'react';\n\nfunction HelperText({ label, amt }: { label: string, amt: string }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}>\n          {label}\n        </span>\n        <span style={{ fontSize: 13 }}>\n          {parseFloat(amt).toFixed(5)}\n        </span>\n      </div>\n    );\n  } return <div style={{ padding: 3, opacity: 0.5 }}>{label}</div>;\n}\n\n\nexport default HelperText;\n","import React from 'react';\nimport BigNumber from 'bignumber.js';\n\nfunction PriceSection({\n  label, amt, symbol = '', forceDisplay = false,\n}:{label:string, amt: string|number|BigNumber, symbol?:string, forceDisplay?:boolean }) {\n  const amtBN = new BigNumber(amt);\n  if (amtBN.gt(new BigNumber(0)) || forceDisplay) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}>{label}</span>\n        <span style={{ fontSize: 13 }}>{amtBN.toNumber().toFixed(5)}</span>\n        <span style={{ fontSize: 13 }}>{symbol}</span>\n      </div>\n    );\n  }\n  return <div style={{ padding: 3, opacity: 0.5 }} />;\n}\n\n\nexport default PriceSection;\n","import React, { ReactChild } from 'react';\n\ntype commentProps = {\n  text: string | ReactChild\n}\n\nfunction Comment({ text }: commentProps) {\n  return (\n    <div style={{ padding: 5, opacity: 0.5 }}>\n      {text}\n    </div>\n  );\n}\n\nexport default Comment;\n","import styled from 'styled-components';\n\nconst FlexWrapper = styled.div`\n  // display: flex;\n  padding-left: 20%;\n  padding-right: 20%;\n`;\n\nexport default FlexWrapper;\n","import React from 'react';\nimport { Checkbox, useTheme } from '@aragon/ui';\nimport styled from 'styled-components';\n\ntype checkBoxProps = {\n  text: string,\n  checked: boolean,\n  onCheck: Function\n}\n\nfunction MyCheckBox({ text, checked, onCheck }: checkBoxProps) {\n  const theme = useTheme();\n  return (\n    <CheckBoxWrapper theme={theme}>\n      <Checkbox\n        checked={checked}\n        onChange={onCheck}\n      />\n      <span style={{ paddingBottom: '5px' }}>\n        {text}\n      </span>\n      <br />\n    </CheckBoxWrapper>\n  );\n}\n\nexport default MyCheckBox;\n\nconst CheckBoxWrapper = styled.div`{\n  padding: 5px;\n  font-size: 14px;\n  color: ${(props) => props.theme.surfaceContentSecondary}\n}`;\n","import React from 'react';\n\nimport BigNumber from 'bignumber.js';\n\ntype NumberBlockProps = {\n  title: string,\n  num: BigNumber | string | number\n}\n\nfunction NumberBlock({ title, num }: NumberBlockProps) {\n  const numNum = new BigNumber(num).toNumber();\n\n  return (\n    <>\n      <div style={{ fontSize: 14, padding: 3 }}>{title}</div>\n      <div style={{ fontSize: 24, padding: 3 }}>{numNum}</div>\n\n    </>\n  );\n}\n\nexport default NumberBlock;\n","import React from 'react';\nimport colors from '../../constants/colors';\n\nfunction Card({ label, value }: { label: string, value: any }) {\n    return (\n      <div style={{ padding: 20, backgroundColor:colors.secondary, width:\"100%\", margin:\"10pt auto\", textAlign:\"center\", borderRadius:10}}>\n        <span style={{ fontSize: 20 }}>\n          {label}\n        </span>\n        <hr/>\n        <span style={{ fontSize: 40, color:colors.button }}>\n          {value}\n        </span>\n      </div>\n    );\n}\n\n\nexport default Card;\n","import React from 'react';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  TextInput,Text\n} from '@aragon/ui';\nimport colors from '../../constants/colors';\nimport { Container, Row, Col } from 'react-grid-system';\nimport MaxButton from './MaxButton';\ntype BigNumberInputProps = {\n  value: BigNumber,\n  setter: (value: BigNumber) => void\n  adornment?: any,\n  disabled?: boolean\n  max?:Function\n}\n\nfunction BigNumberInput({ value, setter, adornment, disabled=false, max }: BigNumberInputProps) {\n  return (\n    <Container style={{marginBottom:5}}>\n    <Row >\n      <Col xs={10}><TextInput\n        type=\"number\"\n        style={{border:\"0pt\", borderBottom: `2px solid ${colors.button}`, fontSize:24, fontWeight:'bold'}}\n        adornmentPosition=\"end\"\n        adornmentSettings={{padding:5,width:70}}\n        adornment={max && <MaxButton onClick={max}/>}\n        wide\n        value={value.isNegative() ? '' : value}\n        onChange={(event) => {\n          if (event.target.value) {\n            setter(new BigNumber(event.target.value));\n          } else {\n            setter(new BigNumber(-1));\n          }\n        }}\n        onBlur={() => {\n          if (value.isNegative()) {\n            setter(new BigNumber(0))\n          }\n        }}\n        disabled={disabled}\n      /></Col>\n      <Col xs={2} style={{fontSize:20, color:\"grey\", marginTop:5, padding:0}}><Text >{adornment}</Text></Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default BigNumberInput;\n","import React from 'react';\nimport {\n  ButtonBase, useViewport\n} from '@aragon/ui';\n\nfunction ActionButton({ onClick, color, label, disabled }:{ label:string, color:string, onClick: Function, disabled:boolean }) {\n  const { below } = useViewport()\n  return (\n      <ButtonBase\n        onClick={onClick}\n        style={{marginTop:10,marginBottom:10, padding: \"8pt 20pt\", borderRadius:40, backgroundColor:color, minWidth:below(768)?150:180 }}\n        disabled={disabled}\n      >\n        <span style={{ fontSize:16, color:\"black\", fontWeight:\"bold\"}}> {label} </span>\n      </ButtonBase>\n  );\n}\n\nexport default ActionButton;\n","import React, { useState } from 'react';\nimport {\n  Table, TableRow, TableCell, Text, useViewport, useTheme\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport colors from '../../constants/colors';\n\ntype PoolProps = {name:string,address:string,rewardPerBlock:BigNumber,lockedUpPeriod:BigNumber};\n\nfunction ListTable({ pools, selectedPool, setSelectedPool, detailMode }: {pools?: Array<PoolProps>, selectedPool:string, setSelectedPool?:Function, detailMode?:boolean }) {\n\n  const { below } = useViewport()\n  const [hovered, setHovered] = useState('');\n  const theme = useTheme();\n\n  const width= below('small')?'100%': '85%'\n  const padding =below(1400)?'10pt 7pt': '25pt 15pt'\n  return (\n      <Table style={{fontSize:below('medium')?12:16, width, margin:\"0 auto\", marginBottom:20}}>\n              <TableRow style={{fontWeight:\"bold\"}}>\n                <TableCell style={{ padding}}>\n                  <Text >LP TOKEN</Text>\n                </TableCell>\n                <TableCell style={{ padding}}>\n                  <Text>LOCK-UP {below('medium') && <br/>} PERIOD</Text>\n                </TableCell >\n                <TableCell style={{ padding}}>\n                  <Text>APY</Text>\n                </TableCell>\n                {detailMode && <TableCell style={{ padding}}>\n                  <Text>COOK/BLOCK</Text>\n                </TableCell>}\n              </TableRow>\n              {pools && pools.map(pool => {\n                const selectedColor = selectedPool === pool.address ?theme.surfaceSelected:theme.surface\n                let textColor = (selectedPool === pool.address)? colors.yellow: (hovered === pool.address?colors.help:'#ffffff');\n                return(\n                  <TableRow\n                    style={{color:textColor,cursor:hovered === pool.address?'pointer':'auto'}}\n                    onMouseEnter={()=>{\n                      setHovered(pool.address);\n                    }}\n                    onMouseLeave={()=>{\n                      setHovered('');\n                    }}\n                    key={pool.address}\n                    onClick={() => {\n                      setSelectedPool && setSelectedPool(pool.address)\n                    }}\n                  >\n                    <TableCell style={{backgroundColor:selectedColor, padding}}>\n                      <Text>{pool.name}</Text>\n                    </TableCell>\n                    <TableCell style={{backgroundColor:selectedColor, padding}}>\n                      <Text>{pool.lockedUpPeriod} days lock up</Text>\n                    </TableCell>\n                    <TableCell style={{backgroundColor:selectedColor, padding}}>\n                      <Text>TO BE CALCULATED</Text>\n                    </TableCell>\n                    {detailMode && <TableCell style={{backgroundColor:selectedColor, padding}}>\n                      <Text>{pool.rewardPerBlock.toString()}</Text>\n                    </TableCell>}\n\n                  </TableRow>\n                )\n              })}\n          </Table>\n\n  );\n}\n\nexport default ListTable;\n","import React, { useState } from 'react';\nimport { Modal } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { BalanceBlock } from '../common/index';\nimport {unstake} from '../../utils/web3';\nimport {isPos, toBaseUnitBN} from '../../utils/number';\nimport {UNI} from \"../../constants/tokens\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport ActionButton from \"../common/ActionButton\";\nimport colors from '../../constants/colors';\nimport { Container, Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\ntype UnstakeProps = {\n  user: string,\n  poolAddress: string,\n  unstakable: BigNumber,\n  locked: BigNumber,\n  pools?: Array<any>\n};\n\nfunction Unstake({\n  user, poolAddress, unstakable, locked, pools\n}: UnstakeProps) {\n  const [unstakeAmount, setUnstakeAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false)\n  return (\n    <div>\n    <ActionButton\n      label={\"WITHDRAW\"}\n      color={colors.button}\n      onClick={() => {\n        setOpened(true)\n      }}\n      disabled={poolAddress === '' || user === ''}\n    />\n    <Modal visible={opened} onClose={()=>setOpened(false)}>\n    <Container style={{flexBasis: '100%', paddingTop: '5%'}}>\n      <ListTable pools={pools} selectedPool={poolAddress}/>\n      <Row>\n        <Col sm={12} lg={6}>\n          <BalanceBlock asset=\"Locked\" balance={locked} suffix={\"UNI-V2\"} type={\"row\"}/>\n        </Col>\n        <Col sm={12} lg={6}>\n          <BalanceBlock asset=\"Available\" balance={unstakable} suffix={\"UNI-V2\"} type={\"row\"}/>\n        </Col>\n        <Col sm={12} lg={12}>\n              <>\n                <BigNumberInput\n                  adornment=\"UNI-V2\"\n                  value={unstakeAmount}\n                  setter={setUnstakeAmount}\n                  max={() => {\n                    setUnstakeAmount(unstakable);\n                  }}\n                />\n              \n              </>\n            </Col>\n          <Col sm={12} lg={12} style={{textAlign:\"center\"}}>\n              <ActionButton\n                label={\"WITHDRAW\"}\n                color={colors.button}\n                onClick={() => {\n                  unstake(\n                    poolAddress,\n                    toBaseUnitBN(unstakeAmount, UNI.decimals),\n                    (hash) => {\n                      setUnstakeAmount(new BigNumber(0))\n                      setOpened(false)\n                    }\n                  );\n                }}\n                disabled={poolAddress === '' || user === '' || !isPos(unstakeAmount) || unstakeAmount.isGreaterThan(unstakable)}\n              />\n          </Col>\n          </Row>\n        </Container>\n    </Modal>\n    </div>\n  );\n}\n\nexport default Unstake;\n","import React, { useState } from 'react';\nimport { Modal } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { BalanceBlock } from '../common/index';\nimport {approve, stake} from '../../utils/web3';\nimport {isPos, toBaseUnitBN} from '../../utils/number';\nimport {UNI} from \"../../constants/tokens\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport ActionButton from \"../common/ActionButton\";\nimport colors from '../../constants/colors';\nimport { Container, Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\ntype StakeProps = {\n  user: string,\n  poolAddress: string,\n  balance: BigNumber,\n  allowance: BigNumber,\n  staked: BigNumber\n  pools?: Array<any>\n};\n\nfunction Stake({\n  user, poolAddress,\n  staked, balance, allowance,pools\n}: StakeProps) {\n  const [stakeAmount, setStakeAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false)\n  return (\n    <div>\n    <ActionButton\n      label={\"DEPOSIT\"}\n      color={colors.button}\n      onClick={() => {\n        setOpened(true)\n      }}\n      disabled={poolAddress === '' || user === ''}\n    />\n    <Modal visible={opened} onClose={()=>setOpened(false)}>\n    <Container style={{flexBasis: '100%', paddingTop: '5%'}}>\n      <ListTable pools={pools} selectedPool={poolAddress}/>\n      <Row >\n        <Col sm={12} xl={12}>\n          <BalanceBlock asset=\"Balance\" balance={balance} suffix={\"UNI-V2\"} type={\"row\"}/>\n        </Col>\n        <Col sm={12} xl={12}>\n\n              <>\n                <BigNumberInput\n                  adornment=\"UNI-V2\"\n                  value={stakeAmount}\n                  setter={setStakeAmount}\n                  max={() => {\n                    setStakeAmount(balance);\n                  }}\n                />\n                \n              </>\n            </Col>\n            {allowance.comparedTo(stakeAmount) > 0 ?\n            <Col md={12} xl={12} style={{textAlign:\"center\"}}>\n              <ActionButton\n                label={\"DEPOSIT\"}\n                color={colors.button}\n                onClick={() => {\n                  stake(\n                    poolAddress,\n                    toBaseUnitBN(stakeAmount, UNI.decimals),\n                    (hash) => {\n                      setStakeAmount(new BigNumber(0))\n                      setOpened(false)\n                    }\n                  );\n                }}\n                disabled={poolAddress === '' || user === '' || !isPos(stakeAmount) || stakeAmount.isGreaterThan(balance)}\n              />\n            </Col>\n            :\n            <Col sm={12} xl={12} style={{textAlign:\"center\"}}>\n              <ActionButton\n                label={\"APPROVE\"}\n                color={colors.button}\n                onClick={() => {\n                  approve(UNI.addr, poolAddress);\n                }}\n                disabled={poolAddress === '' || user === ''}\n              />\n            </Col>\n            }\n            </Row>\n          </Container>\n\n    </Modal>\n    </div>\n  );\n}\n\nexport default Stake;\n","import React, { useState } from 'react';\nimport { Modal } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock\n} from '../common/index';\nimport {claim} from '../../utils/web3';\nimport {isPos, toBaseUnitBN} from '../../utils/number';\nimport {COOK} from \"../../constants/tokens\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport ActionButton from \"../common/ActionButton\";\nimport colors from '../../constants/colors';\nimport { Container, Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\ntype ClaimProps = {\n  user: string,\n  poolAddress: string,\n  claimable: BigNumber,\n  pools?: Array<any>\n};\n\nfunction Claim({\n  user,poolAddress, claimable, pools\n}: ClaimProps) {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false)\n\n  return (\n    <div>\n    <ActionButton\n      label={\"CLAIM\"}\n      color={colors.secondaryButton}\n      onClick={() => {\n        setOpened(true)\n      }}\n      disabled={poolAddress === '' || user === ''}\n    />\n    <Modal visible={opened} onClose={()=>setOpened(false)}>\n    <Container style={{flexBasis: '100%', paddingTop: '5%'}}>\n      <ListTable pools={pools} selectedPool={poolAddress}/>\n        <Row >\n          <Col sm={12} lg={12}>\n          <BalanceBlock asset=\"Claimable\" balance={claimable} suffix={\"COOK\"} type={\"row\"}/>\n          </Col>\n        {/* Claim COOK rewards within Pool */}\n          <Col sm={12} lg={12}>\n              <>\n                <BigNumberInput\n                  adornment=\"COOK\"\n                  value={claimAmount}\n                  setter={setClaimAmount}\n                  max={() => {\n                    setClaimAmount(claimable);\n                  }}\n                />\n\n              </>\n            </Col>\n            <Col sm={12} lg={12} style={{textAlign:\"center\"}}>\n                  <ActionButton\n                    label={\"CLAIM\"}\n                    color={colors.secondaryButton}\n                    onClick={() => {\n                      claim(\n                        poolAddress,\n                        toBaseUnitBN(claimAmount, COOK.decimals),\n                        (hash) => {\n                          setClaimAmount(new BigNumber(0))\n                          setOpened(false)\n                        }\n                      );\n                    }}\n                    disabled={poolAddress === '' || user === '' || !isPos(claimAmount) || claimAmount.isGreaterThan(claimable)}\n                  />\n              </Col>\n        </Row>\n        </Container>\n    </Modal>\n    </div>\n  );\n}\n\nexport default Claim;\n","import React, { useState } from 'react';\nimport { Modal } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { BalanceBlock } from '../common/index';\nimport {harvest} from '../../utils/web3';\nimport {isPos, toBaseUnitBN} from '../../utils/number';\nimport {COOK} from \"../../constants/tokens\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport ActionButton from \"../common/ActionButton\";\nimport colors from '../../constants/colors';\nimport { Container, Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\ntype HarvestProps = {\n  user: string,\n  poolAddress: string,\n  userTotalRewarded: BigNumber,\n  userTotalInVesting: BigNumber,\n  pools?: Array<any>\n};\n\nfunction Harvest({\n  user, poolAddress, userTotalRewarded, userTotalInVesting,pools\n}: HarvestProps) {\n  const [harvestAmount, setHarvestAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false)\n  return (\n    <div>\n    <ActionButton\n      label={\"HARVEST\"}\n      color={colors.secondaryButton}\n      onClick={() => {\n        setOpened(true)\n      }}\n      disabled={poolAddress === '' || user === ''}\n    />\n    <Modal visible={opened} onClose={()=>setOpened(false)} >\n    <Container style={{flexBasis: '100%', paddingTop: '5%'}}>\n      <ListTable pools={pools} selectedPool={poolAddress}/>\n      <Row >\n        <Col sm={12} lg={6}>\n          <BalanceBlock asset=\"To Be Vested\" balance={userTotalRewarded} suffix={\"COOK\"} type={\"row\"}/>\n        </Col>\n        <Col sm={12} lg={6}>\n          <BalanceBlock asset=\"In Vesting\" balance={userTotalInVesting} suffix={\"COOK\"} type={\"row\"}/>\n        </Col>\n        {/* Harvest UNI-V2 within Pool */}\n        <Col sm={12} lg={12}>\n              <>\n                <BigNumberInput\n                  adornment=\"COOK\"\n                  value={harvestAmount}\n                  setter={setHarvestAmount}\n                  max={() => {\n                    setHarvestAmount(userTotalRewarded);\n                  }}\n                />\n              \n              </>\n              </Col>\n        <Col sm={12} lg={12} style={{textAlign:\"center\"}}>\n        <ActionButton\n          label={\"HARVEST\"}\n          color={colors.secondaryButton}\n          onClick={() => {\n            harvest(\n              poolAddress,\n              toBaseUnitBN(harvestAmount, COOK.decimals),\n              (hash) => {\n                setHarvestAmount(new BigNumber(0))\n                setOpened(false)\n              }\n            );\n          }}\n          disabled={poolAddress === '' || user === '' || !isPos(harvestAmount) || harvestAmount.isGreaterThan(userTotalRewarded)}\n        />\n      </Col>\n          </Row>\n        </Container>\n    </Modal>\n    </div>\n  );\n}\n\nexport default Harvest;\n","import React, { useState } from 'react';\nimport {\n  Modal, DropDown\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock, PriceSection\n} from '../common/index';\nimport {approve, zap} from '../../utils/web3';\nimport {toBaseUnitBN, toTokenUnitsBN} from '../../utils/number';\nimport {COOK, WETH} from \"../../constants/tokens\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport colors from '../../constants/colors';\nimport ActionButton from \"../common/ActionButton\";\nimport HelpText from \"../common/HelpText\";\nimport { Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\ntype ZapProps = {\n  user: string,\n  pools: Array<{name:string,address:string,rewardPerBlock:BigNumber,lockedUpPeriod:BigNumber}>,\n  cookAvailable: BigNumber,\n  wethBalance: BigNumber,\n  wethAllowance: BigNumber,\n  pairBalanceWETH: BigNumber,\n  pairBalanceCOOK: BigNumber,\n  selected?:string,\n  type:string,\n};\n\nfunction Zap({\n  user, pools, cookAvailable, wethBalance, wethAllowance, pairBalanceWETH, pairBalanceCOOK, selected, type\n}: ZapProps) {\n\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [wethAmount, setWethAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false)\n  const [selectedPool, setSelectedPool] = useState(selected||'')\n  const [balanceType, setBalanceType] = useState(0)\n\n  const close = () => {\n    setOpened(false);\n    setZapAmount(new BigNumber(0));\n    setWethAmount(new BigNumber(0));\n  }\n\n  const WETHToCOOKRatio = pairBalanceWETH.isZero() ? new BigNumber(1) : pairBalanceWETH.div(pairBalanceCOOK);\n\n  const onChangeAmountCOOK = (amountCOOK) => {\n    if (!amountCOOK) {\n      setWethAmount(new BigNumber(0));\n      return;\n    }\n\n    const amountCOOKBN = new BigNumber(amountCOOK)\n    setZapAmount(amountCOOKBN);\n\n    const amountCOOKBU = toBaseUnitBN(amountCOOKBN, COOK.decimals);\n    const newAmountWETH = toTokenUnitsBN(\n      amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR),\n      COOK.decimals);\n    setWethAmount(newAmountWETH);\n  };\n  const renderPoolZap = () => {\n    return(\n      <div>\n      <ActionButton label={\"Zap\"} color={colors.button} onClick={()=>{\n        setOpened(true)\n      }} disabled={!user}/>\n      <Modal visible={opened} onClose={()=>close()}>\n      <div style={{flexBasis: '100%', paddingTop: '5%'}}>\n          <ListTable pools={pools} selectedPool={selectedPool} setSelectedPool={setSelectedPool}/>\n          <Row style={{padding:10}}>\n          <Col><BalanceBlock asset=\"Available COOK\" balance={cookAvailable} suffix={\"COOK\"} type={\"row\"}/></Col>\n          <Col>\n          <BalanceBlock asset=\"WETH Balance\" balance={wethBalance} type={\"row\"} suffix={<DropDown\n                items={['WETH']}\n                selected={balanceType}\n                onChange={setBalanceType}\n              />}/>\n          </Col>\n          </Row>\n        <Row>\n          <Col xs={12}>\n              <BigNumberInput\n                adornment=\"COOK\"\n                value={zapAmount}\n                max={() => {\n                  onChangeAmountCOOK(cookAvailable);\n                }}\n                setter={onChangeAmountCOOK}\n              />\n              <PriceSection label=\"Requires \" amt={wethAmount} symbol=\" WETH\"/>\n\n          </Col>\n          {wethAllowance.comparedTo(wethAmount) > 0 ?\n            <Col xs={12} style={{textAlign:\"center\"}}>\n              <ActionButton\n                label={\"Zap\"} color={colors.button}\n                onClick={() => {\n                  if(selectedPool){\n                    zap(\n                        selectedPool,\n                        toBaseUnitBN(zapAmount, COOK.decimals),\n                        (hash) => {\n                          setWethAmount(new BigNumber(0));\n                          setZapAmount(new BigNumber(0));\n                          close()\n                        }\n                      );\n                  }\n                }}\n                disabled={selectedPool === '' || user === ''}\n              />\n            </Col>\n          :\n          <Col xs={12} style={{textAlign:\"center\"}}>\n            <ActionButton\n              color={colors.button}\n              label=\"Approve\"\n              onClick={() => {\n                if(selectedPool){\n                  approve(WETH.addr, selectedPool);\n                }\n              }}\n              disabled={selectedPool === '' || user === ''}\n            />\n          </Col>\n          }\n        </Row>\n      </div>\n      <HelpText label={\"zap descript\"} amt={''}/>\n      </Modal>\n      </div>\n    )\n  }\n\n  return (\n    renderPoolZap()\n  );\n}\n\nexport default Zap;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport _ from 'lodash'\nimport BigNumber from 'bignumber.js';\nimport {\n  getPoolBalanceOfStaked,\n  getPoolBalanceOfUnstakable,\n  getPoolBalanceOfRewarded,\n  getPoolBalanceOfVesting,\n  getPoolBalanceOfClaimable,\n  getPoolBalanceOfClaimed,\n  getTokenAllowance,\n  getTokenBalance\n} from '../../utils/infura';\nimport {COOK, UNI, WETH} from \"../../constants/tokens\";\nimport { toTokenUnitsBN } from '../../utils/number';\nimport Unstake from \"./Unstake\";\nimport Stake from \"./Stake\";\nimport Claim from \"./Claim\";\nimport Harvest from \"./Harvest\";\nimport Zap from \"./Zap\";\nimport {\n  Box\n} from '@aragon/ui';\nimport { Container, Row, Col } from 'react-grid-system';\nimport {\n  BalanceBlock\n} from '../common/index';\n\n\ntype PoolProps = {\n  pool:string,lockedUp:number,reward:BigNumber,staked:BigNumber,totalStaked:BigNumber\n};\n\nfunction Pool({ user, poolAddress, pools }: {user: string, poolAddress: string, pools: Array<PoolProps>}) {\n  const { override, address } = useParams();\n  if (override) {\n    user = override;\n  }\n  if (address) {\n    poolAddress = address;\n  }\n\n  const [pairBalanceCOOK, setPairBalanceCOOK] = useState(new BigNumber(0));\n  const [pairBalanceWETH, setPairBalanceWETH] = useState(new BigNumber(0));\n  const [userTotalStaked, setUserTotalStaked] = useState(new BigNumber(0));\n  const [userTotalUnstakable, setUserTotalUnstakable] = useState(new BigNumber(0));\n  const [userTotalLocked, setUserTotalLocked] = useState(new BigNumber(0));\n  const [userTotalRewarded, setUserTotalRewarded] = useState(new BigNumber(0));\n  const [userTotalInVesting, setUserInTotalVesting] = useState(new BigNumber(0));\n  const [userTotalVested, setUserTotalVested] = useState(new BigNumber(0));\n  const [userUNIAllowance, setUserUNIAllowance] = useState(new BigNumber(0));\n  const [userUNIBalance, setUserUNIBalance] = useState(new BigNumber(0));\n  const [userWETHBalance, setUserWETHBalance] = useState(new BigNumber(0));\n  const [userWETHAllowance, setUserWETHAllowance] = useState(new BigNumber(0));\n\n  //Update User balances\n  useEffect(() => {\n    if (poolAddress === '') {\n      setPairBalanceCOOK(new BigNumber(0));\n      setPairBalanceWETH(new BigNumber(0));\n      setUserTotalStaked(new BigNumber(0));\n      setUserTotalUnstakable(new BigNumber(0));\n      setUserTotalLocked(new BigNumber(0));\n      setUserTotalRewarded(new BigNumber(0));\n      setUserInTotalVesting(new BigNumber(0));\n      setUserTotalVested(new BigNumber(0));\n      setUserUNIAllowance(new BigNumber(0));\n      setUserUNIBalance(new BigNumber(0));\n      setUserWETHBalance(new BigNumber(0));\n      setUserWETHAllowance(new BigNumber(0));\n      return;\n    }\n\n    let isCancelled = false;\n\n    async function updatePoolInfo() {\n      const [\n        pairBalanceCOOKStr,\n        pairBalanceWETHStr,\n      ] = await Promise.all([\n        getTokenBalance(COOK.addr, UNI.addr),\n        getTokenBalance(WETH.addr, UNI.addr),\n      ]);\n\n      const pairCOOKBalance = toTokenUnitsBN(pairBalanceCOOKStr, COOK.decimals);\n      const pairWETHBalance = toTokenUnitsBN(pairBalanceWETHStr, WETH.decimals);\n\n      if (!isCancelled) {\n        setPairBalanceCOOK(new BigNumber(pairCOOKBalance));\n        setPairBalanceWETH(new BigNumber(pairWETHBalance));\n      }\n    }\n\n    updatePoolInfo();\n    const poolInfoId = setInterval(updatePoolInfo, 15000);\n\n    if (user === '') {\n      setUserTotalStaked(new BigNumber(0));\n      setUserTotalUnstakable(new BigNumber(0));\n      setUserTotalLocked(new BigNumber(0));\n      setUserTotalRewarded(new BigNumber(0));\n      setUserInTotalVesting(new BigNumber(0));\n      setUserTotalVested(new BigNumber(0));\n      setUserUNIAllowance(new BigNumber(0));\n      setUserUNIBalance(new BigNumber(0));\n      setUserWETHBalance(new BigNumber(0));\n      setUserWETHAllowance(new BigNumber(0));\n      return () => {\n        isCancelled = true;\n        clearInterval(poolInfoId);\n      };\n    }\n\n    async function updateUserInfo() {\n      const [\n        userTotalStakedStr,\n        userTotalUnstakableStr,\n        userTotalRewardedStr,\n        userTotalVestingStr,\n        userTotalVestedStr,\n        userTotalClaimedStr,\n        uniAllowance,\n        uniBalance,\n        wethAllowance,\n        wethBalance\n      ] = await Promise.all([\n        getPoolBalanceOfStaked(poolAddress, user),\n        getPoolBalanceOfUnstakable(poolAddress, user),\n        getPoolBalanceOfRewarded(poolAddress, user),\n        getPoolBalanceOfVesting(poolAddress, user),\n        getPoolBalanceOfClaimable(poolAddress, user),\n        getPoolBalanceOfClaimed(poolAddress, user),\n        getTokenAllowance(UNI.addr, user, poolAddress),\n        getTokenBalance(UNI.addr, user),\n        getTokenAllowance(WETH.addr, user, poolAddress),\n        getTokenBalance(WETH.addr, user),\n      ]);\n\n      const userTotalStakedBalance = toTokenUnitsBN(userTotalStakedStr, UNI.decimals);\n      const userTotalUnstakableBalance = toTokenUnitsBN(userTotalUnstakableStr, UNI.decimals);\n      const userTotalLockedBalance = (new BigNumber(userTotalStakedBalance)).minus(new BigNumber(userTotalUnstakableBalance));\n      const userTotalRewardedBalance = toTokenUnitsBN(userTotalRewardedStr, COOK.decimals);\n      const userTotalVestingBalance = toTokenUnitsBN(userTotalVestingStr, COOK.decimals);\n      const userTotalVestedBalance = toTokenUnitsBN(userTotalVestedStr, COOK.decimals);\n      const userTotalClaimedBalance = toTokenUnitsBN(userTotalClaimedStr, COOK.decimals);\n      const userTotalInVestingBalance = (new BigNumber(userTotalVestingBalance)).minus(new BigNumber(userTotalVestedBalance)).minus(new BigNumber(userTotalClaimedBalance));\n      const userUNIBalance = toTokenUnitsBN(uniBalance, UNI.decimals);\n      const userWETHBalance = toTokenUnitsBN(wethBalance, WETH.decimals);\n\n\n      if (!isCancelled) {\n        setUserTotalStaked(new BigNumber(userTotalStakedBalance));\n        setUserTotalUnstakable(new BigNumber(userTotalUnstakableBalance));\n        setUserTotalLocked(new BigNumber(userTotalLockedBalance));\n        setUserTotalRewarded(new BigNumber(userTotalRewardedBalance));\n        setUserInTotalVesting(new BigNumber(userTotalInVestingBalance));\n        setUserTotalVested(new BigNumber(userTotalVestedBalance));\n        setUserUNIAllowance(new BigNumber(uniAllowance));\n        setUserUNIBalance(new BigNumber(userUNIBalance));\n        setUserWETHAllowance(new BigNumber(wethAllowance));\n        setUserWETHBalance(new BigNumber(userWETHBalance));\n      }\n    }\n\n    updateUserInfo();\n    const userInfoId = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(poolInfoId);\n      clearInterval(userInfoId);\n    };\n  }, [user, poolAddress]);\n\n  const poolList = [_.find(pools, { 'address': poolAddress })]\n\n  return (\n    <Container>\n    <Box style={{padding:0}}>\n      <Row style={{textAlign:\"center\",display: 'flex'}}>\n        <Col xs={12} lg={8} >\n          <BalanceBlock asset=\"To be Vested Tokens\" balance={userTotalRewarded}  suffix={\"COOK\"} type={\"block\"}/>\n          <hr/>\n          <BalanceBlock asset=\"Vesting Tokens\" balance={userTotalInVesting} suffix={\"COOK\"} type={\"block\"}/>\n          <hr/>\n          <BalanceBlock asset=\"Vested Tokens\" balance={userTotalVested} suffix={\"COOK\"} type={\"block\"}/>\n        </Col>\n        <Col xs={12} lg={4} style={{margin:'auto'}}>\n          <Row>\n          <Col sm={6} lg={12}>\n          <Harvest\n            user={user}\n            pools={poolList}\n            poolAddress={poolAddress}\n            userTotalRewarded={userTotalRewarded}\n            userTotalInVesting={userTotalInVesting}\n          />\n          </Col>\n          <Col sm={6} lg={12}>\n          <Claim\n            user={user}\n            pools={poolList}\n            poolAddress={poolAddress}\n            claimable={userTotalVested}\n          />\n          </Col>\n          </Row>\n        </Col>\n      </Row>\n\n      </Box>\n    <Row style={{textAlign:\"center\", marginTop:30, padding:\"0 5%\"}}>\n      <Col sm={6} lg={4}>\n      <Stake\n        pools={poolList}\n        user={user}\n        poolAddress={poolAddress}\n        balance={userUNIBalance}\n        allowance={userUNIAllowance}\n        staked={userTotalStaked}\n      />\n      </Col>\n      <Col sm={6} lg={4}>\n      <Unstake\n        user={user}\n        pools={poolList}\n        poolAddress={poolAddress}\n        unstakable={userTotalUnstakable}\n        locked={userTotalLocked}\n      />\n      </Col>\n      <Col sm={12} lg={4}>\n      <Zap\n        user={user}\n        pools={poolList}\n        cookAvailable={userTotalVested}\n        selected={poolAddress}\n        type={\"pool\"}\n        wethBalance={userWETHBalance}\n        wethAllowance={userWETHAllowance}\n        pairBalanceWETH={pairBalanceWETH}\n        pairBalanceCOOK={pairBalanceCOOK}\n      />\n      </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Pool;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  getStakeLockupDuration,\n  getRewardPerBlock,\n  getTotalStaked\n} from '../../utils/infura';\n\n\nimport {\n  useViewport, Modal, Button\n} from '@aragon/ui';\nimport { POOLS } from \"../../constants/contracts\";\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { COOK,UNI } from \"../../constants/tokens\";\nimport Pool from \"../Pool\";\nimport BigNumber from 'bignumber.js';\nimport ListTable from \"./ListTable\";\nimport { Row, Col } from 'react-grid-system';\n\nfunction PoolList({ user }: {user: string}) {\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n  const { below, above } = useViewport()\n  const [poolList, setPoolList] = useState([] as any);\n  const [selectedPool, setSelectedPool] = useState('');\n  const [totalStaked, setTotalStaked] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false);\n\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    // setPoolList([{name:\"4 UNI-V2 (WETH/COOK)\", address:\"0xf4B146FbA71F41E0592668ffbF264F1D186b2Ca8\",lockedUpPeriod:\"90 days\",rewardPerBlock:\"300\"}]);\n    async function updatePoolInfo() {\n      const poolList = await Promise.all(POOLS.map( async (pool)=>{\n        const [lockedup,reward] =\n        await Promise.all([\n            getStakeLockupDuration(pool.address),\n            getRewardPerBlock(pool.address)\n          ])\n        const poolRewardPerBlock = toTokenUnitsBN(reward, COOK.decimals);\n        return({\n          name: pool.name,\n          address: pool.address,\n          lockedUpPeriod: lockedup,\n          rewardPerBlock: poolRewardPerBlock\n        });\n      }));\n\n      const totalStakedBalance = await POOLS.reduce(async (sum, pool) => {\n        const staked = await getTotalStaked(pool.address);\n        return (await sum).plus(staked);\n      }, Promise.resolve(new BigNumber(0)));\n\n      const totalStaked = toTokenUnitsBN(totalStakedBalance, UNI.decimals);\n\n      if (!isCancelled) {\n        setPoolList(poolList);\n        setTotalStaked(totalStaked);\n      }\n    }\n\n\n\n    updatePoolInfo();\n\n\n\n\n\n\n    const id = setInterval(updatePoolInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n  return (\n    <>\n      <div style={{textAlign:\"center\"}}>\n        <div style={{fontSize:40}}>Total Staked</div>\n        <div style={{ marginBottom:8,fontSize:40, paddingRight:10}}>{totalStaked.toString()} UNI-V2</div>\n      </div>\n      <Row>\n        <Col sm={12} lg={5} >\n          <ListTable pools={poolList} selectedPool={selectedPool} setSelectedPool={(selected)=>{\n            setSelectedPool(selected)\n            setOpened(true)\n          }\n          } detailMode={true}/>\n\n        </Col>\n          <Col sm={12} lg={7}>\n          {selectedPool === '' ? '' :\n            <>\n            {above('medium') && <Pool user={user} poolAddress={selectedPool} pools={poolList}/>}\n            {below('medium') && <Modal closeButton={false} visible={opened} onClose={()=>{\n            }}><Pool user={user} poolAddress={selectedPool} pools={poolList}/>\n            <Button\n              wide\n              style={{marginTop:20}}\n              label={\"Close\"}\n              onClick={() => {\n                setOpened(false)\n              }}\n              disabled={false}\n            /></Modal>}\n\n            </>\n          }\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default PoolList;\n","import React from 'react';\nimport BigNumber from 'bignumber.js';\nimport { Container, Row, Col } from 'react-grid-system';\nimport { BalanceBlock, Card } from '../common/index';\n\ntype WithdrawPageHeaderProps = {\n  accountVestingBalance: BigNumber,\n  accountAvalibleBalance: BigNumber,\n  accountVestedBalance: BigNumber,\n  todayNumber: BigNumber,\n  startDayNumber: BigNumber\n};\n\n\n\nconst WithdrawPageHeader = ({\n  accountVestingBalance, accountAvalibleBalance, accountVestedBalance, todayNumber, startDayNumber\n}: WithdrawPageHeaderProps) => (\n  <div>\n  <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n    <Container>\n      <Row>\n       <Col xs={12} md={6}><Card label={\"Total Allocated Token\"} value={<BalanceBlock asset=\"\" balance={accountVestingBalance} suffix={\" COOK\"}/>}/></Col>\n       <Col xs={12} md={6} ><Card label={\"Vesting Token\"} value={<BalanceBlock asset=\"\" balance={accountVestingBalance.minus(accountVestedBalance)} suffix={\" COOK\"}/>}/></Col>\n       <Col xs={12} md={6} ><Card label={\"Claimed Token\"} value={<BalanceBlock asset=\"\" balance={accountVestedBalance.minus(accountAvalibleBalance)} suffix={\" COOK\"}/>}/></Col>\n       <Col xs={12} md={6} ><Card label={\"Available Token\"} value={<BalanceBlock asset=\"\" balance={accountAvalibleBalance} suffix={\" COOK\"}/>}/></Col>\n     </Row>\n\n    </Container>\n  </div>\n  </div>\n);\n\n\nexport default WithdrawPageHeader;\n","import React, { useState } from 'react';\nimport {\n  Modal, Text\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { Container, Row, Col } from 'react-grid-system';\nimport {\n  BalanceBlock\n} from '../common/index';\nimport {withdraw} from '../../utils/web3';\nimport {toBaseUnitBN} from '../../utils/number';\nimport {COOK} from \"../../constants/tokens\";\nimport {CookDistribution} from \"../../constants/contracts\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport colors from '../../constants/colors';\nimport ActionButton from \"../common/ActionButton\";\n\ntype WithdrawProps = {\n  user: string\n  vestingAmount: BigNumber,\n  availableAmount: BigNumber,\n  records: Array<{transactionHash: string; returnValues:{amount:string}}>\n};\n\nfunction Withdraw({\n  user, vestingAmount, availableAmount, records\n}: WithdrawProps) {\n  const [withdrawAmount, setWithdrawAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false)\n  return (\n    <div>\n    <ActionButton label={\"CLAIM\"} color={colors.button} onClick={()=>{\n      setOpened(true)\n    }} disabled={!user}/>\n    <Modal visible={opened} onClose={()=>setOpened(false)}>\n      <Text>Claim</Text>\n        <Container>\n        <Row>\n        <Col xs={12} ><BalanceBlock asset=\"Total Available\" balance={availableAmount} type={\"row\"} suffix={\"COOK\"}/></Col>\n        <Col xs={12} >\n        <BigNumberInput\n          adornment=\"COOK\"\n          max={() => {\n            setWithdrawAmount(availableAmount);\n          }}\n          value={withdrawAmount}\n          setter={setWithdrawAmount}\n        />\n        </Col>\n        <Col xs={12} style={{textAlign:\"center\"}}>\n        <ActionButton label={\"CLAIM\"} color={colors.button} onClick={()=>{\n          withdraw(\n            CookDistribution,\n            toBaseUnitBN(withdrawAmount, COOK.decimals),\n          );\n        }} disabled={false}/></Col>\n        </Row>\n        </Container>\n\n    </Modal>\n\n    </div>\n  );\n}\n\nexport default Withdraw;\n","import React, { useState, useEffect } from 'react';\nimport { \n  Modal, DropDown\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock, PriceSection\n} from '../common/index';\nimport {distributionZap, approve} from '../../utils/web3';\nimport {toBaseUnitBN, toTokenUnitsBN} from '../../utils/number';\nimport {COOK, WETH} from \"../../constants/tokens\";\nimport {CookDistribution} from \"../../constants/contracts\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport colors from '../../constants/colors';\nimport ActionButton from \"../common/ActionButton\";\nimport HelpText from \"../common/HelpText\";\nimport { Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\ntype ZapProps = {\n  user: string,\n  pools: Array<{name:string,address:string,rewardPerBlock:BigNumber,lockedUpPeriod:BigNumber}>,\n  cookAvailable: BigNumber,\n  wethBalance: BigNumber,\n  wethAllowance: BigNumber,\n  pairBalanceWETH: BigNumber,\n  pairBalanceCOOK: BigNumber,\n  selected?:string\n};\n\nfunction DistributionZap({\n  user, pools, cookAvailable, wethBalance, wethAllowance, pairBalanceWETH, pairBalanceCOOK, selected\n}: ZapProps) {\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [wethAmount, setWethAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false)\n  const [selectedPool, setSelectedPool] = useState(selected||'')\n  const [balanceType, setBalanceType] = useState(0)\n\n  useEffect(() => {\n\n    if(selected){\n      setSelectedPool(selected)\n    }\n\n  }, [selectedPool, selected])\n\n  const close = () => {\n    setOpened(false);\n    setZapAmount(new BigNumber(0));\n    setWethAmount(new BigNumber(0));\n  }\n\n  const WETHToCOOKRatio = pairBalanceWETH.isZero() ? new BigNumber(1) : pairBalanceWETH.div(pairBalanceCOOK);\n\n  const onChangeAmountCOOK = (amountCOOK) => {\n    if (!amountCOOK) {\n      setWethAmount(new BigNumber(0));\n      return;\n    }\n\n    const amountCOOKBN = new BigNumber(amountCOOK)\n    setZapAmount(amountCOOKBN);\n\n    const amountCOOKBU = toBaseUnitBN(amountCOOKBN, COOK.decimals);\n    const newAmountWETH = toTokenUnitsBN(\n      amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR),\n      COOK.decimals);\n    setWethAmount(newAmountWETH);\n  };\n  const renderPoolZap = () => {\n    return(\n      <div>\n      <ActionButton label={\"Zap\"} color={colors.button} onClick={()=>{\n        setOpened(true)\n      }} disabled={!user}/>\n      <Modal visible={opened} onClose={()=>close()}>\n      <div style={{flexBasis: '100%', paddingTop: '5%'}}>\n          <ListTable pools={pools} selectedPool={selectedPool} setSelectedPool={setSelectedPool}/>\n          <Row style={{padding:10}}>\n          <Col><BalanceBlock asset=\"Available COOK\" balance={cookAvailable} suffix={\"COOK\"} type={\"row\"}/></Col>\n          <Col>\n          <BalanceBlock asset=\"WETH Balance\" balance={wethBalance} type={\"row\"} suffix={<DropDown\n                items={['WETH']}\n                selected={balanceType}\n                onChange={setBalanceType}\n              />}/>\n          </Col>\n          </Row>\n        <Row>\n          <Col xs={12}>\n              <BigNumberInput\n                adornment=\"COOK\"\n                value={zapAmount}\n                max={() => {\n                  onChangeAmountCOOK(cookAvailable);\n                }}\n                setter={onChangeAmountCOOK}\n              />\n              <PriceSection label=\"Requires \" amt={wethAmount} symbol=\" WETH\"/>\n\n          </Col>\n          {wethAllowance.comparedTo(wethAmount) > 0 ?\n            <Col xs={12} style={{textAlign:\"center\"}}>\n              <ActionButton\n                label={\"Zap\"} color={colors.button}\n                onClick={() => {\n                  if(selectedPool){\n                    distributionZap(\n                      CookDistribution,\n                      selectedPool,\n                      toBaseUnitBN(zapAmount, COOK.decimals),\n                      (hash) => {\n                        close()\n                      }\n                    );\n                  }\n\n                }}\n                disabled={selectedPool === '' || user === ''}\n              />\n            </Col>\n          :\n          <Col xs={12} style={{textAlign:\"center\"}}>\n            <ActionButton\n              color={colors.button}\n              label=\"Approve\"\n              onClick={() => {\n                if(selectedPool){\n                  approve(WETH.addr, CookDistribution);\n                }\n              }}\n              disabled={selectedPool === '' || user === ''}\n            />\n          </Col>\n          }\n        </Row>\n      </div>\n      <HelpText label={\"zap descript\"} amt={''}/>\n      </Modal>\n      </div>\n    )\n  }\n\n  return (\n    renderPoolZap()\n  );\n}\n\nexport default DistributionZap;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport BigNumber from 'bignumber.js';\nimport {getDistributionVestingAmount,\n        getDistributionVestedAmount,\n        getDistributionAvalibleAmount,\n        getDistributionStartTimestamp,\n        getTodayNumber,\n        getTokenAllowance,\n        getTokenBalance,\n        getStakeLockupDuration,\n        getRewardPerBlock,\n        getTotalStaked,\n        getPoolBalanceOfStaked} from '../../utils/infura';\nimport {COOK, UNI, WETH} from \"../../constants/tokens\";\nimport {CookDistribution, POOLS} from \"../../constants/contracts\";\nimport { toTokenUnitsBN } from '../../utils/number';\nimport WithdrawPageHeader from \"./Header\";\nimport Withdraw from \"./Withdraw\";\nimport DistributionZap from \"./DistributionZap\";\nimport { Row, Col } from 'react-grid-system';\n\nfunction Distribution({ user }: {user: string}) {\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n\n  const [userWETHBalance, setUserWETHBalance] = useState(new BigNumber(0));\n  const [userWETHAllowance, setUserWETHAllowance] = useState(new BigNumber(0));\n\n  const [pairBalanceCOOK, setPairBalanceCOOK] = useState(new BigNumber(0));\n  const [pairBalanceWETH, setPairBalanceWETH] = useState(new BigNumber(0));\n\n\n  const [userVestingBalance, setUserVestingBalance] = useState(new BigNumber(0));\n  const [userVestedBalance, setUserVestedBalance] = useState(new BigNumber(0));\n  const [userAvalibleBalance, setUserAvalibleBalance] = useState(new BigNumber(0));\n\n  const [startDay, setStartDay] = useState(new BigNumber(0));\n  const [today, setToday] = useState(new BigNumber(0));\n  const [managedPools, setManagedPools] = useState([] as any);\n\n\n  //Update User balances\n  useEffect(() => {\n    if (user === '') {\n      setUserVestingBalance(new BigNumber(0));\n      setUserVestedBalance(new BigNumber(0));\n      setUserAvalibleBalance(new BigNumber(0));\n      setPairBalanceCOOK(new BigNumber(0));\n      setPairBalanceWETH(new BigNumber(0));\n      setUserWETHBalance(new BigNumber(0));\n      setUserWETHAllowance(new BigNumber(0));\n      setStartDay(new BigNumber(0));\n      setToday(new BigNumber(0));\n      setManagedPools([]);\n      return;\n    }\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [vestingBalance,\n             vestedBalance,\n             avalibleBalance,\n             startTimeStamp,\n             tDay,\n             pairBalanceCOOKStr,\n             pairBalanceWETHStr,\n             wethBalance,\n             wethAllowance\n           ] = await Promise.all([\n        getDistributionVestingAmount(CookDistribution, user),\n        getDistributionVestedAmount(CookDistribution, user),\n        getDistributionAvalibleAmount(CookDistribution, user),\n        getDistributionStartTimestamp(CookDistribution),\n        getTodayNumber(CookDistribution),\n        getTokenBalance(COOK.addr, UNI.addr),\n        getTokenBalance(WETH.addr, UNI.addr),\n        getTokenBalance(WETH.addr, user),\n        getTokenAllowance(WETH.addr, user, CookDistribution)\n      ]);\n      console.log('wethAllowance',wethAllowance);\n      const userVestingBalance = toTokenUnitsBN(vestingBalance, COOK.decimals);\n      const userVestedBalance = toTokenUnitsBN(vestedBalance, COOK.decimals);\n      const userAvalibleBalance = toTokenUnitsBN(avalibleBalance, COOK.decimals);\n      const startDay = new BigNumber(startTimeStamp).div(86400).decimalPlaces(0, 1);\n      const todayNumber = new BigNumber(tDay);\n\n      const pairCOOKBalance = toTokenUnitsBN(pairBalanceCOOKStr, COOK.decimals);\n      const pairWETHBalance = toTokenUnitsBN(pairBalanceWETHStr, WETH.decimals);\n      const userWETHBalance = toTokenUnitsBN(wethBalance, WETH.decimals);\n\n\n      const poolList = await Promise.all(POOLS.map( async (pool)=>{\n        const [lockedup,reward,staked,totalStaked] =\n        await Promise.all([\n            getStakeLockupDuration(pool.address),\n            getRewardPerBlock(pool.address),\n            getTotalStaked(pool.address),\n            getPoolBalanceOfStaked(pool.address,user)\n          ])\n\n        const totalStakedBalance = toTokenUnitsBN(totalStaked, UNI.decimals);\n        const userTotalStakedBalance = toTokenUnitsBN(staked, UNI.decimals);\n        const poolRewardPerBlock = toTokenUnitsBN(reward, COOK.decimals);\n\n\n        return({pool:pool.address,lockedUp:lockedup,reward:poolRewardPerBlock,staked:userTotalStakedBalance,totalStaked:totalStakedBalance,\n                name: pool.name,\n                address: pool.address,\n                lockedUpPeriod: lockedup,\n                rewardPerBlock: poolRewardPerBlock})\n      }))\n\n      if (!isCancelled) {\n        setUserVestingBalance(new BigNumber(userVestingBalance));\n        setUserVestedBalance(new BigNumber(userVestedBalance));\n        setUserAvalibleBalance(new BigNumber(userAvalibleBalance));\n        setStartDay(new BigNumber(startDay));\n        setToday(new BigNumber(todayNumber));\n\n        setPairBalanceCOOK(new BigNumber(pairCOOKBalance));\n        setPairBalanceWETH(new BigNumber(pairWETHBalance));\n        setUserWETHBalance(new BigNumber(userWETHBalance));\n        setManagedPools(poolList)\n        console.log(wethAllowance);\n        setUserWETHAllowance(new BigNumber(wethAllowance));\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 1000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n\n  return (\n    <>\n      <div style={{textAlign:\"center\"}}>\n      <div style={{fontWeight:'bold', fontSize:40}}>Cook Protocol</div>\n      <div style={{marginTop:30, marginBottom:50,fontSize:20}}>{\"Mobri.........\"}</div>\n      <div style={{fontWeight:'bold', fontSize:35}}>Total Token 10,000,000 COOK</div>\n      </div>\n      <WithdrawPageHeader\n        accountVestingBalance={userVestingBalance}\n        accountAvalibleBalance={userAvalibleBalance}\n        accountVestedBalance={userVestedBalance}\n        todayNumber={today}\n        startDayNumber={startDay}\n      />\n      <Row>\n        <Col xs={6} style={{textAlign:\"right\"}}>\n        <Withdraw\n          user={user}\n          vestingAmount={userVestingBalance}\n          availableAmount={userAvalibleBalance}\n          records={[]}\n        /></Col>\n        <Col xs={6} >\n          <DistributionZap\n            user={user}\n            pools={managedPools}\n            cookAvailable={userAvalibleBalance}\n            wethBalance={userWETHBalance}\n            wethAllowance={userWETHAllowance}\n            pairBalanceWETH={pairBalanceWETH}\n            pairBalanceCOOK={pairBalanceCOOK}\n          />\n        </Col>\n      </Row>\n\n\n\n\n    </>\n  );\n}\n\nexport default Distribution;\n","import React from 'react';\n\nimport {\n  Header,\n} from '@aragon/ui';\n\ntype IconHeaderProps = {\n  icon: any,\n  text: string\n}\n\nfunction IconHeader({ icon, text }: IconHeaderProps) {\n  return (\n    <>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ marginRight: '2%', fontSize: 48 }}>\n          {icon}\n        </div>\n        <div>\n          <Header primary={text} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default IconHeader;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  getStakeLockupDuration,\n  getRewardPerBlock,\n  getBlockNumber,\n  getBlockTimestamp\n} from '../../utils/infura';\nimport {\n  setPoolStakeLockupDuration,\n  setPoolRewardPerBlock,\n  setPoolBlockNumber,\n  setPoolBlockTimestamp\n} from '../../utils/web3';\nimport {\n  Box, TextInput, Button, IconCirclePlus\n} from '@aragon/ui';\nimport {toBaseUnitBN,toTokenUnitsBN} from '../../utils/number';\nimport {COOK} from \"../../constants/tokens\";\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock,\n} from '../common/index';\n\nfunction SetParam({ user, poolAddress }: {user: string, poolAddress: string}) {\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n\n  const [stakeLockupDuration, setStakeLockupDuration] = useState(0);\n  const [rewardPerBlock, setRewardPerBlock] = useState(new BigNumber(0));\n  const [blockNumber, setBlockNumber] = useState(0);\n  const [blockTimestamp, setBlockTimestamp] = useState(0);\n\n  //Update User balances\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [\n        stakeLockupDuration,\n        rewardPerBlockStr,\n        blockNumber,\n        blockTimestamp,\n      ] = await Promise.all([\n        getStakeLockupDuration(poolAddress),\n        getRewardPerBlock(poolAddress),\n        getBlockNumber(poolAddress),\n        getBlockTimestamp(poolAddress)\n      ]);\n\n      const rewardPerBlock = toTokenUnitsBN(rewardPerBlockStr, COOK.decimals);\n\n      if (!isCancelled) {\n        setStakeLockupDuration(stakeLockupDuration);\n        setRewardPerBlock(rewardPerBlock);\n        setBlockNumber(blockNumber);\n        setBlockTimestamp(blockTimestamp);\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user, poolAddress]);\n\n  return (\n    <>\n       <Box heading={`Pool: ${poolAddress}`}>\n        <div style={{display: 'flex', flexWrap: 'wrap'}}>\n          <div style={{flexBasis: '32%'}}>\n            <BalanceBlock asset=\"Block Number\" balance={blockNumber}/>\n          </div>\n          <div style={{flexBasis: '33%', paddingTop: '2%'}}>\n            <div style={{display: 'flex'}}>\n              <div style={{width: '60%', minWidth: '6em'}}>\n                <>\n                  <TextInput\n                    value={blockNumber}\n                    onChange={event => {\n                      setBlockNumber(event.target.value)\n                    }}\n                  />\n                </>\n              </div>\n              <div style={{width: '40%', minWidth: '7em'}}>\n                <Button\n                  wide\n                  icon={<IconCirclePlus/>}\n                  label=\"Set\"\n                  onClick={() => {\n                    setPoolBlockNumber(\n                      poolAddress,\n                      blockNumber\n                    );\n                  }}\n                  disabled={user === '' ||  poolAddress === ''}\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{flexBasis: '2%'}}/>\n        </div>\n        <div style={{display: 'flex', flexWrap: 'wrap'}}>\n          <div style={{flexBasis: '32%'}}>\n            <BalanceBlock asset=\"Block Timestamp\" balance={blockTimestamp}/>\n          </div>\n          <div style={{flexBasis: '33%', paddingTop: '2%'}}>\n            <div style={{display: 'flex'}}>\n              <div style={{width: '60%', minWidth: '6em'}}>\n                <>\n                  <TextInput\n                    value={blockTimestamp}\n                    onChange={event => {\n                      setBlockTimestamp(event.target.value)\n                    }}\n                  />\n                </>\n              </div>\n              <div style={{width: '40%', minWidth: '7em'}}>\n                <Button\n                  wide\n                  icon={<IconCirclePlus/>}\n                  label=\"Set\"\n                  onClick={() => {\n                    setPoolBlockTimestamp(\n                      poolAddress,\n                      blockTimestamp\n                    );\n                  }}\n                  disabled={user === '' ||  poolAddress === ''}\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{flexBasis: '2%'}}/>\n        </div>\n        <div style={{display: 'flex', flexWrap: 'wrap'}}>\n          <div style={{flexBasis: '32%'}}>\n            <BalanceBlock asset=\"Lock-Up Period\" balance={stakeLockupDuration} suffix={\"Days\"}/>\n          </div>\n          <div style={{flexBasis: '33%', paddingTop: '2%'}}>\n            <div style={{display: 'flex'}}>\n              <div style={{width: '60%', minWidth: '6em'}}>\n                <>\n                  <TextInput\n                    adornment=\"Days\"\n                    adornmentPosition=\"end\"\n                    value={stakeLockupDuration}\n                    onChange={event => {\n                      setStakeLockupDuration(event.target.value)\n                    }}\n                  />\n                </>\n              </div>\n              <div style={{width: '40%', minWidth: '7em'}}>\n                <Button\n                  wide\n                  icon={<IconCirclePlus/>}\n                  label=\"Set\"\n                  onClick={() => {\n                    setPoolStakeLockupDuration(\n                      poolAddress,\n                      stakeLockupDuration\n                    );\n                  }}\n                  disabled={user === '' ||  poolAddress === ''}\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{flexBasis: '2%'}}/>\n        </div>\n        <div style={{display: 'flex', flexWrap: 'wrap'}}>\n          <div style={{flexBasis: '32%'}}>\n            <BalanceBlock asset=\"Reward Per Block\" balance={rewardPerBlock} suffix={\"COOK/BLOCK\"}/>\n          </div>\n          <div style={{flexBasis: '33%', paddingTop: '2%'}}>\n            <div style={{display: 'flex'}}>\n              <div style={{width: '60%', minWidth: '6em'}}>\n                <>\n                  <TextInput\n                    adornment=\"COOK/BLOCK\"\n                    adornmentPosition=\"end\"\n                    value={rewardPerBlock}\n                    onChange={event => {\n                      setRewardPerBlock(event.target.value)\n                    }}\n                  />\n                </>\n              </div>\n              <div style={{width: '40%', minWidth: '7em'}}>\n                <Button\n                  wide\n                  icon={<IconCirclePlus/>}\n                  label=\"Set\"\n                  onClick={() => {\n                    setPoolRewardPerBlock(\n                      poolAddress,\n                      toBaseUnitBN(rewardPerBlock, COOK.decimals),\n\n                    );\n                  }}\n                  disabled={user === '' ||  poolAddress === ''}\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{flexBasis: '2%'}}/>\n        </div>\n      </Box>\n    </>\n  );\n}\n\nexport default SetParam;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  getTodayNumber, getDistributionStartTimestamp\n} from '../../utils/infura';\nimport {\n  setDay\n} from '../../utils/web3';\nimport {\n  Box, Button, IconCirclePlus\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  NumberBlock,\n} from '../common/index';\nimport BigNumberInput from \"../common/BigNumberInput\";\n\nfunction SetDay({ user, cookDistribution }: {user: string, cookDistribution: string}) {\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n\n\n  const [startDay, setStartDay] = useState(new BigNumber(0));\n  const [today, setToday] = useState(new BigNumber(0));\n  const [dayNumber, setDayNumber] = useState(new BigNumber(0));\n\n  //Update User balances\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [\n        startTimeStamp,\n        tDay\n      ] = await Promise.all([\n        getDistributionStartTimestamp(cookDistribution),\n        getTodayNumber(cookDistribution)\n      ]);\n\n      const startDay = new BigNumber(startTimeStamp).div(86400).decimalPlaces(0, 1);\n      const todayNumber = new BigNumber(tDay);\n\n      if (!isCancelled) {\n        setStartDay(new BigNumber(startDay));\n        setToday(new BigNumber(todayNumber));\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 1000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user, cookDistribution]);\n\n  return (\n    <>\n       <Box heading=\"CookDistributionDay\">\n       <div style={{width: '100%', paddingTop: '2%'}}>\n         <div style={{display: 'flex'}}>\n           <div style={{flexBasis: '32%'}}>\n             <NumberBlock title=\"Startday Number\" num={startDay}/>\n           </div>\n           <div style={{flexBasis: '32%'}}>\n             <NumberBlock title=\"Today Number\" num={today}/>\n           </div>\n           <div style={{width: '60%'}}>\n               <BigNumberInput\n                 adornment=\"Day\"\n                 value={dayNumber}\n                 setter={setDayNumber}\n               />\n           </div>\n           <div style={{width: '40%'}}>\n             <Button\n               wide\n               icon={<IconCirclePlus/>}\n               label=\"Set\"\n               onClick={() => {\n                 setDay(\n                   cookDistribution,\n                   dayNumber\n                 );\n               }}\n             />\n           </div>\n         </div>\n       </div>\n\n      </Box>\n    </>\n  );\n}\n\nexport default SetDay;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  getWETHPrice,getSevenMAPrice\n} from '../../utils/infura';\nimport {\n  setCookPrice, setWETHPrice, updatePriceFeed\n} from '../../utils/web3';\nimport {\n  Box, Button, IconCirclePlus\n} from '@aragon/ui';\nimport {toBaseUnitBN,toTokenUnitsBN} from '../../utils/number';\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock\n} from '../common/index';\nimport BigNumberInput from \"../common/BigNumberInput\";\n\nfunction SetPrice({ user, oracle, priceComsumer, cookDistribution }: {user: string, oracle: string, priceComsumer: string, cookDistribution: string}) {\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n\n\n  const [currentCookPrice, setCurrentCookPrice] = useState(new BigNumber(0));\n  const [currentWethPrice, setCurrentWethPrice] = useState(new BigNumber(0));\n\n  const [targetCookPrice, setTargetCookPrice] = useState(new BigNumber(0));\n  const [targetWethPrice, setTargetWethPrice] = useState(new BigNumber(0));\n\n  const [sevenMA, setSevenMA] = useState(new BigNumber(0));\n  const [oraclePrice, setOraclePrice] = useState(new BigNumber(0));\n\n  //Update User balances\n  useEffect(() => {\n    if (user === '') {\n      setCurrentCookPrice(new BigNumber(0));\n      setCurrentWethPrice(new BigNumber(0));\n      setTargetCookPrice(new BigNumber(0));\n      setTargetWethPrice(new BigNumber(0));\n      setSevenMA(new BigNumber(0));\n      setOraclePrice(new BigNumber(0));\n      return;\n    }\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [\n        wethP\n      ] = await Promise.all([\n\n        getWETHPrice(priceComsumer)\n      ]);\n\n      const currentWETHPrice = toTokenUnitsBN(wethP,8);\n\n\n      if (!isCancelled) {\n\n        setCurrentWethPrice(currentWETHPrice);\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 1000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user, oracle, priceComsumer, cookDistribution]);\n\n  return (\n    <>\n      <Box heading=\"Cook Price\">\n       <div style={{width: '100%', paddingTop: '2%'}}>\n         <div style={{display: 'flex'}}>\n           <div style={{flexBasis: '32%'}}>\n             <BalanceBlock asset=\"COOK/WETH\" balance={currentCookPrice.toString()}/>\n           </div>\n           <div style={{width: '60%'}}>\n               <BigNumberInput\n                 adornment=\"WETH\"\n                 value={targetCookPrice}\n                 setter={setTargetCookPrice}\n               />\n           </div>\n           <div style={{width: '40%'}}>\n             <Button\n               wide\n               icon={<IconCirclePlus/>}\n               label=\"Set\"\n               onClick={() => {\n                 setCookPrice(\n                   oracle,\n                   toBaseUnitBN(targetCookPrice,18)\n                 );\n               }}\n             />\n           </div>\n         </div>\n       </div>\n\n      </Box>\n      <Box heading=\"Price\">\n      <div style={{width: '100%', paddingTop: '2%'}}>\n        <div style={{display: 'flex'}}>\n          <div style={{flexBasis: '32%'}}>\n            <BalanceBlock asset=\"WETH/USDC\" balance={currentWethPrice.toString()}/>\n\n          </div>\n          <div style={{width: '60%'}}>\n              <BigNumberInput\n                adornment=\"USDC\"\n                value={targetWethPrice}\n                setter={setTargetWethPrice}\n              />\n          </div>\n          <div style={{width: '40%'}}>\n            <Button\n              wide\n              icon={<IconCirclePlus/>}\n              label=\"Set\"\n              onClick={() => {\n                setWETHPrice(\n                  priceComsumer,\n                  toBaseUnitBN(targetWethPrice,8)\n                );\n              }}\n            />\n          </div>\n        </div>\n      </div>\n\n      </Box>\n      <Box heading=\"7MA\">\n      <div style={{width: '100%', paddingTop: '2%'}}>\n        <div style={{display: 'flex'}}>\n          <div style={{flexBasis: '32%'}}>\n            <BalanceBlock asset=\"COOK/USDC\" balance={sevenMA.toString()}/>\n          </div>\n          <div style={{width: '40%'}}>\n            <Button\n              wide\n              icon={<IconCirclePlus/>}\n              label=\"Get 7MA\"\n              onClick={async() => {\n                const ssma = await getSevenMAPrice(cookDistribution);\n                setSevenMA(toTokenUnitsBN(ssma,8));\n              }}\n            />\n          </div>\n        </div>\n      </div>\n\n      </Box>\n      <Box heading=\"Update Price Feed\">\n      <div style={{width: '100%', paddingTop: '2%'}}>\n        <div style={{display: 'flex'}}>\n          <div style={{flexBasis: '32%'}}>\n            <BalanceBlock asset=\"COOK/WETH\" balance={oraclePrice.toString()}/>\n          </div>\n          <div style={{width: '40%'}}>\n            <Button\n              wide\n              icon={<IconCirclePlus/>}\n              label=\"Update Price Feed\"\n              onClick={() => {\n                updatePriceFeed(cookDistribution)\n              }}\n            />\n          </div>\n        </div>\n      </div>\n\n      </Box>\n    </>\n  );\n}\n\nexport default SetPrice;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {POOLS, CookDistribution, Oracle, PriceConsumer} from \"../../constants/contracts\";\nimport IconHeader from \"../common/IconHeader\";\nimport SetParam from \"./SetParam\";\nimport SetDay from \"./SetDay\";\nimport SetPrice from \"./SetPrice\";\n\nfunction Admin({ user }: {user: string}) {\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n\n  return (\n    <>\n      <IconHeader icon={<i className=\"fas fa-parachute-box\"/>} text=\"Admin Functions\"/>\n      <SetDay\n        user={user}\n        cookDistribution={CookDistribution}\n      />\n      <SetPrice\n        user={user}\n        oracle={Oracle}\n        priceComsumer={PriceConsumer}\n        cookDistribution={CookDistribution}\n      />\n      {\n        POOLS.map(pool => {\n        return(\n          <SetParam key={pool.address}\n            user={user}\n            poolAddress={pool.address}\n          />\n        )\n      })\n    }\n    </>\n  );\n}\n\nexport default Admin;\n","import React, { useState } from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Main } from '@aragon/ui';\nimport { updateModalMode } from './utils/web3';\nimport { storePreference, getPreference } from './utils/storage';\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage';\nimport PoolList from \"./components/PoolList\";\nimport Distribution from \"./components/Distribution\";\nimport Admin from \"./components/Admin\";\n\nimport colors from './constants/colors';\nfunction App() {\n  const storedTheme = getPreference('theme', 'light');\n\n  const [user, setUser] = useState(''); // the current connected user\n  const [theme, setTheme] = useState(storedTheme);\n\n  const updateTheme = (newTheme:string) => {\n    setTheme(newTheme);\n    updateModalMode(newTheme);\n    storePreference('theme', newTheme);\n  };\n  return (\n    <Router>\n      <Main assetsUrl={`${process.env.PUBLIC_URL}/aragon-ui/`} theme={colors} layout={false}>\n      <div style={{margin:\"0 auto\", maxWidth:1500}}>\n        <NavBar user={user} setUser={setUser} theme={theme} updateTheme={updateTheme} />\n\n        <Switch>\n          <Route path=\"/distribution/\"><Distribution user={user} /></Route>\n          <Route path=\"/pools/\"><PoolList user={user} /></Route>\n          <Route path=\"/admin/\"><Admin user={user}/></Route>\n          <Route path=\"/\"><HomePage /></Route>\n        </Switch>\n        </div>\n      </Main>\n    </Router>\n  );\n}\n\nexport default App;\n","/**\n * Get value by key\n * @param {string} key\n * @param {string} defaultValue\n */\nexport function getPreference(key:string, defaultValue:string): string {\n  return localStorage.getItem(key) || defaultValue;\n}\n\n/**\n * store value to storage\n * @param {string} key\n * @param {string} value\n */\nexport function storePreference(key:string, value:string):void {\n  localStorage.setItem(key, value);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport Moment from 'moment'\nimport momentLocalizer from 'react-widgets-moment';\n\nMoment.locale('en')\nmomentLocalizer()\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}