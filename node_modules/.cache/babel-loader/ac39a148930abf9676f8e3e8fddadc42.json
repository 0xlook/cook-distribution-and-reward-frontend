{"ast":null,"code":"import _regeneratorRuntime from\"/Users/huanwen/Work/Cook/cook-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/huanwen/Work/Cook/cook-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/huanwen/Work/Cook/cook-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import BigNumber from'bignumber.js';import{getDistributionVestingAmount,getDistributionVestedAmount,getDistributionAvalibleAmount,getDistributionStartTimestamp,getTodayNumber,getTokenAllowance,getTokenBalance,getStakeLockupDuration,getRewardPerBlock,getTotalStaked,getPoolBalanceOfStaked}from'../../utils/infura';import{COOK,UNI,WETH}from\"../../constants/tokens\";import{CookDistribution,POOLS}from\"../../constants/contracts\";import{toTokenUnitsBN}from'../../utils/number';import WithdrawPageHeader from\"./Header\";import Withdraw from\"./Withdraw\";import DistributionZap from\"./DistributionZap\";import{Row,Col}from'react-grid-system';function Distribution(_ref){var user=_ref.user;var _useParams=useParams(),override=_useParams.override;if(override){user=override;}var _useState=useState(new BigNumber(0)),_useState2=_slicedToArray(_useState,2),userWETHBalance=_useState2[0],setUserWETHBalance=_useState2[1];var _useState3=useState(new BigNumber(0)),_useState4=_slicedToArray(_useState3,2),userWETHAllowance=_useState4[0],setUserWETHAllowance=_useState4[1];var _useState5=useState(new BigNumber(0)),_useState6=_slicedToArray(_useState5,2),pairBalanceCOOK=_useState6[0],setPairBalanceCOOK=_useState6[1];var _useState7=useState(new BigNumber(0)),_useState8=_slicedToArray(_useState7,2),pairBalanceWETH=_useState8[0],setPairBalanceWETH=_useState8[1];var _useState9=useState(new BigNumber(0)),_useState10=_slicedToArray(_useState9,2),userVestingBalance=_useState10[0],setUserVestingBalance=_useState10[1];var _useState11=useState(new BigNumber(0)),_useState12=_slicedToArray(_useState11,2),userVestedBalance=_useState12[0],setUserVestedBalance=_useState12[1];var _useState13=useState(new BigNumber(0)),_useState14=_slicedToArray(_useState13,2),userAvalibleBalance=_useState14[0],setUserAvalibleBalance=_useState14[1];var _useState15=useState(new BigNumber(0)),_useState16=_slicedToArray(_useState15,2),startDay=_useState16[0],setStartDay=_useState16[1];var _useState17=useState(new BigNumber(0)),_useState18=_slicedToArray(_useState17,2),today=_useState18[0],setToday=_useState18[1];var _useState19=useState([]),_useState20=_slicedToArray(_useState19,2),managedPools=_useState20[0],setManagedPools=_useState20[1];//Update User balances\nuseEffect(function(){if(user===''){setUserVestingBalance(new BigNumber(0));setUserVestedBalance(new BigNumber(0));setUserAvalibleBalance(new BigNumber(0));setPairBalanceCOOK(new BigNumber(0));setPairBalanceWETH(new BigNumber(0));setUserWETHBalance(new BigNumber(0));setUserWETHAllowance(new BigNumber(0));setStartDay(new BigNumber(0));setToday(new BigNumber(0));setManagedPools([]);return;}var isCancelled=false;function updateUserInfo(){return _updateUserInfo.apply(this,arguments);}function _updateUserInfo(){_updateUserInfo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$Promise$all,_yield$Promise$all2,vestingBalance,vestedBalance,avalibleBalance,startTimeStamp,tDay,pairBalanceCOOKStr,pairBalanceWETHStr,wethBalance,wethAllowance,userVestingBalance,userVestedBalance,userAvalibleBalance,startDay,todayNumber,pairCOOKBalance,pairWETHBalance,userWETHBalance,poolList;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Promise.all([getDistributionVestingAmount(CookDistribution,user),getDistributionVestedAmount(CookDistribution,user),getDistributionAvalibleAmount(CookDistribution,user),getDistributionStartTimestamp(CookDistribution),getTodayNumber(CookDistribution),getTokenBalance(COOK.addr,UNI.addr),getTokenBalance(WETH.addr,UNI.addr),getTokenBalance(WETH.addr,user),getTokenAllowance(WETH.addr,user,CookDistribution)]);case 2:_yield$Promise$all=_context2.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,9);vestingBalance=_yield$Promise$all2[0];vestedBalance=_yield$Promise$all2[1];avalibleBalance=_yield$Promise$all2[2];startTimeStamp=_yield$Promise$all2[3];tDay=_yield$Promise$all2[4];pairBalanceCOOKStr=_yield$Promise$all2[5];pairBalanceWETHStr=_yield$Promise$all2[6];wethBalance=_yield$Promise$all2[7];wethAllowance=_yield$Promise$all2[8];console.log('wethAllowance',wethAllowance);userVestingBalance=toTokenUnitsBN(vestingBalance,COOK.decimals);userVestedBalance=toTokenUnitsBN(vestedBalance,COOK.decimals);userAvalibleBalance=toTokenUnitsBN(avalibleBalance,COOK.decimals);startDay=new BigNumber(startTimeStamp).div(86400).decimalPlaces(0,1);todayNumber=new BigNumber(tDay);pairCOOKBalance=toTokenUnitsBN(pairBalanceCOOKStr,COOK.decimals);pairWETHBalance=toTokenUnitsBN(pairBalanceWETHStr,WETH.decimals);userWETHBalance=toTokenUnitsBN(wethBalance,WETH.decimals);_context2.next=24;return Promise.all(POOLS.map(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(pool){var _yield$Promise$all3,_yield$Promise$all4,lockedup,reward,staked,totalStaked,totalStakedBalance,userTotalStakedBalance,poolRewardPerBlock;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Promise.all([getStakeLockupDuration(pool.address),getRewardPerBlock(pool.address),getTotalStaked(pool.address),getPoolBalanceOfStaked(pool.address,user)]);case 2:_yield$Promise$all3=_context.sent;_yield$Promise$all4=_slicedToArray(_yield$Promise$all3,4);lockedup=_yield$Promise$all4[0];reward=_yield$Promise$all4[1];staked=_yield$Promise$all4[2];totalStaked=_yield$Promise$all4[3];totalStakedBalance=toTokenUnitsBN(totalStaked,UNI.decimals);userTotalStakedBalance=toTokenUnitsBN(staked,UNI.decimals);poolRewardPerBlock=toTokenUnitsBN(reward,COOK.decimals);return _context.abrupt(\"return\",{pool:pool.address,lockedUp:lockedup,reward:poolRewardPerBlock,staked:userTotalStakedBalance,totalStaked:totalStakedBalance,name:pool.name,address:pool.address,lockedUpPeriod:lockedup,rewardPerBlock:poolRewardPerBlock});case 12:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}()));case 24:poolList=_context2.sent;if(!isCancelled){setUserVestingBalance(new BigNumber(userVestingBalance));setUserVestedBalance(new BigNumber(userVestedBalance));setUserAvalibleBalance(new BigNumber(userAvalibleBalance));setStartDay(new BigNumber(startDay));setToday(new BigNumber(todayNumber));setPairBalanceCOOK(new BigNumber(pairCOOKBalance));setPairBalanceWETH(new BigNumber(pairWETHBalance));setUserWETHBalance(new BigNumber(userWETHBalance));setManagedPools(poolList);console.log(wethAllowance);setUserWETHAllowance(new BigNumber(wethAllowance));}case 26:case\"end\":return _context2.stop();}}},_callee2);}));return _updateUserInfo.apply(this,arguments);}updateUserInfo();var id=setInterval(updateUserInfo,1000);// eslint-disable-next-line consistent-return\nreturn function(){isCancelled=true;clearInterval(id);};},[user]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(\"div\",{style:{fontWeight:'bold',fontSize:40}},\"Cook Protocol\"),/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:30,marginBottom:50,fontSize:20}},\"Mobri.........\"),/*#__PURE__*/React.createElement(\"div\",{style:{fontWeight:'bold',fontSize:35}},\"Total Token 10,000,000 COOK\")),/*#__PURE__*/React.createElement(WithdrawPageHeader,{accountVestingBalance:userVestingBalance,accountAvalibleBalance:userAvalibleBalance,accountVestedBalance:userVestedBalance,todayNumber:today,startDayNumber:startDay}),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xs:6,style:{textAlign:\"right\"}},/*#__PURE__*/React.createElement(Withdraw,{user:user,vestingAmount:userVestingBalance,availableAmount:userAvalibleBalance,records:[]})),/*#__PURE__*/React.createElement(Col,{xs:6},/*#__PURE__*/React.createElement(DistributionZap,{user:user,pools:managedPools,cookAvailable:userAvalibleBalance,wethBalance:userWETHBalance,wethAllowance:userWETHAllowance,pairBalanceWETH:pairBalanceWETH,pairBalanceCOOK:pairBalanceCOOK}))));}export default Distribution;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/Distribution/index.tsx"],"names":["React","useState","useEffect","useParams","BigNumber","getDistributionVestingAmount","getDistributionVestedAmount","getDistributionAvalibleAmount","getDistributionStartTimestamp","getTodayNumber","getTokenAllowance","getTokenBalance","getStakeLockupDuration","getRewardPerBlock","getTotalStaked","getPoolBalanceOfStaked","COOK","UNI","WETH","CookDistribution","POOLS","toTokenUnitsBN","WithdrawPageHeader","Withdraw","DistributionZap","Row","Col","Distribution","user","override","userWETHBalance","setUserWETHBalance","userWETHAllowance","setUserWETHAllowance","pairBalanceCOOK","setPairBalanceCOOK","pairBalanceWETH","setPairBalanceWETH","userVestingBalance","setUserVestingBalance","userVestedBalance","setUserVestedBalance","userAvalibleBalance","setUserAvalibleBalance","startDay","setStartDay","today","setToday","managedPools","setManagedPools","isCancelled","updateUserInfo","Promise","all","addr","vestingBalance","vestedBalance","avalibleBalance","startTimeStamp","tDay","pairBalanceCOOKStr","pairBalanceWETHStr","wethBalance","wethAllowance","console","log","decimals","div","decimalPlaces","todayNumber","pairCOOKBalance","pairWETHBalance","map","pool","address","lockedup","reward","staked","totalStaked","totalStakedBalance","userTotalStakedBalance","poolRewardPerBlock","lockedUp","name","lockedUpPeriod","rewardPerBlock","poolList","id","setInterval","clearInterval","textAlign","fontWeight","fontSize","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport BigNumber from 'bignumber.js';\nimport {getDistributionVestingAmount,\n        getDistributionVestedAmount,\n        getDistributionAvalibleAmount,\n        getDistributionStartTimestamp,\n        getTodayNumber,\n        getTokenAllowance,\n        getTokenBalance,\n        getStakeLockupDuration,\n        getRewardPerBlock,\n        getTotalStaked,\n        getPoolBalanceOfStaked} from '../../utils/infura';\nimport {COOK, UNI, WETH} from \"../../constants/tokens\";\nimport {CookDistribution, POOLS} from \"../../constants/contracts\";\nimport { toTokenUnitsBN } from '../../utils/number';\nimport WithdrawPageHeader from \"./Header\";\nimport Withdraw from \"./Withdraw\";\nimport DistributionZap from \"./DistributionZap\";\nimport { Row, Col } from 'react-grid-system';\n\nfunction Distribution({ user }: {user: string}) {\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n\n  const [userWETHBalance, setUserWETHBalance] = useState(new BigNumber(0));\n  const [userWETHAllowance, setUserWETHAllowance] = useState(new BigNumber(0));\n\n  const [pairBalanceCOOK, setPairBalanceCOOK] = useState(new BigNumber(0));\n  const [pairBalanceWETH, setPairBalanceWETH] = useState(new BigNumber(0));\n\n\n  const [userVestingBalance, setUserVestingBalance] = useState(new BigNumber(0));\n  const [userVestedBalance, setUserVestedBalance] = useState(new BigNumber(0));\n  const [userAvalibleBalance, setUserAvalibleBalance] = useState(new BigNumber(0));\n\n  const [startDay, setStartDay] = useState(new BigNumber(0));\n  const [today, setToday] = useState(new BigNumber(0));\n  const [managedPools, setManagedPools] = useState([] as any);\n\n\n  //Update User balances\n  useEffect(() => {\n    if (user === '') {\n      setUserVestingBalance(new BigNumber(0));\n      setUserVestedBalance(new BigNumber(0));\n      setUserAvalibleBalance(new BigNumber(0));\n      setPairBalanceCOOK(new BigNumber(0));\n      setPairBalanceWETH(new BigNumber(0));\n      setUserWETHBalance(new BigNumber(0));\n      setUserWETHAllowance(new BigNumber(0));\n      setStartDay(new BigNumber(0));\n      setToday(new BigNumber(0));\n      setManagedPools([]);\n      return;\n    }\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [vestingBalance,\n             vestedBalance,\n             avalibleBalance,\n             startTimeStamp,\n             tDay,\n             pairBalanceCOOKStr,\n             pairBalanceWETHStr,\n             wethBalance,\n             wethAllowance\n           ] = await Promise.all([\n        getDistributionVestingAmount(CookDistribution, user),\n        getDistributionVestedAmount(CookDistribution, user),\n        getDistributionAvalibleAmount(CookDistribution, user),\n        getDistributionStartTimestamp(CookDistribution),\n        getTodayNumber(CookDistribution),\n        getTokenBalance(COOK.addr, UNI.addr),\n        getTokenBalance(WETH.addr, UNI.addr),\n        getTokenBalance(WETH.addr, user),\n        getTokenAllowance(WETH.addr, user, CookDistribution)\n      ]);\n      console.log('wethAllowance',wethAllowance);\n      const userVestingBalance = toTokenUnitsBN(vestingBalance, COOK.decimals);\n      const userVestedBalance = toTokenUnitsBN(vestedBalance, COOK.decimals);\n      const userAvalibleBalance = toTokenUnitsBN(avalibleBalance, COOK.decimals);\n      const startDay = new BigNumber(startTimeStamp).div(86400).decimalPlaces(0, 1);\n      const todayNumber = new BigNumber(tDay);\n\n      const pairCOOKBalance = toTokenUnitsBN(pairBalanceCOOKStr, COOK.decimals);\n      const pairWETHBalance = toTokenUnitsBN(pairBalanceWETHStr, WETH.decimals);\n      const userWETHBalance = toTokenUnitsBN(wethBalance, WETH.decimals);\n\n\n      const poolList = await Promise.all(POOLS.map( async (pool)=>{\n        const [lockedup,reward,staked,totalStaked] =\n        await Promise.all([\n            getStakeLockupDuration(pool.address),\n            getRewardPerBlock(pool.address),\n            getTotalStaked(pool.address),\n            getPoolBalanceOfStaked(pool.address,user)\n          ])\n\n        const totalStakedBalance = toTokenUnitsBN(totalStaked, UNI.decimals);\n        const userTotalStakedBalance = toTokenUnitsBN(staked, UNI.decimals);\n        const poolRewardPerBlock = toTokenUnitsBN(reward, COOK.decimals);\n\n\n        return({pool:pool.address,lockedUp:lockedup,reward:poolRewardPerBlock,staked:userTotalStakedBalance,totalStaked:totalStakedBalance,\n                name: pool.name,\n                address: pool.address,\n                lockedUpPeriod: lockedup,\n                rewardPerBlock: poolRewardPerBlock})\n      }))\n\n      if (!isCancelled) {\n        setUserVestingBalance(new BigNumber(userVestingBalance));\n        setUserVestedBalance(new BigNumber(userVestedBalance));\n        setUserAvalibleBalance(new BigNumber(userAvalibleBalance));\n        setStartDay(new BigNumber(startDay));\n        setToday(new BigNumber(todayNumber));\n\n        setPairBalanceCOOK(new BigNumber(pairCOOKBalance));\n        setPairBalanceWETH(new BigNumber(pairWETHBalance));\n        setUserWETHBalance(new BigNumber(userWETHBalance));\n        setManagedPools(poolList)\n        console.log(wethAllowance);\n        setUserWETHAllowance(new BigNumber(wethAllowance));\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 1000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n\n  return (\n    <>\n      <div style={{textAlign:\"center\"}}>\n      <div style={{fontWeight:'bold', fontSize:40}}>Cook Protocol</div>\n      <div style={{marginTop:30, marginBottom:50,fontSize:20}}>{\"Mobri.........\"}</div>\n      <div style={{fontWeight:'bold', fontSize:35}}>Total Token 10,000,000 COOK</div>\n      </div>\n      <WithdrawPageHeader\n        accountVestingBalance={userVestingBalance}\n        accountAvalibleBalance={userAvalibleBalance}\n        accountVestedBalance={userVestedBalance}\n        todayNumber={today}\n        startDayNumber={startDay}\n      />\n      <Row>\n        <Col xs={6} style={{textAlign:\"right\"}}>\n        <Withdraw\n          user={user}\n          vestingAmount={userVestingBalance}\n          availableAmount={userAvalibleBalance}\n          records={[]}\n        /></Col>\n        <Col xs={6} >\n          <DistributionZap\n            user={user}\n            pools={managedPools}\n            cookAvailable={userAvalibleBalance}\n            wethBalance={userWETHBalance}\n            wethAllowance={userWETHAllowance}\n            pairBalanceWETH={pairBalanceWETH}\n            pairBalanceCOOK={pairBalanceCOOK}\n          />\n        </Col>\n      </Row>\n\n\n\n\n    </>\n  );\n}\n\nexport default Distribution;\n"]},"metadata":{},"sourceType":"module"}