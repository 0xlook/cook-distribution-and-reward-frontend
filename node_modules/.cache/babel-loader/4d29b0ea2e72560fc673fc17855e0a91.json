{"ast":null,"code":"import _regeneratorRuntime from\"/Users/huanwen/Work/Cook/cook-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/huanwen/Work/Cook/cook-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/huanwen/Work/Cook/cook-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import{getStakeLockupDuration,getRewardPerBlock,getBlockNumber,getBlockTimestamp}from'../../utils/infura';import{setPoolStakeLockupDuration,setPoolRewardPerBlock,setPoolBlockNumber,setPoolBlockTimestamp}from'../../utils/web3';import{Box,TextInput,Button,IconCirclePlus}from'@aragon/ui';import{toBaseUnitBN,toTokenUnitsBN}from'../../utils/number';import{COOK}from\"../../constants/tokens\";import BigNumber from'bignumber.js';import{BalanceBlock}from'../common/index';function SetParam(_ref){var user=_ref.user,poolAddress=_ref.poolAddress;var _useParams=useParams(),override=_useParams.override;if(override){user=override;}var _useState=useState(0),_useState2=_slicedToArray(_useState,2),stakeLockupDuration=_useState2[0],setStakeLockupDuration=_useState2[1];var _useState3=useState(new BigNumber(0)),_useState4=_slicedToArray(_useState3,2),rewardPerBlock=_useState4[0],setRewardPerBlock=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),blockNumber=_useState6[0],setBlockNumber=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),blockTimestamp=_useState8[0],setBlockTimestamp=_useState8[1];//Update User balances\nuseEffect(function(){var isCancelled=false;function updateUserInfo(){return _updateUserInfo.apply(this,arguments);}function _updateUserInfo(){_updateUserInfo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Promise$all,_yield$Promise$all2,stakeLockupDuration,rewardPerBlockStr,blockNumber,blockTimestamp,rewardPerBlock;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Promise.all([getStakeLockupDuration(poolAddress),getRewardPerBlock(poolAddress),getBlockNumber(poolAddress),getBlockTimestamp(poolAddress)]);case 2:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,4);stakeLockupDuration=_yield$Promise$all2[0];rewardPerBlockStr=_yield$Promise$all2[1];blockNumber=_yield$Promise$all2[2];blockTimestamp=_yield$Promise$all2[3];rewardPerBlock=toTokenUnitsBN(rewardPerBlockStr,COOK.decimals);if(!isCancelled){setStakeLockupDuration(stakeLockupDuration);setRewardPerBlock(rewardPerBlock);setBlockNumber(blockNumber);setBlockTimestamp(blockTimestamp);}case 10:case\"end\":return _context.stop();}}},_callee);}));return _updateUserInfo.apply(this,arguments);}updateUserInfo();var id=setInterval(updateUserInfo,15000);// eslint-disable-next-line consistent-return\nreturn function(){isCancelled=true;clearInterval(id);};},[user,poolAddress]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Box,{heading:\"Pool: \".concat(poolAddress)},/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',flexWrap:'wrap'}},/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'32%'}},/*#__PURE__*/React.createElement(BalanceBlock,{asset:\"Block Number\",balance:blockNumber})),/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'33%',paddingTop:'2%'}},/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex'}},/*#__PURE__*/React.createElement(\"div\",{style:{width:'60%',minWidth:'6em'}},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TextInput,{value:blockNumber,onChange:function onChange(event){setBlockNumber(event.target.value);}}))),/*#__PURE__*/React.createElement(\"div\",{style:{width:'40%',minWidth:'7em'}},/*#__PURE__*/React.createElement(Button,{wide:true,icon:/*#__PURE__*/React.createElement(IconCirclePlus,null),label:\"Set\",onClick:function onClick(){setPoolBlockNumber(poolAddress,blockNumber);},disabled:user===''||poolAddress===''})))),/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'2%'}})),/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',flexWrap:'wrap'}},/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'32%'}},/*#__PURE__*/React.createElement(BalanceBlock,{asset:\"Block Timestamp\",balance:blockTimestamp})),/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'33%',paddingTop:'2%'}},/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex'}},/*#__PURE__*/React.createElement(\"div\",{style:{width:'60%',minWidth:'6em'}},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TextInput,{value:blockTimestamp,onChange:function onChange(event){setBlockTimestamp(event.target.value);}}))),/*#__PURE__*/React.createElement(\"div\",{style:{width:'40%',minWidth:'7em'}},/*#__PURE__*/React.createElement(Button,{wide:true,icon:/*#__PURE__*/React.createElement(IconCirclePlus,null),label:\"Set\",onClick:function onClick(){setPoolBlockTimestamp(poolAddress,blockTimestamp);},disabled:user===''||poolAddress===''})))),/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'2%'}})),/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',flexWrap:'wrap'}},/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'32%'}},/*#__PURE__*/React.createElement(BalanceBlock,{asset:\"Lock-Up Period\",balance:stakeLockupDuration,suffix:\"Days\"})),/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'33%',paddingTop:'2%'}},/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex'}},/*#__PURE__*/React.createElement(\"div\",{style:{width:'60%',minWidth:'6em'}},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TextInput,{adornment:\"Days\",adornmentPosition:\"end\",value:stakeLockupDuration,onChange:function onChange(event){setStakeLockupDuration(event.target.value);}}))),/*#__PURE__*/React.createElement(\"div\",{style:{width:'40%',minWidth:'7em'}},/*#__PURE__*/React.createElement(Button,{wide:true,icon:/*#__PURE__*/React.createElement(IconCirclePlus,null),label:\"Set\",onClick:function onClick(){setPoolStakeLockupDuration(poolAddress,stakeLockupDuration);},disabled:user===''||poolAddress===''})))),/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'2%'}})),/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',flexWrap:'wrap'}},/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'32%'}},/*#__PURE__*/React.createElement(BalanceBlock,{asset:\"Reward Per Block\",balance:rewardPerBlock,suffix:\"COOK/BLOCK\"})),/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'33%',paddingTop:'2%'}},/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex'}},/*#__PURE__*/React.createElement(\"div\",{style:{width:'60%',minWidth:'6em'}},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TextInput,{adornment:\"COOK/BLOCK\",adornmentPosition:\"end\",value:rewardPerBlock,onChange:function onChange(event){setRewardPerBlock(event.target.value);}}))),/*#__PURE__*/React.createElement(\"div\",{style:{width:'40%',minWidth:'7em'}},/*#__PURE__*/React.createElement(Button,{wide:true,icon:/*#__PURE__*/React.createElement(IconCirclePlus,null),label:\"Set\",onClick:function onClick(){setPoolRewardPerBlock(poolAddress,toBaseUnitBN(rewardPerBlock,COOK.decimals));},disabled:user===''||poolAddress===''})))),/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'2%'}}))));}export default SetParam;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/Admin/SetParam.tsx"],"names":["React","useState","useEffect","useParams","getStakeLockupDuration","getRewardPerBlock","getBlockNumber","getBlockTimestamp","setPoolStakeLockupDuration","setPoolRewardPerBlock","setPoolBlockNumber","setPoolBlockTimestamp","Box","TextInput","Button","IconCirclePlus","toBaseUnitBN","toTokenUnitsBN","COOK","BigNumber","BalanceBlock","SetParam","user","poolAddress","override","stakeLockupDuration","setStakeLockupDuration","rewardPerBlock","setRewardPerBlock","blockNumber","setBlockNumber","blockTimestamp","setBlockTimestamp","isCancelled","updateUserInfo","Promise","all","rewardPerBlockStr","decimals","id","setInterval","clearInterval","display","flexWrap","flexBasis","paddingTop","width","minWidth","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  getStakeLockupDuration,\n  getRewardPerBlock,\n  getBlockNumber,\n  getBlockTimestamp\n} from '../../utils/infura';\nimport {\n  setPoolStakeLockupDuration,\n  setPoolRewardPerBlock,\n  setPoolBlockNumber,\n  setPoolBlockTimestamp\n} from '../../utils/web3';\nimport {\n  Box, TextInput, Button, IconCirclePlus\n} from '@aragon/ui';\nimport {toBaseUnitBN,toTokenUnitsBN} from '../../utils/number';\nimport {COOK} from \"../../constants/tokens\";\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock,\n} from '../common/index';\n\nfunction SetParam({ user, poolAddress }: {user: string, poolAddress: string}) {\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n\n  const [stakeLockupDuration, setStakeLockupDuration] = useState(0);\n  const [rewardPerBlock, setRewardPerBlock] = useState(new BigNumber(0));\n  const [blockNumber, setBlockNumber] = useState(0);\n  const [blockTimestamp, setBlockTimestamp] = useState(0);\n\n  //Update User balances\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [\n        stakeLockupDuration,\n        rewardPerBlockStr,\n        blockNumber,\n        blockTimestamp,\n      ] = await Promise.all([\n        getStakeLockupDuration(poolAddress),\n        getRewardPerBlock(poolAddress),\n        getBlockNumber(poolAddress),\n        getBlockTimestamp(poolAddress)\n      ]);\n\n      const rewardPerBlock = toTokenUnitsBN(rewardPerBlockStr, COOK.decimals);\n\n      if (!isCancelled) {\n        setStakeLockupDuration(stakeLockupDuration);\n        setRewardPerBlock(rewardPerBlock);\n        setBlockNumber(blockNumber);\n        setBlockTimestamp(blockTimestamp);\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user, poolAddress]);\n\n  return (\n    <>\n       <Box heading={`Pool: ${poolAddress}`}>\n        <div style={{display: 'flex', flexWrap: 'wrap'}}>\n          <div style={{flexBasis: '32%'}}>\n            <BalanceBlock asset=\"Block Number\" balance={blockNumber}/>\n          </div>\n          <div style={{flexBasis: '33%', paddingTop: '2%'}}>\n            <div style={{display: 'flex'}}>\n              <div style={{width: '60%', minWidth: '6em'}}>\n                <>\n                  <TextInput\n                    value={blockNumber}\n                    onChange={event => {\n                      setBlockNumber(event.target.value)\n                    }}\n                  />\n                </>\n              </div>\n              <div style={{width: '40%', minWidth: '7em'}}>\n                <Button\n                  wide\n                  icon={<IconCirclePlus/>}\n                  label=\"Set\"\n                  onClick={() => {\n                    setPoolBlockNumber(\n                      poolAddress,\n                      blockNumber\n                    );\n                  }}\n                  disabled={user === '' ||  poolAddress === ''}\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{flexBasis: '2%'}}/>\n        </div>\n        <div style={{display: 'flex', flexWrap: 'wrap'}}>\n          <div style={{flexBasis: '32%'}}>\n            <BalanceBlock asset=\"Block Timestamp\" balance={blockTimestamp}/>\n          </div>\n          <div style={{flexBasis: '33%', paddingTop: '2%'}}>\n            <div style={{display: 'flex'}}>\n              <div style={{width: '60%', minWidth: '6em'}}>\n                <>\n                  <TextInput\n                    value={blockTimestamp}\n                    onChange={event => {\n                      setBlockTimestamp(event.target.value)\n                    }}\n                  />\n                </>\n              </div>\n              <div style={{width: '40%', minWidth: '7em'}}>\n                <Button\n                  wide\n                  icon={<IconCirclePlus/>}\n                  label=\"Set\"\n                  onClick={() => {\n                    setPoolBlockTimestamp(\n                      poolAddress,\n                      blockTimestamp\n                    );\n                  }}\n                  disabled={user === '' ||  poolAddress === ''}\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{flexBasis: '2%'}}/>\n        </div>\n        <div style={{display: 'flex', flexWrap: 'wrap'}}>\n          <div style={{flexBasis: '32%'}}>\n            <BalanceBlock asset=\"Lock-Up Period\" balance={stakeLockupDuration} suffix={\"Days\"}/>\n          </div>\n          <div style={{flexBasis: '33%', paddingTop: '2%'}}>\n            <div style={{display: 'flex'}}>\n              <div style={{width: '60%', minWidth: '6em'}}>\n                <>\n                  <TextInput\n                    adornment=\"Days\"\n                    adornmentPosition=\"end\"\n                    value={stakeLockupDuration}\n                    onChange={event => {\n                      setStakeLockupDuration(event.target.value)\n                    }}\n                  />\n                </>\n              </div>\n              <div style={{width: '40%', minWidth: '7em'}}>\n                <Button\n                  wide\n                  icon={<IconCirclePlus/>}\n                  label=\"Set\"\n                  onClick={() => {\n                    setPoolStakeLockupDuration(\n                      poolAddress,\n                      stakeLockupDuration\n                    );\n                  }}\n                  disabled={user === '' ||  poolAddress === ''}\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{flexBasis: '2%'}}/>\n        </div>\n        <div style={{display: 'flex', flexWrap: 'wrap'}}>\n          <div style={{flexBasis: '32%'}}>\n            <BalanceBlock asset=\"Reward Per Block\" balance={rewardPerBlock} suffix={\"COOK/BLOCK\"}/>\n          </div>\n          <div style={{flexBasis: '33%', paddingTop: '2%'}}>\n            <div style={{display: 'flex'}}>\n              <div style={{width: '60%', minWidth: '6em'}}>\n                <>\n                  <TextInput\n                    adornment=\"COOK/BLOCK\"\n                    adornmentPosition=\"end\"\n                    value={rewardPerBlock}\n                    onChange={event => {\n                      setRewardPerBlock(event.target.value)\n                    }}\n                  />\n                </>\n              </div>\n              <div style={{width: '40%', minWidth: '7em'}}>\n                <Button\n                  wide\n                  icon={<IconCirclePlus/>}\n                  label=\"Set\"\n                  onClick={() => {\n                    setPoolRewardPerBlock(\n                      poolAddress,\n                      toBaseUnitBN(rewardPerBlock, COOK.decimals),\n\n                    );\n                  }}\n                  disabled={user === '' ||  poolAddress === ''}\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{flexBasis: '2%'}}/>\n        </div>\n      </Box>\n    </>\n  );\n}\n\nexport default SetParam;\n"]},"metadata":{},"sourceType":"module"}