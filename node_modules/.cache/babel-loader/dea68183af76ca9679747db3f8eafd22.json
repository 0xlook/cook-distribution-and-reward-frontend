{"ast":null,"code":"import _regeneratorRuntime from\"/Users/huanwen/Work/Cook/cook-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/huanwen/Work/Cook/cook-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/huanwen/Work/Cook/cook-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import _ from'lodash';import BigNumber from'bignumber.js';import{getPoolBalanceOfStaked,getPoolBalanceOfUnstakable,getPoolBalanceOfRewarded,getPoolBalanceOfVesting,getPoolBalanceOfClaimable,getPoolBalanceOfClaimed,getTokenAllowance,getTokenBalance}from'../../utils/infura';import{COOK,UNI,WETH}from\"../../constants/tokens\";import{toTokenUnitsBN}from'../../utils/number';import Unstake from\"./Unstake\";import Stake from\"./Stake\";import Claim from\"./Claim\";import Harvest from\"./Harvest\";import Zap from\"./Zap\";import{Box}from'@aragon/ui';import{Container,Row,Col}from'react-grid-system';import{BalanceBlock}from'../common/index';function Pool(_ref){var user=_ref.user,poolAddress=_ref.poolAddress,pools=_ref.pools;var _useParams=useParams(),override=_useParams.override,address=_useParams.address;if(override){user=override;}if(address){poolAddress=address;}var _useState=useState(new BigNumber(0)),_useState2=_slicedToArray(_useState,2),pairBalanceCOOK=_useState2[0],setPairBalanceCOOK=_useState2[1];var _useState3=useState(new BigNumber(0)),_useState4=_slicedToArray(_useState3,2),pairBalanceWETH=_useState4[0],setPairBalanceWETH=_useState4[1];var _useState5=useState(new BigNumber(0)),_useState6=_slicedToArray(_useState5,2),userTotalStaked=_useState6[0],setUserTotalStaked=_useState6[1];var _useState7=useState(new BigNumber(0)),_useState8=_slicedToArray(_useState7,2),userTotalUnstakable=_useState8[0],setUserTotalUnstakable=_useState8[1];var _useState9=useState(new BigNumber(0)),_useState10=_slicedToArray(_useState9,2),userTotalLocked=_useState10[0],setUserTotalLocked=_useState10[1];var _useState11=useState(new BigNumber(0)),_useState12=_slicedToArray(_useState11,2),userTotalRewarded=_useState12[0],setUserTotalRewarded=_useState12[1];var _useState13=useState(new BigNumber(0)),_useState14=_slicedToArray(_useState13,2),userTotalInVesting=_useState14[0],setUserInTotalVesting=_useState14[1];var _useState15=useState(new BigNumber(0)),_useState16=_slicedToArray(_useState15,2),userTotalVested=_useState16[0],setUserTotalVested=_useState16[1];var _useState17=useState(new BigNumber(0)),_useState18=_slicedToArray(_useState17,2),userUNIAllowance=_useState18[0],setUserUNIAllowance=_useState18[1];var _useState19=useState(new BigNumber(0)),_useState20=_slicedToArray(_useState19,2),userUNIBalance=_useState20[0],setUserUNIBalance=_useState20[1];var _useState21=useState(new BigNumber(0)),_useState22=_slicedToArray(_useState21,2),userWETHBalance=_useState22[0],setUserWETHBalance=_useState22[1];var _useState23=useState(new BigNumber(0)),_useState24=_slicedToArray(_useState23,2),userWETHAllowance=_useState24[0],setUserWETHAllowance=_useState24[1];//Update User balances\nuseEffect(function(){if(poolAddress===''){setPairBalanceCOOK(new BigNumber(0));setPairBalanceWETH(new BigNumber(0));setUserTotalStaked(new BigNumber(0));setUserTotalUnstakable(new BigNumber(0));setUserTotalLocked(new BigNumber(0));setUserTotalRewarded(new BigNumber(0));setUserInTotalVesting(new BigNumber(0));setUserTotalVested(new BigNumber(0));setUserUNIAllowance(new BigNumber(0));setUserUNIBalance(new BigNumber(0));setUserWETHBalance(new BigNumber(0));setUserWETHAllowance(new BigNumber(0));return;}var isCancelled=false;function updatePoolInfo(){return _updatePoolInfo.apply(this,arguments);}function _updatePoolInfo(){_updatePoolInfo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Promise$all,_yield$Promise$all2,pairBalanceCOOKStr,pairBalanceWETHStr,pairCOOKBalance,pairWETHBalance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Promise.all([getTokenBalance(COOK.addr,UNI.addr),getTokenBalance(WETH.addr,UNI.addr)]);case 2:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);pairBalanceCOOKStr=_yield$Promise$all2[0];pairBalanceWETHStr=_yield$Promise$all2[1];pairCOOKBalance=toTokenUnitsBN(pairBalanceCOOKStr,COOK.decimals);pairWETHBalance=toTokenUnitsBN(pairBalanceWETHStr,WETH.decimals);if(!isCancelled){setPairBalanceCOOK(new BigNumber(pairCOOKBalance));setPairBalanceWETH(new BigNumber(pairWETHBalance));}case 9:case\"end\":return _context.stop();}}},_callee);}));return _updatePoolInfo.apply(this,arguments);}updatePoolInfo();var poolInfoId=setInterval(updatePoolInfo,15000);if(user===''){setUserTotalStaked(new BigNumber(0));setUserTotalUnstakable(new BigNumber(0));setUserTotalLocked(new BigNumber(0));setUserTotalRewarded(new BigNumber(0));setUserInTotalVesting(new BigNumber(0));setUserTotalVested(new BigNumber(0));setUserUNIAllowance(new BigNumber(0));setUserUNIBalance(new BigNumber(0));setUserWETHBalance(new BigNumber(0));setUserWETHAllowance(new BigNumber(0));return function(){isCancelled=true;clearInterval(poolInfoId);};}function updateUserInfo(){return _updateUserInfo.apply(this,arguments);}function _updateUserInfo(){_updateUserInfo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$Promise$all3,_yield$Promise$all4,userTotalStakedStr,userTotalUnstakableStr,userTotalRewardedStr,userTotalVestingStr,userTotalVestedStr,userTotalClaimedStr,uniAllowance,uniBalance,wethAllowance,wethBalance,userTotalStakedBalance,userTotalUnstakableBalance,userTotalLockedBalance,userTotalRewardedBalance,userTotalVestingBalance,userTotalVestedBalance,userTotalClaimedBalance,userTotalInVestingBalance,userUNIBalance,userWETHBalance;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Promise.all([getPoolBalanceOfStaked(poolAddress,user),getPoolBalanceOfUnstakable(poolAddress,user),getPoolBalanceOfRewarded(poolAddress,user),getPoolBalanceOfVesting(poolAddress,user),getPoolBalanceOfClaimable(poolAddress,user),getPoolBalanceOfClaimed(poolAddress,user),getTokenAllowance(UNI.addr,user,poolAddress),getTokenBalance(UNI.addr,user),getTokenAllowance(WETH.addr,user,poolAddress),getTokenBalance(WETH.addr,user)]);case 2:_yield$Promise$all3=_context2.sent;_yield$Promise$all4=_slicedToArray(_yield$Promise$all3,10);userTotalStakedStr=_yield$Promise$all4[0];userTotalUnstakableStr=_yield$Promise$all4[1];userTotalRewardedStr=_yield$Promise$all4[2];userTotalVestingStr=_yield$Promise$all4[3];userTotalVestedStr=_yield$Promise$all4[4];userTotalClaimedStr=_yield$Promise$all4[5];uniAllowance=_yield$Promise$all4[6];uniBalance=_yield$Promise$all4[7];wethAllowance=_yield$Promise$all4[8];wethBalance=_yield$Promise$all4[9];userTotalStakedBalance=toTokenUnitsBN(userTotalStakedStr,UNI.decimals);userTotalUnstakableBalance=toTokenUnitsBN(userTotalUnstakableStr,UNI.decimals);userTotalLockedBalance=new BigNumber(userTotalStakedBalance).minus(new BigNumber(userTotalUnstakableBalance));userTotalRewardedBalance=toTokenUnitsBN(userTotalRewardedStr,COOK.decimals);userTotalVestingBalance=toTokenUnitsBN(userTotalVestingStr,COOK.decimals);userTotalVestedBalance=toTokenUnitsBN(userTotalVestedStr,COOK.decimals);userTotalClaimedBalance=toTokenUnitsBN(userTotalClaimedStr,COOK.decimals);userTotalInVestingBalance=new BigNumber(userTotalVestingBalance).minus(new BigNumber(userTotalVestedBalance)).minus(new BigNumber(userTotalClaimedBalance));userUNIBalance=toTokenUnitsBN(uniBalance,UNI.decimals);userWETHBalance=toTokenUnitsBN(wethBalance,WETH.decimals);if(!isCancelled){setUserTotalStaked(new BigNumber(userTotalStakedBalance));setUserTotalUnstakable(new BigNumber(userTotalUnstakableBalance));setUserTotalLocked(new BigNumber(userTotalLockedBalance));setUserTotalRewarded(new BigNumber(userTotalRewardedBalance));setUserInTotalVesting(new BigNumber(userTotalInVestingBalance));setUserTotalVested(new BigNumber(userTotalVestedBalance));setUserUNIAllowance(new BigNumber(uniAllowance));setUserUNIBalance(new BigNumber(userUNIBalance));setUserWETHAllowance(new BigNumber(wethAllowance));setUserWETHBalance(new BigNumber(userWETHBalance));}case 25:case\"end\":return _context2.stop();}}},_callee2);}));return _updateUserInfo.apply(this,arguments);}updateUserInfo();var userInfoId=setInterval(updateUserInfo,15000);// eslint-disable-next-line consistent-return\nreturn function(){isCancelled=true;clearInterval(poolInfoId);clearInterval(userInfoId);};},[user,poolAddress]);var poolList=[_.find(pools,{'address':poolAddress})];return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Box,{style:{padding:0}},/*#__PURE__*/React.createElement(Row,{style:{textAlign:\"center\",display:'flex'}},/*#__PURE__*/React.createElement(Col,{xs:12,lg:8},/*#__PURE__*/React.createElement(BalanceBlock,{asset:\"To be Vested Tokens\",balance:userTotalRewarded,suffix:\"COOK\",type:\"block\"}),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(BalanceBlock,{asset:\"Vesting Tokens\",balance:userTotalInVesting,suffix:\"COOK\",type:\"block\"}),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(BalanceBlock,{asset:\"Vested Tokens\",balance:userTotalVested,suffix:\"COOK\",type:\"block\"})),/*#__PURE__*/React.createElement(Col,{xs:12,lg:4,style:{margin:'auto'}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:6,lg:12},/*#__PURE__*/React.createElement(Harvest,{user:user,pools:poolList,poolAddress:poolAddress,userTotalRewarded:userTotalRewarded,userTotalInVesting:userTotalInVesting})),/*#__PURE__*/React.createElement(Col,{sm:6,lg:12},/*#__PURE__*/React.createElement(Claim,{user:user,pools:poolList,poolAddress:poolAddress,claimable:userTotalVested})))))),/*#__PURE__*/React.createElement(Row,{style:{textAlign:\"center\",marginTop:30,padding:\"0 5%\"}},/*#__PURE__*/React.createElement(Col,{sm:6,lg:4},/*#__PURE__*/React.createElement(Stake,{pools:poolList,user:user,poolAddress:poolAddress,balance:userUNIBalance,allowance:userUNIAllowance,staked:userTotalStaked})),/*#__PURE__*/React.createElement(Col,{sm:6,lg:4},/*#__PURE__*/React.createElement(Unstake,{user:user,pools:poolList,poolAddress:poolAddress,unstakable:userTotalUnstakable,locked:userTotalLocked})),/*#__PURE__*/React.createElement(Col,{sm:12,lg:4},/*#__PURE__*/React.createElement(Zap,{user:user,pools:poolList,cookAvailable:userTotalVested,selected:poolAddress,type:\"pool\",wethBalance:userWETHBalance,wethAllowance:userWETHAllowance,pairBalanceWETH:pairBalanceWETH,pairBalanceCOOK:pairBalanceCOOK}))));}export default Pool;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/Pool/index.tsx"],"names":["React","useState","useEffect","useParams","_","BigNumber","getPoolBalanceOfStaked","getPoolBalanceOfUnstakable","getPoolBalanceOfRewarded","getPoolBalanceOfVesting","getPoolBalanceOfClaimable","getPoolBalanceOfClaimed","getTokenAllowance","getTokenBalance","COOK","UNI","WETH","toTokenUnitsBN","Unstake","Stake","Claim","Harvest","Zap","Box","Container","Row","Col","BalanceBlock","Pool","user","poolAddress","pools","override","address","pairBalanceCOOK","setPairBalanceCOOK","pairBalanceWETH","setPairBalanceWETH","userTotalStaked","setUserTotalStaked","userTotalUnstakable","setUserTotalUnstakable","userTotalLocked","setUserTotalLocked","userTotalRewarded","setUserTotalRewarded","userTotalInVesting","setUserInTotalVesting","userTotalVested","setUserTotalVested","userUNIAllowance","setUserUNIAllowance","userUNIBalance","setUserUNIBalance","userWETHBalance","setUserWETHBalance","userWETHAllowance","setUserWETHAllowance","isCancelled","updatePoolInfo","Promise","all","addr","pairBalanceCOOKStr","pairBalanceWETHStr","pairCOOKBalance","decimals","pairWETHBalance","poolInfoId","setInterval","clearInterval","updateUserInfo","userTotalStakedStr","userTotalUnstakableStr","userTotalRewardedStr","userTotalVestingStr","userTotalVestedStr","userTotalClaimedStr","uniAllowance","uniBalance","wethAllowance","wethBalance","userTotalStakedBalance","userTotalUnstakableBalance","userTotalLockedBalance","minus","userTotalRewardedBalance","userTotalVestingBalance","userTotalVestedBalance","userTotalClaimedBalance","userTotalInVestingBalance","userInfoId","poolList","find","padding","textAlign","display","margin","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport _ from 'lodash'\nimport BigNumber from 'bignumber.js';\nimport {\n  getPoolBalanceOfStaked,\n  getPoolBalanceOfUnstakable,\n  getPoolBalanceOfRewarded,\n  getPoolBalanceOfVesting,\n  getPoolBalanceOfClaimable,\n  getPoolBalanceOfClaimed,\n  getTokenAllowance,\n  getTokenBalance\n} from '../../utils/infura';\nimport {COOK, UNI, WETH} from \"../../constants/tokens\";\nimport { toTokenUnitsBN } from '../../utils/number';\nimport Unstake from \"./Unstake\";\nimport Stake from \"./Stake\";\nimport Claim from \"./Claim\";\nimport Harvest from \"./Harvest\";\nimport Zap from \"./Zap\";\nimport {\n  Box\n} from '@aragon/ui';\nimport { Container, Row, Col } from 'react-grid-system';\nimport {\n  BalanceBlock\n} from '../common/index';\n\n\ntype PoolProps = {\n  pool:string,lockedUp:number,reward:BigNumber,staked:BigNumber,totalStaked:BigNumber\n};\n\nfunction Pool({ user, poolAddress, pools }: {user: string, poolAddress: string, pools: Array<PoolProps>}) {\n  const { override, address } = useParams();\n  if (override) {\n    user = override;\n  }\n  if (address) {\n    poolAddress = address;\n  }\n\n  const [pairBalanceCOOK, setPairBalanceCOOK] = useState(new BigNumber(0));\n  const [pairBalanceWETH, setPairBalanceWETH] = useState(new BigNumber(0));\n  const [userTotalStaked, setUserTotalStaked] = useState(new BigNumber(0));\n  const [userTotalUnstakable, setUserTotalUnstakable] = useState(new BigNumber(0));\n  const [userTotalLocked, setUserTotalLocked] = useState(new BigNumber(0));\n  const [userTotalRewarded, setUserTotalRewarded] = useState(new BigNumber(0));\n  const [userTotalInVesting, setUserInTotalVesting] = useState(new BigNumber(0));\n  const [userTotalVested, setUserTotalVested] = useState(new BigNumber(0));\n  const [userUNIAllowance, setUserUNIAllowance] = useState(new BigNumber(0));\n  const [userUNIBalance, setUserUNIBalance] = useState(new BigNumber(0));\n  const [userWETHBalance, setUserWETHBalance] = useState(new BigNumber(0));\n  const [userWETHAllowance, setUserWETHAllowance] = useState(new BigNumber(0));\n\n  //Update User balances\n  useEffect(() => {\n    if (poolAddress === '') {\n      setPairBalanceCOOK(new BigNumber(0));\n      setPairBalanceWETH(new BigNumber(0));\n      setUserTotalStaked(new BigNumber(0));\n      setUserTotalUnstakable(new BigNumber(0));\n      setUserTotalLocked(new BigNumber(0));\n      setUserTotalRewarded(new BigNumber(0));\n      setUserInTotalVesting(new BigNumber(0));\n      setUserTotalVested(new BigNumber(0));\n      setUserUNIAllowance(new BigNumber(0));\n      setUserUNIBalance(new BigNumber(0));\n      setUserWETHBalance(new BigNumber(0));\n      setUserWETHAllowance(new BigNumber(0));\n      return;\n    }\n\n    let isCancelled = false;\n\n    async function updatePoolInfo() {\n      const [\n        pairBalanceCOOKStr,\n        pairBalanceWETHStr,\n      ] = await Promise.all([\n        getTokenBalance(COOK.addr, UNI.addr),\n        getTokenBalance(WETH.addr, UNI.addr),\n      ]);\n\n      const pairCOOKBalance = toTokenUnitsBN(pairBalanceCOOKStr, COOK.decimals);\n      const pairWETHBalance = toTokenUnitsBN(pairBalanceWETHStr, WETH.decimals);\n\n      if (!isCancelled) {\n        setPairBalanceCOOK(new BigNumber(pairCOOKBalance));\n        setPairBalanceWETH(new BigNumber(pairWETHBalance));\n      }\n    }\n\n    updatePoolInfo();\n    const poolInfoId = setInterval(updatePoolInfo, 15000);\n\n    if (user === '') {\n      setUserTotalStaked(new BigNumber(0));\n      setUserTotalUnstakable(new BigNumber(0));\n      setUserTotalLocked(new BigNumber(0));\n      setUserTotalRewarded(new BigNumber(0));\n      setUserInTotalVesting(new BigNumber(0));\n      setUserTotalVested(new BigNumber(0));\n      setUserUNIAllowance(new BigNumber(0));\n      setUserUNIBalance(new BigNumber(0));\n      setUserWETHBalance(new BigNumber(0));\n      setUserWETHAllowance(new BigNumber(0));\n      return () => {\n        isCancelled = true;\n        clearInterval(poolInfoId);\n      };\n    }\n\n    async function updateUserInfo() {\n      const [\n        userTotalStakedStr,\n        userTotalUnstakableStr,\n        userTotalRewardedStr,\n        userTotalVestingStr,\n        userTotalVestedStr,\n        userTotalClaimedStr,\n        uniAllowance,\n        uniBalance,\n        wethAllowance,\n        wethBalance\n      ] = await Promise.all([\n        getPoolBalanceOfStaked(poolAddress, user),\n        getPoolBalanceOfUnstakable(poolAddress, user),\n        getPoolBalanceOfRewarded(poolAddress, user),\n        getPoolBalanceOfVesting(poolAddress, user),\n        getPoolBalanceOfClaimable(poolAddress, user),\n        getPoolBalanceOfClaimed(poolAddress, user),\n        getTokenAllowance(UNI.addr, user, poolAddress),\n        getTokenBalance(UNI.addr, user),\n        getTokenAllowance(WETH.addr, user, poolAddress),\n        getTokenBalance(WETH.addr, user),\n      ]);\n\n      const userTotalStakedBalance = toTokenUnitsBN(userTotalStakedStr, UNI.decimals);\n      const userTotalUnstakableBalance = toTokenUnitsBN(userTotalUnstakableStr, UNI.decimals);\n      const userTotalLockedBalance = (new BigNumber(userTotalStakedBalance)).minus(new BigNumber(userTotalUnstakableBalance));\n      const userTotalRewardedBalance = toTokenUnitsBN(userTotalRewardedStr, COOK.decimals);\n      const userTotalVestingBalance = toTokenUnitsBN(userTotalVestingStr, COOK.decimals);\n      const userTotalVestedBalance = toTokenUnitsBN(userTotalVestedStr, COOK.decimals);\n      const userTotalClaimedBalance = toTokenUnitsBN(userTotalClaimedStr, COOK.decimals);\n      const userTotalInVestingBalance = (new BigNumber(userTotalVestingBalance)).minus(new BigNumber(userTotalVestedBalance)).minus(new BigNumber(userTotalClaimedBalance));\n      const userUNIBalance = toTokenUnitsBN(uniBalance, UNI.decimals);\n      const userWETHBalance = toTokenUnitsBN(wethBalance, WETH.decimals);\n\n\n      if (!isCancelled) {\n        setUserTotalStaked(new BigNumber(userTotalStakedBalance));\n        setUserTotalUnstakable(new BigNumber(userTotalUnstakableBalance));\n        setUserTotalLocked(new BigNumber(userTotalLockedBalance));\n        setUserTotalRewarded(new BigNumber(userTotalRewardedBalance));\n        setUserInTotalVesting(new BigNumber(userTotalInVestingBalance));\n        setUserTotalVested(new BigNumber(userTotalVestedBalance));\n        setUserUNIAllowance(new BigNumber(uniAllowance));\n        setUserUNIBalance(new BigNumber(userUNIBalance));\n        setUserWETHAllowance(new BigNumber(wethAllowance));\n        setUserWETHBalance(new BigNumber(userWETHBalance));\n      }\n    }\n\n    updateUserInfo();\n    const userInfoId = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(poolInfoId);\n      clearInterval(userInfoId);\n    };\n  }, [user, poolAddress]);\n\n  const poolList = [_.find(pools, { 'address': poolAddress })]\n\n  return (\n    <Container>\n    <Box style={{padding:0}}>\n      <Row style={{textAlign:\"center\",display: 'flex'}}>\n        <Col xs={12} lg={8} >\n          <BalanceBlock asset=\"To be Vested Tokens\" balance={userTotalRewarded}  suffix={\"COOK\"} type={\"block\"}/>\n          <hr/>\n          <BalanceBlock asset=\"Vesting Tokens\" balance={userTotalInVesting} suffix={\"COOK\"} type={\"block\"}/>\n          <hr/>\n          <BalanceBlock asset=\"Vested Tokens\" balance={userTotalVested} suffix={\"COOK\"} type={\"block\"}/>\n        </Col>\n        <Col xs={12} lg={4} style={{margin:'auto'}}>\n          <Row>\n          <Col sm={6} lg={12}>\n          <Harvest\n            user={user}\n            pools={poolList}\n            poolAddress={poolAddress}\n            userTotalRewarded={userTotalRewarded}\n            userTotalInVesting={userTotalInVesting}\n          />\n          </Col>\n          <Col sm={6} lg={12}>\n          <Claim\n            user={user}\n            pools={poolList}\n            poolAddress={poolAddress}\n            claimable={userTotalVested}\n          />\n          </Col>\n          </Row>\n        </Col>\n      </Row>\n\n      </Box>\n    <Row style={{textAlign:\"center\", marginTop:30, padding:\"0 5%\"}}>\n      <Col sm={6} lg={4}>\n      <Stake\n        pools={poolList}\n        user={user}\n        poolAddress={poolAddress}\n        balance={userUNIBalance}\n        allowance={userUNIAllowance}\n        staked={userTotalStaked}\n      />\n      </Col>\n      <Col sm={6} lg={4}>\n      <Unstake\n        user={user}\n        pools={poolList}\n        poolAddress={poolAddress}\n        unstakable={userTotalUnstakable}\n        locked={userTotalLocked}\n      />\n      </Col>\n      <Col sm={12} lg={4}>\n      <Zap\n        user={user}\n        pools={poolList}\n        cookAvailable={userTotalVested}\n        selected={poolAddress}\n        type={\"pool\"}\n        wethBalance={userWETHBalance}\n        wethAllowance={userWETHAllowance}\n        pairBalanceWETH={pairBalanceWETH}\n        pairBalanceCOOK={pairBalanceCOOK}\n      />\n      </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Pool;\n"]},"metadata":{},"sourceType":"module"}