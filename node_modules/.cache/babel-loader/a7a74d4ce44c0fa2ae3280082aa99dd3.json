{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/Cook/cook-frontend/src/components/Pool/Zap.tsx\";\nimport React, { useState } from 'react';\nimport { Modal } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { BalanceBlock, PriceSection } from '../common/index';\nimport { approve, zap } from '../../utils/web3';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { COOK, WETH } from \"../../constants/tokens\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport ActionButton from \"../common/ActionButton\";\nimport { Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\nfunction Zap({\n  user,\n  pools,\n  cookAvailable,\n  wethBalance,\n  wethAllowance,\n  pairBalanceWETH,\n  pairBalanceCOOK,\n  selected\n}) {\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [wethAmount, setWethAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false);\n  const [balanceType, setBalanceType] = useState(0);\n\n  const close = () => {\n    setOpened(false);\n    setZapAmount(new BigNumber(0));\n    setWethAmount(new BigNumber(0));\n  };\n\n  const WETHToCOOKRatio = pairBalanceWETH.isZero() ? new BigNumber(1) : pairBalanceWETH.div(pairBalanceCOOK);\n\n  const onChangeAmountCOOK = amountCOOK => {\n    if (!amountCOOK) {\n      setWethAmount(new BigNumber(0));\n      return;\n    }\n\n    const amountCOOKBN = new BigNumber(amountCOOK);\n    setZapAmount(amountCOOKBN);\n    const amountCOOKBU = toBaseUnitBN(amountCOOKBN, COOK.decimals);\n    const newAmountWETH = toTokenUnitsBN(amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR), COOK.decimals);\n    setWethAmount(newAmountWETH);\n  };\n\n  const renderPoolZap = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ActionButton, {\n      label: \"Zap\",\n      size: 14,\n      width: \"120px\",\n      onClick: () => {\n        setOpened(true);\n      },\n      disabled: !user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      visible: opened,\n      onClose: () => close(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: 40,\n        fontWeight: 700\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Zap\"), /*#__PURE__*/React.createElement(ListTable, {\n      pools: pools,\n      selectedPool: selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BalanceBlock, {\n      asset: \"Available COOK\",\n      balance: cookAvailable,\n      suffix: \"COOK\",\n      type: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 28\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BalanceBlock, {\n      asset: \"WETH Balance\",\n      balance: wethBalance,\n      type: \"row\",\n      suffix: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: 14\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }\n      }, \" WETH\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BigNumberInput, {\n      adornment: \"COOK\",\n      value: zapAmount,\n      max: () => {\n        onChangeAmountCOOK(cookAvailable);\n      },\n      setter: onChangeAmountCOOK,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(PriceSection, {\n      label: \"Requires \",\n      amt: wethAmount,\n      symbol: \" WETH\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ActionButton, {\n      label: \"Cancel\",\n      onClick: () => {\n        setOpened(false);\n      },\n      disabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    })), wethAllowance.comparedTo(wethAmount) > 0 ? /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ActionButton, {\n      label: \"Zap\",\n      onClick: () => {\n        if (selected) {\n          zap(selected, toBaseUnitBN(zapAmount, COOK.decimals), hash => {\n            setWethAmount(new BigNumber(0));\n            setZapAmount(new BigNumber(0));\n            close();\n          });\n        }\n      },\n      disabled: selected === '' || user === '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ActionButton, {\n      label: \"Approve\",\n      onClick: () => {\n        if (selected) {\n          approve(WETH.addr, selected);\n        }\n      },\n      disabled: selected === '' || user === '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }))))));\n  };\n\n  return renderPoolZap();\n}\n\nexport default Zap;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/Pool/Zap.tsx"],"names":["React","useState","Modal","BigNumber","BalanceBlock","PriceSection","approve","zap","toBaseUnitBN","toTokenUnitsBN","COOK","WETH","BigNumberInput","ActionButton","Row","Col","ListTable","Zap","user","pools","cookAvailable","wethBalance","wethAllowance","pairBalanceWETH","pairBalanceCOOK","selected","zapAmount","setZapAmount","wethAmount","setWethAmount","opened","setOpened","balanceType","setBalanceType","close","WETHToCOOKRatio","isZero","div","onChangeAmountCOOK","amountCOOK","amountCOOKBN","amountCOOKBU","decimals","newAmountWETH","multipliedBy","integerValue","ROUND_FLOOR","renderPoolZap","textAlign","fontSize","fontWeight","comparedTo","hash","addr"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Modal, DropDown\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock, PriceSection\n} from '../common/index';\nimport { approve, zap } from '../../utils/web3';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { COOK, WETH } from \"../../constants/tokens\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport colors from '../../constants/colors';\nimport ActionButton from \"../common/ActionButton\";\nimport HelpText from \"../common/HelpText\";\nimport { Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\ntype ZapProps = {\n  user: string,\n  pools: Array<{ name: string, address: string, rewardPerBlock: BigNumber, lockedUpPeriod: BigNumber }>,\n  cookAvailable: BigNumber,\n  wethBalance: BigNumber,\n  wethAllowance: BigNumber,\n  pairBalanceWETH: BigNumber,\n  pairBalanceCOOK: BigNumber,\n  selected: string,\n};\n\nfunction Zap({\n  user, pools, cookAvailable, wethBalance, wethAllowance, pairBalanceWETH, pairBalanceCOOK, selected,\n}: ZapProps) {\n\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [wethAmount, setWethAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false)\n  const [balanceType, setBalanceType] = useState(0)\n\n  const close = () => {\n    setOpened(false);\n    setZapAmount(new BigNumber(0));\n    setWethAmount(new BigNumber(0));\n  }\n\n  const WETHToCOOKRatio = pairBalanceWETH.isZero() ? new BigNumber(1) : pairBalanceWETH.div(pairBalanceCOOK);\n\n  const onChangeAmountCOOK = (amountCOOK) => {\n    if (!amountCOOK) {\n      setWethAmount(new BigNumber(0));\n      return;\n    }\n\n    const amountCOOKBN = new BigNumber(amountCOOK)\n    setZapAmount(amountCOOKBN);\n\n    const amountCOOKBU = toBaseUnitBN(amountCOOKBN, COOK.decimals);\n    const newAmountWETH = toTokenUnitsBN(\n      amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR),\n      COOK.decimals);\n    setWethAmount(newAmountWETH);\n  };\n  const renderPoolZap = () => {\n    return (\n      <div>\n        <ActionButton label={\"Zap\"}\n          size={14}\n          width={\"120px\"}\n          onClick={() => {\n            setOpened(true)\n          }} disabled={!user} />\n        <Modal visible={opened} onClose={() => close()}>\n          <div>\n            <h1 style={{ textAlign: \"center\", fontSize: 40, fontWeight: 700 }}>Zap</h1>\n            <ListTable pools={pools} selectedPool={selected} />\n\n            <Row>\n              <Col xs={12}><BalanceBlock asset=\"Available COOK\" balance={cookAvailable} suffix={\"COOK\"} type={\"row\"} /></Col>\n              <Col xs={12}>\n                <BalanceBlock asset=\"WETH Balance\" balance={wethBalance} type={\"row\"} suffix={\n                  <span style={{ fontSize: 14 }}> WETH</span>\n                } />\n              </Col>\n              <Col xs={12}>\n                <BigNumberInput\n                  adornment=\"COOK\"\n                  value={zapAmount}\n                  max={() => {\n                    onChangeAmountCOOK(cookAvailable);\n                  }}\n                  setter={onChangeAmountCOOK}\n                />\n                <PriceSection label=\"Requires \" amt={wethAmount} symbol=\" WETH\" />\n\n              </Col>\n              <Col sm={6}>\n                <ActionButton\n                  label=\"Cancel\"\n                  onClick={() => {\n                    setOpened(false)\n                  }}\n                  disabled={false}\n                />\n              </Col>\n              {wethAllowance.comparedTo(wethAmount) > 0 ?\n                <Col xs={6} >\n                  <ActionButton\n                    label={\"Zap\"}\n                    onClick={() => {\n                      if (selected) {\n                        zap(\n                          selected,\n                          toBaseUnitBN(zapAmount, COOK.decimals),\n                          (hash) => {\n                            setWethAmount(new BigNumber(0));\n                            setZapAmount(new BigNumber(0));\n                            close()\n                          }\n                        );\n                      }\n                    }}\n                    disabled={selected === '' || user === ''}\n                  />\n                </Col>\n                :\n                <Col xs={6} >\n                  <ActionButton\n                    label=\"Approve\"\n                    onClick={() => {\n                      if (selected) {\n                        approve(WETH.addr, selected);\n                      }\n                    }}\n                    disabled={selected === '' || user === ''}\n                  />\n                </Col>\n              }\n            </Row>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n\n  return (\n    renderPoolZap()\n  );\n}\n\nexport default Zap;\n"]},"metadata":{},"sourceType":"module"}