{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/Cook/cook-frontend/src/components/common/BigNumberInput.tsx\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport { TextInput, Text } from '@aragon/ui';\nimport colors from '../../constants/colors';\nimport { Container, Row, Col } from 'react-grid-system';\nimport MaxButton from './MaxButton';\n\nfunction BigNumberInput({\n  value,\n  setter,\n  adornment,\n  disabled = false,\n  max\n}) {\n  return /*#__PURE__*/React.createElement(Container, {\n    style: {\n      marginBottom: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"center\",\n    style: {\n      height: '75px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 11,\n    style: {\n      paddingLeft: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    type: \"number\",\n    style: {\n      background: `${colors.linearOpacity}`,\n      height: 56,\n      fontSize: 24,\n      fontWeight: 'bold'\n    },\n    adornmentPosition: \"end\",\n    adornmentSettings: {\n      padding: 5,\n      width: 70\n    },\n    adornment: max && /*#__PURE__*/React.createElement(MaxButton, {\n      onClick: max,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 31\n      }\n    }),\n    wide: true,\n    value: value.isNegative() ? '' : value,\n    onChange: event => {\n      if (event.target.value) {\n        setter(new BigNumber(event.target.value));\n      } else {\n        setter(new BigNumber(-1));\n      }\n    },\n    onBlur: () => {\n      if (value.isNegative()) {\n        setter(new BigNumber(0));\n      }\n    },\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 1,\n    style: {\n      fontSize: 20,\n      color: \"white\",\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 74\n    }\n  }, adornment))));\n}\n\nexport default BigNumberInput;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/common/BigNumberInput.tsx"],"names":["React","BigNumber","TextInput","Text","colors","Container","Row","Col","MaxButton","BigNumberInput","value","setter","adornment","disabled","max","marginBottom","height","paddingLeft","background","linearOpacity","fontSize","fontWeight","padding","width","isNegative","event","target","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SACEC,SADF,EACaC,IADb,QAEO,YAFP;AAGA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,mBAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AASA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,SAAjB;AAA4BC,EAAAA,QAAQ,GAAG,KAAvC;AAA8CC,EAAAA;AAA9C,CAAxB,EAAkG;AAChG,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,QAAX;AAAoB,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAG,GAAEd,MAAM,CAACe,aAAc,EAAtC;AAAyCH,MAAAA,MAAM,EAAE,EAAjD;AAAqDI,MAAAA,QAAQ,EAAE,EAA/D;AAAmEC,MAAAA,UAAU,EAAE;AAA/E,KAFT;AAGE,IAAA,iBAAiB,EAAC,KAHpB;AAIE,IAAA,iBAAiB,EAAE;AAAEC,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAJrB;AAKE,IAAA,SAAS,EAAET,GAAG,iBAAI,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAEA,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALpB;AAME,IAAA,IAAI,MANN;AAOE,IAAA,KAAK,EAAEJ,KAAK,CAACc,UAAN,KAAqB,EAArB,GAA0Bd,KAPnC;AAQE,IAAA,QAAQ,EAAGe,KAAD,IAAW;AACnB,UAAIA,KAAK,CAACC,MAAN,CAAahB,KAAjB,EAAwB;AACtBC,QAAAA,MAAM,CAAC,IAAIV,SAAJ,CAAcwB,KAAK,CAACC,MAAN,CAAahB,KAA3B,CAAD,CAAN;AACD,OAFD,MAEO;AACLC,QAAAA,MAAM,CAAC,IAAIV,SAAJ,CAAc,CAAC,CAAf,CAAD,CAAN;AACD;AACF,KAdH;AAeE,IAAA,MAAM,EAAE,MAAM;AACZ,UAAIS,KAAK,CAACc,UAAN,EAAJ,EAAwB;AACtBb,QAAAA,MAAM,CAAC,IAAIV,SAAJ,CAAc,CAAd,CAAD,CAAN;AACD;AACF,KAnBH;AAoBE,IAAA,QAAQ,EAAEY,QApBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAwBE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,KAAK,EAAE;AAAEO,MAAAA,QAAQ,EAAE,EAAZ;AAAgBO,MAAAA,KAAK,EAAE,OAAvB;AAAgCL,MAAAA,OAAO,EAAE;AAAzC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQV,SAAR,CAAjE,CAxBF,CADF,CADF;AA8BD;;AAED,eAAeH,cAAf","sourcesContent":["import React from 'react';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  TextInput, Text\n} from '@aragon/ui';\nimport colors from '../../constants/colors';\nimport { Container, Row, Col } from 'react-grid-system';\nimport MaxButton from './MaxButton';\ntype BigNumberInputProps = {\n  value: BigNumber,\n  setter: (value: BigNumber) => void\n  adornment?: any,\n  disabled?: boolean\n  max?: Function\n}\n\nfunction BigNumberInput({ value, setter, adornment, disabled = false, max }: BigNumberInputProps) {\n  return (\n    <Container style={{ marginBottom: 15 }}>\n      <Row align=\"center\" style={{height: '75px' }}>\n        <Col xs={11} style={{ paddingLeft: 0 }}>\n          <TextInput\n            type=\"number\"\n            style={{ background: `${colors.linearOpacity}`, height: 56, fontSize: 24, fontWeight: 'bold'}}\n            adornmentPosition=\"end\"\n            adornmentSettings={{ padding: 5, width: 70 }}\n            adornment={max && <MaxButton onClick={max} />}\n            wide\n            value={value.isNegative() ? '' : value}\n            onChange={(event) => {\n              if (event.target.value) {\n                setter(new BigNumber(event.target.value));\n              } else {\n                setter(new BigNumber(-1));\n              }\n            }}\n            onBlur={() => {\n              if (value.isNegative()) {\n                setter(new BigNumber(0))\n              }\n            }}\n            disabled={disabled}\n          /></Col>\n        <Col xs={1} style={{ fontSize: 20, color: \"white\", padding: 0 }}><Text >{adornment}</Text></Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default BigNumberInput;\n"]},"metadata":{},"sourceType":"module"}