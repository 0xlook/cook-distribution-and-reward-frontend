{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/cook-frontend/src/components/NavBar/ConnectButton.tsx\";\nimport React, { useState } from 'react';\nimport { Button, IdentityBadge, IconConnect, IconPower, LinkBase } from '@aragon/ui';\nimport { connect } from '../../utils/web3';\n\nfunction ConnectButton({\n  user,\n  setUser\n}) {\n  const [isConnected, setIsConnected] = useState(false);\n\n  const connectWeb3 = async () => {\n    const address = await connect();\n    if (address === false) return;\n    setIsConnected(true);\n    setUser(address);\n  };\n\n  const disconnectWeb3 = async () => {\n    setIsConnected(false);\n    setUser('');\n  };\n\n  return isConnected ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: 5,\n      paddingRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LinkBase, {\n    onClick: disconnectWeb3,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, ' ', /*#__PURE__*/React.createElement(IconPower, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), ' ')), /*#__PURE__*/React.createElement(IdentityBadge, {\n    entity: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Button, {\n    icon: /*#__PURE__*/React.createElement(IconConnect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    }),\n    label: \"Connect\",\n    onClick: connectWeb3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default ConnectButton;","map":{"version":3,"sources":["/Users/huanwen/Work/cook-frontend/src/components/NavBar/ConnectButton.tsx"],"names":["React","useState","Button","IdentityBadge","IconConnect","IconPower","LinkBase","connect","ConnectButton","user","setUser","isConnected","setIsConnected","connectWeb3","address","disconnectWeb3","paddingTop","paddingRight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SACEC,MADF,EACUC,aADV,EACyBC,WADzB,EAC2CC,SAD3C,EACsDC,QADtD,QAEO,YAFP;AAIA,SAASC,OAAT,QAAwB,kBAAxB;;AAOA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,EAA8D;AAC5D,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMY,WAAW,GAAG,YAAY;AAC9B,UAAMC,OAAO,GAAG,MAAMP,OAAO,EAA7B;AACA,QAAIO,OAAO,KAAK,KAAhB,EAAuB;AACvBF,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,IAAAA,OAAO,CAACI,OAAD,CAAP;AACD,GALD;;AAOA,QAAMC,cAAc,GAAG,YAAY;AACjCH,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAF,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAHD;;AAKA,SAAOC,WAAW,gBAChB,uDACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,UAAU,EAAE,CAAd;AAAiBC,MAAAA,YAAY,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEF,cAAnB;AAAmC,IAAA,IAAI,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGG,GAHH,CADF,CADF,eAQI,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEN,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADgB,gBAahB,oBAAC,MAAD;AAAQ,IAAA,IAAI,eAAE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AAA+B,IAAA,KAAK,EAAC,SAArC;AAA+C,IAAA,OAAO,EAAEI,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF;AAeD;;AAGD,eAAeL,aAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport {\n  Button, IdentityBadge, IconConnect, Box, IconPower, LinkBase,\n} from '@aragon/ui';\n\nimport { connect } from '../../utils/web3';\n\ntype connectButtonProps = {\n  user: string,\n  setUser: Function\n}\n\nfunction ConnectButton({ user, setUser }: connectButtonProps) {\n  const [isConnected, setIsConnected] = useState(false);\n\n  const connectWeb3 = async () => {\n    const address = await connect();\n    if (address === false) return;\n    setIsConnected(true);\n    setUser(address);\n  };\n\n  const disconnectWeb3 = async () => {\n    setIsConnected(false);\n    setUser('');\n  };\n\n  return isConnected ? (\n    <>\n      <div style={{ paddingTop: 5, paddingRight: 5 }}>\n        <LinkBase onClick={disconnectWeb3} size=\"small\">\n          {' '}\n          <IconPower />\n          {' '}\n        </LinkBase>\n      </div>\n        <IdentityBadge entity={user}  />\n\n    </>\n  ) : (\n    <Button icon={<IconConnect />} label=\"Connect\" onClick={connectWeb3} />\n  );\n}\n\n\nexport default ConnectButton;\n"]},"metadata":{},"sourceType":"module"}