{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/cook-frontend/src/components/Pool/Claim.tsx\";\nimport React, { useState } from 'react';\nimport { Box } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { BalanceBlock, MaxButton } from '../common/index';\nimport { claim } from '../../utils/web3';\nimport { isPos, toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { COOK } from \"../../constants/tokens\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport ActionButton from \"../common/ActionButton\";\nimport colors from '../../constants/colors';\nimport { Container, Row, Col } from 'react-grid-system';\n\nfunction Claim({\n  user,\n  poolAddress,\n  claimable,\n  wethBalance,\n  wethAllowance,\n  pairBalanceWETH,\n  pairBalanceCOOK\n}) {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0));\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [wethAmount, setWethAmount] = useState(new BigNumber(0));\n  const WETHToCOOKRatio = pairBalanceWETH.isZero() ? new BigNumber(1) : pairBalanceWETH.div(pairBalanceCOOK);\n\n  const onChangeAmountCOOK = amountCOOK => {\n    if (!amountCOOK) {\n      setZapAmount(new BigNumber(0));\n      setWethAmount(new BigNumber(0));\n      return;\n    }\n\n    const amountCOOKBN = new BigNumber(amountCOOK);\n    setZapAmount(amountCOOKBN);\n    const amountCOOKBU = toBaseUnitBN(amountCOOKBN, COOK.decimals);\n    const newAmountWETH = toTokenUnitsBN(amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR), COOK.decimals);\n    setWethAmount(newAmountWETH);\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    heading: \"Claim\",\n    style: {\n      marginTop: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BalanceBlock, {\n    asset: \"Claimable\",\n    balance: claimable,\n    suffix: \"COOK\",\n    type: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BigNumberInput, {\n    adornment: \"COOK\",\n    value: claimAmount,\n    setter: setClaimAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MaxButton, {\n    onClick: () => {\n      setClaimAmount(claimable);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    lg: 4,\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    label: \"CLAIM\",\n    color: colors.secondaryButton,\n    onClick: () => {\n      claim(poolAddress, toBaseUnitBN(claimAmount, COOK.decimals), hash => setClaimAmount(new BigNumber(0)));\n    },\n    disabled: poolAddress === '' || user === '' || !isPos(claimAmount) || claimAmount.isGreaterThan(claimable),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  })))));\n}\n\nexport default Claim;","map":{"version":3,"sources":["/Users/huanwen/Work/cook-frontend/src/components/Pool/Claim.tsx"],"names":["React","useState","Box","BigNumber","BalanceBlock","MaxButton","claim","isPos","toBaseUnitBN","toTokenUnitsBN","COOK","BigNumberInput","ActionButton","colors","Container","Row","Col","Claim","user","poolAddress","claimable","wethBalance","wethAllowance","pairBalanceWETH","pairBalanceCOOK","claimAmount","setClaimAmount","zapAmount","setZapAmount","wethAmount","setWethAmount","WETHToCOOKRatio","isZero","div","onChangeAmountCOOK","amountCOOK","amountCOOKBN","amountCOOKBU","decimals","newAmountWETH","multipliedBy","integerValue","ROUND_FLOOR","marginTop","textAlign","secondaryButton","hash","isGreaterThan"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,GADF,QAEO,YAFP;AAGA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SACEC,YADF,EACgBC,SADhB,QAEO,iBAFP;AAGA,SAAQC,KAAR,QAAkC,kBAAlC;AACA,SAAQC,KAAR,EAAeC,YAAf,EAA6BC,cAA7B,QAAkD,oBAAlD;AACA,SAAQC,IAAR,QAAyB,wBAAzB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,mBAApC;;AAYA,SAASC,KAAT,CAAe;AACbC,EAAAA,IADa;AACRC,EAAAA,WADQ;AACKC,EAAAA,SADL;AACgBC,EAAAA,WADhB;AAC6BC,EAAAA,aAD7B;AAC4CC,EAAAA,eAD5C;AAC6DC,EAAAA;AAD7D,CAAf,EAEe;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,IAAIE,SAAJ,CAAc,CAAd,CAAD,CAA9C;AACA,QAAM,CAACwB,SAAD,EAAYC,YAAZ,IAA4B3B,QAAQ,CAAC,IAAIE,SAAJ,CAAc,CAAd,CAAD,CAA1C;AACA,QAAM,CAAC0B,UAAD,EAAaC,aAAb,IAA8B7B,QAAQ,CAAC,IAAIE,SAAJ,CAAc,CAAd,CAAD,CAA5C;AAEA,QAAM4B,eAAe,GAAGR,eAAe,CAACS,MAAhB,KAA2B,IAAI7B,SAAJ,CAAc,CAAd,CAA3B,GAA8CoB,eAAe,CAACU,GAAhB,CAAoBT,eAApB,CAAtE;;AAEA,QAAMU,kBAAkB,GAAIC,UAAD,IAAgB;AACzC,QAAI,CAACA,UAAL,EAAiB;AACfP,MAAAA,YAAY,CAAC,IAAIzB,SAAJ,CAAc,CAAd,CAAD,CAAZ;AACA2B,MAAAA,aAAa,CAAC,IAAI3B,SAAJ,CAAc,CAAd,CAAD,CAAb;AACA;AACD;;AAED,UAAMiC,YAAY,GAAG,IAAIjC,SAAJ,CAAcgC,UAAd,CAArB;AACAP,IAAAA,YAAY,CAACQ,YAAD,CAAZ;AAEA,UAAMC,YAAY,GAAG7B,YAAY,CAAC4B,YAAD,EAAe1B,IAAI,CAAC4B,QAApB,CAAjC;AACA,UAAMC,aAAa,GAAG9B,cAAc,CAClC4B,YAAY,CAACG,YAAb,CAA0BT,eAA1B,EAA2CU,YAA3C,CAAwDtC,SAAS,CAACuC,WAAlE,CADkC,EAElChC,IAAI,CAAC4B,QAF6B,CAApC;AAGAR,IAAAA,aAAa,CAACS,aAAD,CAAb;AACD,GAfD;;AAiBA,sBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,OAAb;AAAqB,IAAA,KAAK,EAAE;AAACI,MAAAA,SAAS,EAAC;AAAX,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,WAApB;AAAgC,IAAA,OAAO,EAAEvB,SAAzC;AAAoD,IAAA,MAAM,EAAE,MAA5D;AAAoE,IAAA,IAAI,EAAE,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,eAKE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,uDACE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,KAAK,EAAEK,WAFT;AAGE,IAAA,MAAM,EAAEC,cAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,SAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbA,MAAAA,cAAc,CAACN,SAAD,CAAd;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADJ,CALF,eAmBI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAoB,IAAA,KAAK,EAAE;AAACwB,MAAAA,SAAS,EAAC;AAAX,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,oBAAC,YAAD;AACE,IAAA,KAAK,EAAE,OADT;AAEE,IAAA,KAAK,EAAE/B,MAAM,CAACgC,eAFhB;AAGE,IAAA,OAAO,EAAE,MAAM;AACbvC,MAAAA,KAAK,CACHa,WADG,EAEHX,YAAY,CAACiB,WAAD,EAAcf,IAAI,CAAC4B,QAAnB,CAFT,EAGFQ,IAAD,IAAUpB,cAAc,CAAC,IAAIvB,SAAJ,CAAc,CAAd,CAAD,CAHrB,CAAL;AAKD,KATH;AAUE,IAAA,QAAQ,EAAEgB,WAAW,KAAK,EAAhB,IAAsBD,IAAI,KAAK,EAA/B,IAAqC,CAACX,KAAK,CAACkB,WAAD,CAA3C,IAA4DA,WAAW,CAACsB,aAAZ,CAA0B3B,SAA1B,CAVxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,CAnBJ,CADF,CADF,CADF;AAyCD;;AAED,eAAeH,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock, MaxButton, PriceSection\n} from '../common/index';\nimport {claim, zap, approve} from '../../utils/web3';\nimport {isPos, toBaseUnitBN, toTokenUnitsBN} from '../../utils/number';\nimport {COOK, WETH} from \"../../constants/tokens\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport ActionButton from \"../common/ActionButton\";\nimport colors from '../../constants/colors';\nimport { Container, Row, Col } from 'react-grid-system';\n\ntype ClaimProps = {\n  user: string,\n  poolAddress: string,\n  claimable: BigNumber,\n  wethBalance: BigNumber,\n  wethAllowance: BigNumber,\n  pairBalanceWETH: BigNumber,\n  pairBalanceCOOK: BigNumber\n};\n\nfunction Claim({\n  user,poolAddress, claimable, wethBalance, wethAllowance, pairBalanceWETH, pairBalanceCOOK\n}: ClaimProps) {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0));\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [wethAmount, setWethAmount] = useState(new BigNumber(0));\n\n  const WETHToCOOKRatio = pairBalanceWETH.isZero() ? new BigNumber(1) : pairBalanceWETH.div(pairBalanceCOOK);\n\n  const onChangeAmountCOOK = (amountCOOK) => {\n    if (!amountCOOK) {\n      setZapAmount(new BigNumber(0));\n      setWethAmount(new BigNumber(0));\n      return;\n    }\n\n    const amountCOOKBN = new BigNumber(amountCOOK)\n    setZapAmount(amountCOOKBN);\n\n    const amountCOOKBU = toBaseUnitBN(amountCOOKBN, COOK.decimals);\n    const newAmountWETH = toTokenUnitsBN(\n      amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR),\n      COOK.decimals);\n    setWethAmount(newAmountWETH);\n  };\n\n  return (\n    <Box heading=\"Claim\" style={{marginTop:0}}>\n      <Container>\n        <Row >\n          <Col sm={12} lg={4}>\n          <BalanceBlock asset=\"Claimable\" balance={claimable} suffix={\"COOK\"} type={\"row\"}/>\n          </Col>\n        {/* Claim COOK rewards within Pool */}\n          <Col sm={12} lg={4}>\n              <>\n                <BigNumberInput\n                  adornment=\"COOK\"\n                  value={claimAmount}\n                  setter={setClaimAmount}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setClaimAmount(claimable);\n                  }}\n                />\n              </>\n            </Col>\n            <Col sm={12} lg={4} style={{textAlign:\"center\"}}>\n                  <ActionButton\n                    label={\"CLAIM\"}\n                    color={colors.secondaryButton}\n                    onClick={() => {\n                      claim(\n                        poolAddress,\n                        toBaseUnitBN(claimAmount, COOK.decimals),\n                        (hash) => setClaimAmount(new BigNumber(0))\n                      );\n                    }}\n                    disabled={poolAddress === '' || user === '' || !isPos(claimAmount) || claimAmount.isGreaterThan(claimable)}\n                  />\n              </Col>\n        </Row>\n        </Container>\n    </Box>\n\n  );\n}\n\nexport default Claim;\n"]},"metadata":{},"sourceType":"module"}