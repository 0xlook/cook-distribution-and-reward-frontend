{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/Cook/cook-frontend/src/components/Pool/Zap.tsx\";\nimport React, { useState } from 'react';\nimport { Modal, DropDown } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { BalanceBlock, PriceSection } from '../common/index';\nimport { approve, zap } from '../../utils/web3';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { COOK, WETH } from \"../../constants/tokens\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport colors from '../../constants/colors';\nimport ActionButton from \"../common/ActionButton\";\nimport HelpText from \"../common/HelpText\";\nimport { Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\nfunction Zap({\n  user,\n  pools,\n  cookAvailable,\n  wethBalance,\n  wethAllowance,\n  pairBalanceWETH,\n  pairBalanceCOOK,\n  selected,\n  type\n}) {\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [wethAmount, setWethAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false);\n  const [selectedPool, setSelectedPool] = useState(selected || '');\n  const [balanceType, setBalanceType] = useState(0);\n\n  const close = () => {\n    setOpened(false);\n    setZapAmount(new BigNumber(0));\n    setWethAmount(new BigNumber(0));\n  };\n\n  const WETHToCOOKRatio = pairBalanceWETH.isZero() ? new BigNumber(1) : pairBalanceWETH.div(pairBalanceCOOK);\n\n  const onChangeAmountCOOK = amountCOOK => {\n    if (!amountCOOK) {\n      setWethAmount(new BigNumber(0));\n      return;\n    }\n\n    const amountCOOKBN = new BigNumber(amountCOOK);\n    setZapAmount(amountCOOKBN);\n    const amountCOOKBU = toBaseUnitBN(amountCOOKBN, COOK.decimals);\n    const newAmountWETH = toTokenUnitsBN(amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR), COOK.decimals);\n    setWethAmount(newAmountWETH);\n  };\n\n  const renderPoolZap = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ActionButton, {\n      label: \"Zap\",\n      color: colors.button,\n      onClick: () => {\n        setOpened(true);\n      },\n      disabled: !user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      visible: opened,\n      onClose: () => close(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flexBasis: '100%',\n        paddingTop: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ListTable, {\n      pools: pools,\n      selectedPool: selectedPool,\n      setSelectedPool: setSelectedPool,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        padding: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BalanceBlock, {\n      asset: \"Available COOK\",\n      balance: cookAvailable,\n      suffix: \"COOK\",\n      type: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BalanceBlock, {\n      asset: \"WETH Balance\",\n      balance: wethBalance,\n      type: \"row\",\n      suffix: /*#__PURE__*/React.createElement(DropDown, {\n        items: ['WETH'],\n        selected: balanceType,\n        onChange: setBalanceType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 89\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BigNumberInput, {\n      adornment: \"COOK\",\n      value: zapAmount,\n      max: () => {\n        onChangeAmountCOOK(cookAvailable);\n      },\n      setter: onChangeAmountCOOK,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(PriceSection, {\n      label: \"Requires \",\n      amt: wethAmount,\n      symbol: \" WETH\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    })), wethAllowance.comparedTo(wethAmount) > 0 ? /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ActionButton, {\n      label: \"Zap\",\n      color: colors.button,\n      onClick: () => {\n        if (selectedPool) {\n          zap(selectedPool, toBaseUnitBN(zapAmount, COOK.decimals), hash => {\n            setWethAmount(new BigNumber(0));\n            setZapAmount(new BigNumber(0));\n            close();\n          });\n        }\n      },\n      disabled: selectedPool === '' || user === '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ActionButton, {\n      color: colors.button,\n      label: \"Approve\",\n      onClick: () => {\n        if (selectedPool) {\n          approve(WETH.addr, selectedPool);\n        }\n      },\n      disabled: selectedPool === '' || user === '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    })))), /*#__PURE__*/React.createElement(HelpText, {\n      label: \"zap descript\",\n      amt: '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    })));\n  };\n\n  return renderPoolZap();\n}\n\nexport default Zap;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/Pool/Zap.tsx"],"names":["React","useState","Modal","DropDown","BigNumber","BalanceBlock","PriceSection","approve","zap","toBaseUnitBN","toTokenUnitsBN","COOK","WETH","BigNumberInput","colors","ActionButton","HelpText","Row","Col","ListTable","Zap","user","pools","cookAvailable","wethBalance","wethAllowance","pairBalanceWETH","pairBalanceCOOK","selected","type","zapAmount","setZapAmount","wethAmount","setWethAmount","opened","setOpened","selectedPool","setSelectedPool","balanceType","setBalanceType","close","WETHToCOOKRatio","isZero","div","onChangeAmountCOOK","amountCOOK","amountCOOKBN","amountCOOKBU","decimals","newAmountWETH","multipliedBy","integerValue","ROUND_FLOOR","renderPoolZap","button","flexBasis","paddingTop","padding","comparedTo","textAlign","hash","addr"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Modal, DropDown\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock, PriceSection\n} from '../common/index';\nimport {approve, zap} from '../../utils/web3';\nimport {toBaseUnitBN, toTokenUnitsBN} from '../../utils/number';\nimport {COOK, WETH} from \"../../constants/tokens\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport colors from '../../constants/colors';\nimport ActionButton from \"../common/ActionButton\";\nimport HelpText from \"../common/HelpText\";\nimport { Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\ntype ZapProps = {\n  user: string,\n  pools: Array<{name:string,address:string,rewardPerBlock:BigNumber,lockedUpPeriod:BigNumber}>,\n  cookAvailable: BigNumber,\n  wethBalance: BigNumber,\n  wethAllowance: BigNumber,\n  pairBalanceWETH: BigNumber,\n  pairBalanceCOOK: BigNumber,\n  selected?:string,\n  type:string,\n};\n\nfunction Zap({\n  user, pools, cookAvailable, wethBalance, wethAllowance, pairBalanceWETH, pairBalanceCOOK, selected, type\n}: ZapProps) {\n\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [wethAmount, setWethAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false)\n  const [selectedPool, setSelectedPool] = useState(selected||'')\n  const [balanceType, setBalanceType] = useState(0)\n\n  const close = () => {\n    setOpened(false);\n    setZapAmount(new BigNumber(0));\n    setWethAmount(new BigNumber(0));\n  }\n\n  const WETHToCOOKRatio = pairBalanceWETH.isZero() ? new BigNumber(1) : pairBalanceWETH.div(pairBalanceCOOK);\n\n  const onChangeAmountCOOK = (amountCOOK) => {\n    if (!amountCOOK) {\n      setWethAmount(new BigNumber(0));\n      return;\n    }\n\n    const amountCOOKBN = new BigNumber(amountCOOK)\n    setZapAmount(amountCOOKBN);\n\n    const amountCOOKBU = toBaseUnitBN(amountCOOKBN, COOK.decimals);\n    const newAmountWETH = toTokenUnitsBN(\n      amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR),\n      COOK.decimals);\n    setWethAmount(newAmountWETH);\n  };\n  const renderPoolZap = () => {\n    return(\n      <div>\n      <ActionButton label={\"Zap\"} color={colors.button} onClick={()=>{\n        setOpened(true)\n      }} disabled={!user}/>\n      <Modal visible={opened} onClose={()=>close()}>\n      <div style={{flexBasis: '100%', paddingTop: '5%'}}>\n          <ListTable pools={pools} selectedPool={selectedPool} setSelectedPool={setSelectedPool}/>\n          <Row style={{padding:10}}>\n          <Col><BalanceBlock asset=\"Available COOK\" balance={cookAvailable} suffix={\"COOK\"} type={\"row\"}/></Col>\n          <Col>\n          <BalanceBlock asset=\"WETH Balance\" balance={wethBalance} type={\"row\"} suffix={<DropDown\n                items={['WETH']}\n                selected={balanceType}\n                onChange={setBalanceType}\n              />}/>\n          </Col>\n          </Row>\n        <Row>\n          <Col xs={12}>\n              <BigNumberInput\n                adornment=\"COOK\"\n                value={zapAmount}\n                max={() => {\n                  onChangeAmountCOOK(cookAvailable);\n                }}\n                setter={onChangeAmountCOOK}\n              />\n              <PriceSection label=\"Requires \" amt={wethAmount} symbol=\" WETH\"/>\n\n          </Col>\n          {wethAllowance.comparedTo(wethAmount) > 0 ?\n            <Col xs={12} style={{textAlign:\"center\"}}>\n              <ActionButton\n                label={\"Zap\"} color={colors.button}\n                onClick={() => {\n                  if(selectedPool){\n                    zap(\n                        selectedPool,\n                        toBaseUnitBN(zapAmount, COOK.decimals),\n                        (hash) => {\n                          setWethAmount(new BigNumber(0));\n                          setZapAmount(new BigNumber(0));\n                          close()\n                        }\n                      );\n                  }\n                }}\n                disabled={selectedPool === '' || user === ''}\n              />\n            </Col>\n          :\n          <Col xs={12} style={{textAlign:\"center\"}}>\n            <ActionButton\n              color={colors.button}\n              label=\"Approve\"\n              onClick={() => {\n                if(selectedPool){\n                  approve(WETH.addr, selectedPool);\n                }\n              }}\n              disabled={selectedPool === '' || user === ''}\n            />\n          </Col>\n          }\n        </Row>\n      </div>\n      <HelpText label={\"zap descript\"} amt={''}/>\n      </Modal>\n      </div>\n    )\n  }\n\n  return (\n    renderPoolZap()\n  );\n}\n\nexport default Zap;\n"]},"metadata":{},"sourceType":"module"}