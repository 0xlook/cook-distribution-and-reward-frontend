{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/Cook/cook-frontend/src/components/Pool/Harvest.tsx\";\nimport React, { useState } from 'react';\nimport { Modal } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { BalanceBlock } from '../common/index';\nimport { harvest } from '../../utils/web3';\nimport { isPos, toBaseUnitBN } from '../../utils/number';\nimport { COOK } from \"../../constants/tokens\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport ActionButton from \"../common/ActionButton\";\nimport colors from '../../constants/colors';\nimport { Container, Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\nfunction Harvest({\n  user,\n  poolAddress,\n  userTotalRewarded,\n  userTotalInVesting,\n  pools\n}) {\n  const [harvestAmount, setHarvestAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    label: \"HARVEST\",\n    color: colors.secondaryButton,\n    onClick: () => {\n      setOpened(true);\n    },\n    disabled: poolAddress === '' || user === '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    visible: opened,\n    onClose: () => setOpened(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    style: {\n      flexBasis: '100%',\n      paddingTop: '5%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListTable, {\n    pools: pools,\n    selectedPool: poolAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BalanceBlock, {\n    asset: \"To Be Vested\",\n    balance: userTotalRewarded,\n    suffix: \"COOK\",\n    type: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BalanceBlock, {\n    asset: \"In Vesting\",\n    balance: userTotalInVesting,\n    suffix: \"COOK\",\n    type: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BigNumberInput, {\n    adornment: \"COOK\",\n    value: harvestAmount,\n    setter: setHarvestAmount,\n    max: () => {\n      setHarvestAmount(userTotalRewarded);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    lg: 12,\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    label: \"HARVEST\",\n    color: colors.secondaryButton,\n    onClick: () => {\n      harvest(poolAddress, toBaseUnitBN(harvestAmount, COOK.decimals), hash => {\n        setHarvestAmount(new BigNumber(0));\n        setOpened(false);\n      });\n    },\n    disabled: poolAddress === '' || user === '' || !isPos(harvestAmount) || harvestAmount.isGreaterThan(userTotalRewarded),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }))))));\n}\n\nexport default Harvest;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/Pool/Harvest.tsx"],"names":["React","useState","Modal","BigNumber","BalanceBlock","harvest","isPos","toBaseUnitBN","COOK","BigNumberInput","ActionButton","colors","Container","Row","Col","ListTable","Harvest","user","poolAddress","userTotalRewarded","userTotalInVesting","pools","harvestAmount","setHarvestAmount","opened","setOpened","secondaryButton","flexBasis","paddingTop","textAlign","decimals","hash","isGreaterThan"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,SAAQC,KAAR,EAAeC,YAAf,QAAkC,oBAAlC;AACA,SAAQC,IAAR,QAAmB,wBAAnB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,mBAApC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAUA,SAASC,OAAT,CAAiB;AACfC,EAAAA,IADe;AACTC,EAAAA,WADS;AACIC,EAAAA,iBADJ;AACuBC,EAAAA,kBADvB;AAC0CC,EAAAA;AAD1C,CAAjB,EAEiB;AACf,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,IAAIE,SAAJ,CAAc,CAAd,CAAD,CAAlD;AACA,QAAM,CAACqB,MAAD,EAASC,SAAT,IAAsBxB,QAAQ,CAAC,KAAD,CAApC;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,YAAD;AACE,IAAA,KAAK,EAAE,SADT;AAEE,IAAA,KAAK,EAAEU,MAAM,CAACe,eAFhB;AAGE,IAAA,OAAO,EAAE,MAAM;AACbD,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KALH;AAME,IAAA,QAAQ,EAAEP,WAAW,KAAK,EAAhB,IAAsBD,IAAI,KAAK,EAN3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eASA,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEO,MAAhB;AAAwB,IAAA,OAAO,EAAE,MAAIC,SAAS,CAAC,KAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACE,MAAAA,SAAS,EAAE,MAAZ;AAAoBC,MAAAA,UAAU,EAAE;AAAhC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEP,KAAlB;AAAyB,IAAA,YAAY,EAAEH,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,cAApB;AAAmC,IAAA,OAAO,EAAEC,iBAA5C;AAA+D,IAAA,MAAM,EAAE,MAAvE;AAA+E,IAAA,IAAI,EAAE,KAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,YAApB;AAAiC,IAAA,OAAO,EAAEC,kBAA1C;AAA8D,IAAA,MAAM,EAAE,MAAtE;AAA8E,IAAA,IAAI,EAAE,KAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAQE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,uDACE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,KAAK,EAAEE,aAFT;AAGE,IAAA,MAAM,EAAEC,gBAHV;AAIE,IAAA,GAAG,EAAE,MAAM;AACTA,MAAAA,gBAAgB,CAACJ,iBAAD,CAAhB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADN,CARF,eAqBE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,KAAK,EAAE;AAACU,MAAAA,SAAS,EAAC;AAAX,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,YAAD;AACE,IAAA,KAAK,EAAE,SADT;AAEE,IAAA,KAAK,EAAElB,MAAM,CAACe,eAFhB;AAGE,IAAA,OAAO,EAAE,MAAM;AACbrB,MAAAA,OAAO,CACLa,WADK,EAELX,YAAY,CAACe,aAAD,EAAgBd,IAAI,CAACsB,QAArB,CAFP,EAGJC,IAAD,IAAU;AACRR,QAAAA,gBAAgB,CAAC,IAAIpB,SAAJ,CAAc,CAAd,CAAD,CAAhB;AACAsB,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD,OANI,CAAP;AAQD,KAZH;AAaE,IAAA,QAAQ,EAAEP,WAAW,KAAK,EAAhB,IAAsBD,IAAI,KAAK,EAA/B,IAAqC,CAACX,KAAK,CAACgB,aAAD,CAA3C,IAA8DA,aAAa,CAACU,aAAd,CAA4Bb,iBAA5B,CAb1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CArBF,CAFF,CADA,CATA,CADF;AAwDD;;AAED,eAAeH,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Modal } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { BalanceBlock } from '../common/index';\nimport {harvest} from '../../utils/web3';\nimport {isPos, toBaseUnitBN} from '../../utils/number';\nimport {COOK} from \"../../constants/tokens\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport ActionButton from \"../common/ActionButton\";\nimport colors from '../../constants/colors';\nimport { Container, Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\ntype HarvestProps = {\n  user: string,\n  poolAddress: string,\n  userTotalRewarded: BigNumber,\n  userTotalInVesting: BigNumber,\n  pools?: Array<any>\n};\n\nfunction Harvest({\n  user, poolAddress, userTotalRewarded, userTotalInVesting,pools\n}: HarvestProps) {\n  const [harvestAmount, setHarvestAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false)\n  return (\n    <div>\n    <ActionButton\n      label={\"HARVEST\"}\n      color={colors.secondaryButton}\n      onClick={() => {\n        setOpened(true)\n      }}\n      disabled={poolAddress === '' || user === ''}\n    />\n    <Modal visible={opened} onClose={()=>setOpened(false)} >\n    <Container style={{flexBasis: '100%', paddingTop: '5%'}}>\n      <ListTable pools={pools} selectedPool={poolAddress}/>\n      <Row >\n        <Col sm={12} lg={6}>\n          <BalanceBlock asset=\"To Be Vested\" balance={userTotalRewarded} suffix={\"COOK\"} type={\"row\"}/>\n        </Col>\n        <Col sm={12} lg={6}>\n          <BalanceBlock asset=\"In Vesting\" balance={userTotalInVesting} suffix={\"COOK\"} type={\"row\"}/>\n        </Col>\n        {/* Harvest UNI-V2 within Pool */}\n        <Col sm={12} lg={12}>\n              <>\n                <BigNumberInput\n                  adornment=\"COOK\"\n                  value={harvestAmount}\n                  setter={setHarvestAmount}\n                  max={() => {\n                    setHarvestAmount(userTotalRewarded);\n                  }}\n                />\n              \n              </>\n              </Col>\n        <Col sm={12} lg={12} style={{textAlign:\"center\"}}>\n        <ActionButton\n          label={\"HARVEST\"}\n          color={colors.secondaryButton}\n          onClick={() => {\n            harvest(\n              poolAddress,\n              toBaseUnitBN(harvestAmount, COOK.decimals),\n              (hash) => {\n                setHarvestAmount(new BigNumber(0))\n                setOpened(false)\n              }\n            );\n          }}\n          disabled={poolAddress === '' || user === '' || !isPos(harvestAmount) || harvestAmount.isGreaterThan(userTotalRewarded)}\n        />\n      </Col>\n          </Row>\n        </Container>\n    </Modal>\n    </div>\n  );\n}\n\nexport default Harvest;\n"]},"metadata":{},"sourceType":"module"}