{"ast":null,"code":"import _slicedToArray from\"/Users/huanwen/Work/Cook/cook-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Modal,DropDown}from'@aragon/ui';import BigNumber from'bignumber.js';import{BalanceBlock,PriceSection}from'../common/index';import{approve,zap}from'../../utils/web3';import{toBaseUnitBN,toTokenUnitsBN}from'../../utils/number';import{COOK,WETH}from\"../../constants/tokens\";import BigNumberInput from\"../common/BigNumberInput\";import colors from'../../constants/colors';import ActionButton from\"../common/ActionButton\";import HelpText from\"../common/HelpText\";import{Row,Col}from'react-grid-system';import ListTable from\"../PoolList/ListTable\";function Zap(_ref){var user=_ref.user,pools=_ref.pools,cookAvailable=_ref.cookAvailable,wethBalance=_ref.wethBalance,wethAllowance=_ref.wethAllowance,pairBalanceWETH=_ref.pairBalanceWETH,pairBalanceCOOK=_ref.pairBalanceCOOK,selected=_ref.selected,type=_ref.type;var _useState=useState(new BigNumber(0)),_useState2=_slicedToArray(_useState,2),zapAmount=_useState2[0],setZapAmount=_useState2[1];var _useState3=useState(new BigNumber(0)),_useState4=_slicedToArray(_useState3,2),wethAmount=_useState4[0],setWethAmount=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),opened=_useState6[0],setOpened=_useState6[1];var _useState7=useState(selected||''),_useState8=_slicedToArray(_useState7,2),selectedPool=_useState8[0],setSelectedPool=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),balanceType=_useState10[0],setBalanceType=_useState10[1];var close=function close(){setOpened(false);setZapAmount(new BigNumber(0));setWethAmount(new BigNumber(0));};var WETHToCOOKRatio=pairBalanceWETH.isZero()?new BigNumber(1):pairBalanceWETH.div(pairBalanceCOOK);var onChangeAmountCOOK=function onChangeAmountCOOK(amountCOOK){if(!amountCOOK){setWethAmount(new BigNumber(0));return;}var amountCOOKBN=new BigNumber(amountCOOK);setZapAmount(amountCOOKBN);var amountCOOKBU=toBaseUnitBN(amountCOOKBN,COOK.decimals);var newAmountWETH=toTokenUnitsBN(amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR),COOK.decimals);setWethAmount(newAmountWETH);};var renderPoolZap=function renderPoolZap(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ActionButton,{label:\"Zap\",color:colors.button,onClick:function onClick(){setOpened(true);},disabled:!user}),/*#__PURE__*/React.createElement(Modal,{visible:opened,onClose:function onClose(){return close();}},/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'100%',paddingTop:'5%'}},/*#__PURE__*/React.createElement(ListTable,{pools:pools,selectedPool:selectedPool,setSelectedPool:setSelectedPool}),/*#__PURE__*/React.createElement(Row,{style:{padding:10}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(BalanceBlock,{asset:\"Available COOK\",balance:cookAvailable,suffix:\"COOK\",type:\"row\"})),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(BalanceBlock,{asset:\"WETH Balance\",balance:wethBalance,type:\"row\",suffix:/*#__PURE__*/React.createElement(DropDown,{items:['WETH'],selected:balanceType,onChange:setBalanceType})}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xs:12},/*#__PURE__*/React.createElement(BigNumberInput,{adornment:\"COOK\",value:zapAmount,max:function max(){onChangeAmountCOOK(cookAvailable);},setter:onChangeAmountCOOK}),/*#__PURE__*/React.createElement(PriceSection,{label:\"Requires \",amt:wethAmount,symbol:\" WETH\"})),wethAllowance.comparedTo(wethAmount)>0?/*#__PURE__*/React.createElement(Col,{xs:12,style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(ActionButton,{label:\"Zap\",color:colors.button,onClick:function onClick(){if(selectedPool){zap(selectedPool,toBaseUnitBN(zapAmount,COOK.decimals),function(hash){setWethAmount(new BigNumber(0));setZapAmount(new BigNumber(0));close();});}},disabled:selectedPool===''||user===''})):/*#__PURE__*/React.createElement(Col,{xs:12,style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(ActionButton,{color:colors.button,label:\"Approve\",onClick:function onClick(){if(selectedPool){approve(WETH.addr,selectedPool);}},disabled:selectedPool===''||user===''})))),/*#__PURE__*/React.createElement(HelpText,{label:\"zap descript\",amt:''})));};return renderPoolZap();}export default Zap;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/Pool/Zap.tsx"],"names":["React","useState","Modal","DropDown","BigNumber","BalanceBlock","PriceSection","approve","zap","toBaseUnitBN","toTokenUnitsBN","COOK","WETH","BigNumberInput","colors","ActionButton","HelpText","Row","Col","ListTable","Zap","user","pools","cookAvailable","wethBalance","wethAllowance","pairBalanceWETH","pairBalanceCOOK","selected","type","zapAmount","setZapAmount","wethAmount","setWethAmount","opened","setOpened","selectedPool","setSelectedPool","balanceType","setBalanceType","close","WETHToCOOKRatio","isZero","div","onChangeAmountCOOK","amountCOOK","amountCOOKBN","amountCOOKBU","decimals","newAmountWETH","multipliedBy","integerValue","ROUND_FLOOR","renderPoolZap","button","flexBasis","paddingTop","padding","comparedTo","textAlign","hash","addr"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Modal, DropDown\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock, PriceSection\n} from '../common/index';\nimport {approve, zap} from '../../utils/web3';\nimport {toBaseUnitBN, toTokenUnitsBN} from '../../utils/number';\nimport {COOK, WETH} from \"../../constants/tokens\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport colors from '../../constants/colors';\nimport ActionButton from \"../common/ActionButton\";\nimport HelpText from \"../common/HelpText\";\nimport { Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\ntype ZapProps = {\n  user: string,\n  pools: Array<{name:string,address:string,rewardPerBlock:BigNumber,lockedUpPeriod:BigNumber}>,\n  cookAvailable: BigNumber,\n  wethBalance: BigNumber,\n  wethAllowance: BigNumber,\n  pairBalanceWETH: BigNumber,\n  pairBalanceCOOK: BigNumber,\n  selected?:string,\n  type:string,\n};\n\nfunction Zap({\n  user, pools, cookAvailable, wethBalance, wethAllowance, pairBalanceWETH, pairBalanceCOOK, selected, type\n}: ZapProps) {\n\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [wethAmount, setWethAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false)\n  const [selectedPool, setSelectedPool] = useState(selected||'')\n  const [balanceType, setBalanceType] = useState(0)\n\n  const close = () => {\n    setOpened(false);\n    setZapAmount(new BigNumber(0));\n    setWethAmount(new BigNumber(0));\n  }\n\n  const WETHToCOOKRatio = pairBalanceWETH.isZero() ? new BigNumber(1) : pairBalanceWETH.div(pairBalanceCOOK);\n\n  const onChangeAmountCOOK = (amountCOOK) => {\n    if (!amountCOOK) {\n      setWethAmount(new BigNumber(0));\n      return;\n    }\n\n    const amountCOOKBN = new BigNumber(amountCOOK)\n    setZapAmount(amountCOOKBN);\n\n    const amountCOOKBU = toBaseUnitBN(amountCOOKBN, COOK.decimals);\n    const newAmountWETH = toTokenUnitsBN(\n      amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR),\n      COOK.decimals);\n    setWethAmount(newAmountWETH);\n  };\n  const renderPoolZap = () => {\n    return(\n      <div>\n      <ActionButton label={\"Zap\"} color={colors.button} onClick={()=>{\n        setOpened(true)\n      }} disabled={!user}/>\n      <Modal visible={opened} onClose={()=>close()}>\n      <div style={{flexBasis: '100%', paddingTop: '5%'}}>\n          <ListTable pools={pools} selectedPool={selectedPool} setSelectedPool={setSelectedPool}/>\n          <Row style={{padding:10}}>\n          <Col><BalanceBlock asset=\"Available COOK\" balance={cookAvailable} suffix={\"COOK\"} type={\"row\"}/></Col>\n          <Col>\n          <BalanceBlock asset=\"WETH Balance\" balance={wethBalance} type={\"row\"} suffix={<DropDown\n                items={['WETH']}\n                selected={balanceType}\n                onChange={setBalanceType}\n              />}/>\n          </Col>\n          </Row>\n        <Row>\n          <Col xs={12}>\n              <BigNumberInput\n                adornment=\"COOK\"\n                value={zapAmount}\n                max={() => {\n                  onChangeAmountCOOK(cookAvailable);\n                }}\n                setter={onChangeAmountCOOK}\n              />\n              <PriceSection label=\"Requires \" amt={wethAmount} symbol=\" WETH\"/>\n\n          </Col>\n          {wethAllowance.comparedTo(wethAmount) > 0 ?\n            <Col xs={12} style={{textAlign:\"center\"}}>\n              <ActionButton\n                label={\"Zap\"} color={colors.button}\n                onClick={() => {\n                  if(selectedPool){\n                    zap(\n                        selectedPool,\n                        toBaseUnitBN(zapAmount, COOK.decimals),\n                        (hash) => {\n                          setWethAmount(new BigNumber(0));\n                          setZapAmount(new BigNumber(0));\n                          close()\n                        }\n                      );\n                  }\n                }}\n                disabled={selectedPool === '' || user === ''}\n              />\n            </Col>\n          :\n          <Col xs={12} style={{textAlign:\"center\"}}>\n            <ActionButton\n              color={colors.button}\n              label=\"Approve\"\n              onClick={() => {\n                if(selectedPool){\n                  approve(WETH.addr, selectedPool);\n                }\n              }}\n              disabled={selectedPool === '' || user === ''}\n            />\n          </Col>\n          }\n        </Row>\n      </div>\n      <HelpText label={\"zap descript\"} amt={''}/>\n      </Modal>\n      </div>\n    )\n  }\n\n  return (\n    renderPoolZap()\n  );\n}\n\nexport default Zap;\n"]},"metadata":{},"sourceType":"module"}