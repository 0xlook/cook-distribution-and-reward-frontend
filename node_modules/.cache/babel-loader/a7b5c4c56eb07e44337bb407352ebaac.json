{"ast":null,"code":"import _regeneratorRuntime from\"/Users/huanwen/Work/Cook/cook-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/huanwen/Work/Cook/cook-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/huanwen/Work/Cook/cook-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Button,IdentityBadge,IconConnect,IconPower,LinkBase}from'@aragon/ui';import{connect}from'../../utils/web3';function ConnectButton(_ref){var user=_ref.user,setUser=_ref.setUser;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isConnected=_useState2[0],setIsConnected=_useState2[1];var connectWeb3=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var address;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return connect();case 2:address=_context.sent;if(!(address===false)){_context.next=5;break;}return _context.abrupt(\"return\");case 5:setIsConnected(true);setUser(address);case 7:case\"end\":return _context.stop();}}},_callee);}));return function connectWeb3(){return _ref2.apply(this,arguments);};}();var disconnectWeb3=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setIsConnected(false);setUser('');case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function disconnectWeb3(){return _ref3.apply(this,arguments);};}();return isConnected?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{style:{paddingTop:5,paddingRight:5}},/*#__PURE__*/React.createElement(LinkBase,{onClick:disconnectWeb3,size:\"small\"},' ',/*#__PURE__*/React.createElement(IconPower,null),' ')),/*#__PURE__*/React.createElement(IdentityBadge,{entity:user})):/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(IconConnect,null),label:\"Connect Wallet\",onClick:connectWeb3});}export default ConnectButton;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/NavBar/ConnectButton.tsx"],"names":["React","useState","Button","IdentityBadge","IconConnect","IconPower","LinkBase","connect","ConnectButton","user","setUser","isConnected","setIsConnected","connectWeb3","address","disconnectWeb3","paddingTop","paddingRight"],"mappings":"odAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OACEC,MADF,CACUC,aADV,CACyBC,WADzB,CACsCC,SADtC,CACiDC,QADjD,KAEO,YAFP,CAIA,OAASC,OAAT,KAAwB,kBAAxB,CAOA,QAASC,CAAAA,aAAT,MAA8D,IAArCC,CAAAA,IAAqC,MAArCA,IAAqC,CAA/BC,OAA+B,MAA/BA,OAA+B,eACtBT,QAAQ,CAAC,KAAD,CADc,wCACrDU,WADqD,eACxCC,cADwC,eAG5D,GAAMC,CAAAA,WAAW,2FAAG,qKACIN,CAAAA,OAAO,EADX,QACZO,OADY,oBAEdA,OAAO,GAAK,KAFE,kEAGlBF,cAAc,CAAC,IAAD,CAAd,CACAF,OAAO,CAACI,OAAD,CAAP,CAJkB,sDAAH,kBAAXD,CAAAA,WAAW,2CAAjB,CAOA,GAAME,CAAAA,cAAc,2FAAG,wIACrBH,cAAc,CAAC,KAAD,CAAd,CACAF,OAAO,CAAC,EAAD,CAAP,CAFqB,wDAAH,kBAAdK,CAAAA,cAAc,2CAApB,CAKA,MAAOJ,CAAAA,WAAW,cAChB,qDACE,2BAAK,KAAK,CAAE,CAAEK,UAAU,CAAE,CAAd,CAAiBC,YAAY,CAAE,CAA/B,CAAZ,eACE,oBAAC,QAAD,EAAU,OAAO,CAAEF,cAAnB,CAAmC,IAAI,CAAC,OAAxC,EACG,GADH,cAEE,oBAAC,SAAD,MAFF,CAGG,GAHH,CADF,CADF,cAQI,oBAAC,aAAD,EAAe,MAAM,CAAEN,IAAvB,EARJ,CADgB,cAahB,oBAAC,MAAD,EAAQ,IAAI,cAAE,oBAAC,WAAD,MAAd,CAA+B,KAAK,CAAC,gBAArC,CAAsD,OAAO,CAAEI,WAA/D,EAbF,CAeD,CAGD,cAAeL,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport {\n  Button, IdentityBadge, IconConnect, IconPower, LinkBase,\n} from '@aragon/ui';\n\nimport { connect } from '../../utils/web3';\n\ntype connectButtonProps = {\n  user: string,\n  setUser: Function\n}\n\nfunction ConnectButton({ user, setUser }: connectButtonProps) {\n  const [isConnected, setIsConnected] = useState(false);\n\n  const connectWeb3 = async () => {\n    const address = await connect();\n    if (address === false) return;\n    setIsConnected(true);\n    setUser(address);\n  };\n\n  const disconnectWeb3 = async () => {\n    setIsConnected(false);\n    setUser('');\n  };\n\n  return isConnected ? (\n    <>\n      <div style={{ paddingTop: 5, paddingRight: 5 }}>\n        <LinkBase onClick={disconnectWeb3} size=\"small\">\n          {' '}\n          <IconPower />\n          {' '}\n        </LinkBase>\n      </div>\n        <IdentityBadge entity={user}  />\n\n    </>\n  ) : (\n    <Button icon={<IconConnect />} label=\"Connect Wallet\" onClick={connectWeb3} />\n  );\n}\n\n\nexport default ConnectButton;\n"]},"metadata":{},"sourceType":"module"}