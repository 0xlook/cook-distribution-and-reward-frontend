{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/Cook/cook-frontend/src/components/PoolList/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getStakeLockupDuration, getRewardPerBlock, getTotalStaked, getPoolBalanceOfStaked, getPoolBalanceOfUnstakable, getPoolBalanceOfClaimable, getTokenAllowance, getTokenBalance } from '../../utils/infura';\nimport { useViewport } from '@aragon/ui';\nimport LinearText from \"../common/LinearText\";\nimport _ from 'lodash';\nimport { POOLS } from \"../../constants/contracts\";\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { COOK, UNI, WETH } from \"../../constants/tokens\";\nimport Pool from \"../Pool\";\nimport BigNumber from 'bignumber.js';\nimport ListTable from \"./ListTable\";\nimport colors from '../../constants/colors';\nimport Unstake from \"../Pool/Unstake\";\nimport Stake from \"../Pool/Stake\";\nimport Zap from \"../Pool/Zap\";\nimport { Row, Col } from 'react-grid-system';\n\nfunction PoolList({\n  user\n}) {\n  const {\n    override\n  } = useParams();\n\n  if (override) {\n    user = override;\n  }\n\n  const [poolList, setPoolList] = useState([]);\n  const [selectedPool, setSelectedPool] = useState('');\n  const [totalStaked, setTotalStaked] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false);\n  const {\n    below\n  } = useViewport();\n  const [pairBalanceCOOK, setPairBalanceCOOK] = useState(new BigNumber(0));\n  const [pairBalanceWETH, setPairBalanceWETH] = useState(new BigNumber(0));\n  const [userTotalStaked, setUserTotalStaked] = useState(new BigNumber(0));\n  const [userTotalUnstakable, setUserTotalUnstakable] = useState(new BigNumber(0));\n  const [userTotalLocked, setUserTotalLocked] = useState(new BigNumber(0));\n  const [userTotalVested, setUserTotalVested] = useState(new BigNumber(0));\n  const [userUNIAllowance, setUserUNIAllowance] = useState(new BigNumber(0));\n  const [userUNIBalance, setUserUNIBalance] = useState(new BigNumber(0));\n  const [userWETHBalance, setUserWETHBalance] = useState(new BigNumber(0));\n  const [userWETHAllowance, setUserWETHAllowance] = useState(new BigNumber(0));\n  useEffect(() => {\n    let isCancelled = false; // setPoolList([{name:\"4 UNI-V2 (WETH/COOK)\", address:\"0xf4B146FbA71F41E0592668ffbF264F1D186b2Ca8\",lockedUpPeriod:\"90 days\",rewardPerBlock:\"300\"}]);\n\n    async function updatePoolInfo() {\n      const poolList = await Promise.all(POOLS.map(async pool => {\n        const [lockedup, reward] = await Promise.all([getStakeLockupDuration(pool.address), getRewardPerBlock(pool.address)]);\n        const poolRewardPerBlock = toTokenUnitsBN(reward, COOK.decimals);\n        return {\n          name: pool.name,\n          address: pool.address,\n          lockedUpPeriod: lockedup,\n          rewardPerBlock: poolRewardPerBlock\n        };\n      }));\n      const totalStakedBalance = await POOLS.reduce(async (sum, pool) => {\n        const staked = await getTotalStaked(pool.address);\n        return (await sum).plus(staked);\n      }, Promise.resolve(new BigNumber(0)));\n      const totalStaked = toTokenUnitsBN(totalStakedBalance, UNI.decimals);\n\n      if (!isCancelled) {\n        setPoolList(poolList);\n        setTotalStaked(totalStaked);\n      }\n    }\n\n    updatePoolInfo();\n    const id = setInterval(updatePoolInfo, 15000); // eslint-disable-next-line consistent-return\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n  useEffect(() => {\n    if (poolList && poolList[0] && !selectedPool) {\n      setSelectedPool(poolList[0].address);\n    }\n  }, [poolList]);\n  useEffect(() => {\n    if (selectedPool === '') {\n      setPairBalanceCOOK(new BigNumber(0));\n      setPairBalanceWETH(new BigNumber(0));\n      setUserTotalStaked(new BigNumber(0));\n      setUserTotalUnstakable(new BigNumber(0));\n      setUserTotalLocked(new BigNumber(0));\n      setUserTotalVested(new BigNumber(0));\n      setUserUNIAllowance(new BigNumber(0));\n      setUserUNIBalance(new BigNumber(0));\n      setUserWETHBalance(new BigNumber(0));\n      setUserWETHAllowance(new BigNumber(0));\n      return;\n    }\n\n    let isCancelled = false;\n\n    async function updatePoolInfo() {\n      const [pairBalanceCOOKStr, pairBalanceWETHStr] = await Promise.all([getTokenBalance(COOK.addr, UNI.addr), getTokenBalance(WETH.addr, UNI.addr)]);\n      const pairCOOKBalance = toTokenUnitsBN(pairBalanceCOOKStr, COOK.decimals);\n      const pairWETHBalance = toTokenUnitsBN(pairBalanceWETHStr, WETH.decimals);\n\n      if (!isCancelled) {\n        setPairBalanceCOOK(new BigNumber(pairCOOKBalance));\n        setPairBalanceWETH(new BigNumber(pairWETHBalance));\n      }\n    }\n\n    updatePoolInfo();\n    const poolInfoId = setInterval(updatePoolInfo, 15000);\n\n    if (user === '') {\n      setUserTotalStaked(new BigNumber(0));\n      setUserTotalUnstakable(new BigNumber(0));\n      setUserTotalLocked(new BigNumber(0));\n      setUserTotalVested(new BigNumber(0));\n      setUserUNIAllowance(new BigNumber(0));\n      setUserUNIBalance(new BigNumber(0));\n      setUserWETHBalance(new BigNumber(0));\n      setUserWETHAllowance(new BigNumber(0));\n      return () => {\n        isCancelled = true;\n        clearInterval(poolInfoId);\n      };\n    }\n\n    async function updateUserInfo() {\n      const [userTotalStakedStr, userTotalUnstakableStr, userTotalVestedStr, uniAllowance, uniBalance, wethAllowance, wethBalance] = await Promise.all([getPoolBalanceOfStaked(selectedPool, user), getPoolBalanceOfUnstakable(selectedPool, user), getPoolBalanceOfClaimable(selectedPool, user), getTokenAllowance(UNI.addr, user, selectedPool), getTokenBalance(UNI.addr, user), getTokenAllowance(WETH.addr, user, selectedPool), getTokenBalance(WETH.addr, user)]);\n      const userTotalStakedBalance = toTokenUnitsBN(userTotalStakedStr, UNI.decimals);\n      const userTotalUnstakableBalance = toTokenUnitsBN(userTotalUnstakableStr, UNI.decimals);\n      const userTotalLockedBalance = new BigNumber(userTotalStakedBalance).minus(new BigNumber(userTotalUnstakableBalance));\n      const userTotalVestedBalance = toTokenUnitsBN(userTotalVestedStr, COOK.decimals);\n      const userUNIBalance = toTokenUnitsBN(uniBalance, UNI.decimals);\n      const userWETHBalance = toTokenUnitsBN(wethBalance, WETH.decimals);\n\n      if (!isCancelled) {\n        setUserTotalStaked(new BigNumber(userTotalStakedBalance));\n        setUserTotalUnstakable(new BigNumber(userTotalUnstakableBalance));\n        setUserTotalLocked(new BigNumber(userTotalLockedBalance));\n        setUserTotalVested(new BigNumber(userTotalVestedBalance));\n        setUserUNIAllowance(new BigNumber(uniAllowance));\n        setUserUNIBalance(new BigNumber(userUNIBalance));\n        setUserWETHAllowance(new BigNumber(wethAllowance));\n        setUserWETHBalance(new BigNumber(userWETHBalance));\n      }\n    }\n\n    updateUserInfo();\n    const userInfoId = setInterval(updateUserInfo, 15000); // eslint-disable-next-line consistent-return\n\n    return () => {\n      isCancelled = true;\n      clearInterval(poolInfoId);\n      clearInterval(userInfoId);\n    };\n  }, [user, selectedPool]);\n  const selectedPoolList = [_.find(poolList, {\n    'address': selectedPool\n  })];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, \"LP mining\"), /*#__PURE__*/React.createElement(LinearText, {\n    text: \"Stake Uni token, get cook token\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: below(\"medium\") ? {\n      padding: 0,\n      margin: \"30pt auto\"\n    } : {\n      padding: '40px 30px',\n      backgroundColor: colors.secondary,\n      width: \"100%\",\n      margin: \"30pt auto\",\n      textAlign: \"center\",\n      borderRadius: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pool, {\n    user: user,\n    poolAddress: selectedPool,\n    pools: poolList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ListTable, {\n    pools: poolList,\n    selectedPool: selectedPool,\n    setSelectedPool: selected => {\n      setSelectedPool(selected);\n      setOpened(true);\n    },\n    detailMode: true,\n    action: /*#__PURE__*/React.createElement(Row, {\n      style: {\n        textAlign: \"left\",\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      xl: 4,\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Stake, {\n      pools: selectedPoolList,\n      user: user,\n      poolAddress: selectedPool,\n      balance: userUNIBalance,\n      allowance: userUNIAllowance,\n      staked: userTotalStaked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      xl: 4,\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Unstake, {\n      user: user,\n      pools: selectedPoolList,\n      poolAddress: selectedPool,\n      unstakable: userTotalUnstakable,\n      locked: userTotalLocked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      xl: 4,\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Zap, {\n      user: user,\n      pools: selectedPoolList,\n      cookAvailable: userTotalVested,\n      selected: selectedPool,\n      wethBalance: userWETHBalance,\n      wethAllowance: userWETHAllowance,\n      pairBalanceWETH: pairBalanceWETH,\n      pairBalanceCOOK: pairBalanceCOOK,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default PoolList;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/PoolList/index.tsx"],"names":["React","useState","useEffect","useParams","getStakeLockupDuration","getRewardPerBlock","getTotalStaked","getPoolBalanceOfStaked","getPoolBalanceOfUnstakable","getPoolBalanceOfClaimable","getTokenAllowance","getTokenBalance","useViewport","LinearText","_","POOLS","toTokenUnitsBN","COOK","UNI","WETH","Pool","BigNumber","ListTable","colors","Unstake","Stake","Zap","Row","Col","PoolList","user","override","poolList","setPoolList","selectedPool","setSelectedPool","totalStaked","setTotalStaked","opened","setOpened","below","pairBalanceCOOK","setPairBalanceCOOK","pairBalanceWETH","setPairBalanceWETH","userTotalStaked","setUserTotalStaked","userTotalUnstakable","setUserTotalUnstakable","userTotalLocked","setUserTotalLocked","userTotalVested","setUserTotalVested","userUNIAllowance","setUserUNIAllowance","userUNIBalance","setUserUNIBalance","userWETHBalance","setUserWETHBalance","userWETHAllowance","setUserWETHAllowance","isCancelled","updatePoolInfo","Promise","all","map","pool","lockedup","reward","address","poolRewardPerBlock","decimals","name","lockedUpPeriod","rewardPerBlock","totalStakedBalance","reduce","sum","staked","plus","resolve","id","setInterval","clearInterval","pairBalanceCOOKStr","pairBalanceWETHStr","addr","pairCOOKBalance","pairWETHBalance","poolInfoId","updateUserInfo","userTotalStakedStr","userTotalUnstakableStr","userTotalVestedStr","uniAllowance","uniBalance","wethAllowance","wethBalance","userTotalStakedBalance","userTotalUnstakableBalance","userTotalLockedBalance","minus","userTotalVestedBalance","userInfoId","selectedPoolList","find","padding","margin","backgroundColor","secondary","width","textAlign","borderRadius","selected"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  getStakeLockupDuration,\n  getRewardPerBlock,\n  getTotalStaked,\n  getPoolBalanceOfStaked,\n  getPoolBalanceOfUnstakable,\n  getPoolBalanceOfClaimable,\n  getTokenAllowance,\n  getTokenBalance\n} from '../../utils/infura';\nimport {\n  useViewport\n} from '@aragon/ui';\nimport LinearText from \"../common/LinearText\";\nimport _ from 'lodash'\nimport { POOLS } from \"../../constants/contracts\";\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { COOK, UNI, WETH } from \"../../constants/tokens\";\nimport Pool from \"../Pool\";\nimport BigNumber from 'bignumber.js';\nimport ListTable from \"./ListTable\";\nimport colors from '../../constants/colors';\nimport Unstake from \"../Pool/Unstake\";\nimport Stake from \"../Pool/Stake\";\nimport Zap from \"../Pool/Zap\";\nimport { Container, Row, Col } from 'react-grid-system';\n\nfunction PoolList({ user }: { user: string }) {\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n  const [poolList, setPoolList] = useState([] as any);\n  const [selectedPool, setSelectedPool] = useState('');\n  const [totalStaked, setTotalStaked] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false);\n  const { below } = useViewport()\n  const [pairBalanceCOOK, setPairBalanceCOOK] = useState(new BigNumber(0));\n  const [pairBalanceWETH, setPairBalanceWETH] = useState(new BigNumber(0));\n  const [userTotalStaked, setUserTotalStaked] = useState(new BigNumber(0));\n  const [userTotalUnstakable, setUserTotalUnstakable] = useState(new BigNumber(0));\n  const [userTotalLocked, setUserTotalLocked] = useState(new BigNumber(0));\n\n  const [userTotalVested, setUserTotalVested] = useState(new BigNumber(0));\n  const [userUNIAllowance, setUserUNIAllowance] = useState(new BigNumber(0));\n  const [userUNIBalance, setUserUNIBalance] = useState(new BigNumber(0));\n  const [userWETHBalance, setUserWETHBalance] = useState(new BigNumber(0));\n  const [userWETHAllowance, setUserWETHAllowance] = useState(new BigNumber(0));\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    // setPoolList([{name:\"4 UNI-V2 (WETH/COOK)\", address:\"0xf4B146FbA71F41E0592668ffbF264F1D186b2Ca8\",lockedUpPeriod:\"90 days\",rewardPerBlock:\"300\"}]);\n    async function updatePoolInfo() {\n      const poolList = await Promise.all(POOLS.map(async (pool) => {\n        const [lockedup, reward] =\n          await Promise.all([\n            getStakeLockupDuration(pool.address),\n            getRewardPerBlock(pool.address)\n          ])\n        const poolRewardPerBlock = toTokenUnitsBN(reward, COOK.decimals);\n        return ({\n          name: pool.name,\n          address: pool.address,\n          lockedUpPeriod: lockedup,\n          rewardPerBlock: poolRewardPerBlock\n        });\n      }));\n      const totalStakedBalance = await POOLS.reduce(async (sum, pool) => {\n        const staked = await getTotalStaked(pool.address);\n        return (await sum).plus(staked);\n      }, Promise.resolve(new BigNumber(0)));\n\n      const totalStaked = toTokenUnitsBN(totalStakedBalance, UNI.decimals);\n\n      if (!isCancelled) {\n        setPoolList(poolList);\n        setTotalStaked(totalStaked);\n      }\n\n    }\n\n    updatePoolInfo();\n\n    const id = setInterval(updatePoolInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n\n  useEffect(() => {\n    if (poolList && poolList[0] && !selectedPool) {\n      setSelectedPool(poolList[0].address)\n    }\n  }, [poolList]);\n\n  useEffect(() => {\n    if (selectedPool === '') {\n      setPairBalanceCOOK(new BigNumber(0));\n      setPairBalanceWETH(new BigNumber(0));\n      setUserTotalStaked(new BigNumber(0));\n      setUserTotalUnstakable(new BigNumber(0));\n      setUserTotalLocked(new BigNumber(0));\n      setUserTotalVested(new BigNumber(0));\n      setUserUNIAllowance(new BigNumber(0));\n      setUserUNIBalance(new BigNumber(0));\n      setUserWETHBalance(new BigNumber(0));\n      setUserWETHAllowance(new BigNumber(0));\n      return;\n    }\n\n    let isCancelled = false;\n\n    async function updatePoolInfo() {\n      const [\n        pairBalanceCOOKStr,\n        pairBalanceWETHStr,\n      ] = await Promise.all([\n        getTokenBalance(COOK.addr, UNI.addr),\n        getTokenBalance(WETH.addr, UNI.addr),\n      ]);\n\n      const pairCOOKBalance = toTokenUnitsBN(pairBalanceCOOKStr, COOK.decimals);\n      const pairWETHBalance = toTokenUnitsBN(pairBalanceWETHStr, WETH.decimals);\n\n      if (!isCancelled) {\n        setPairBalanceCOOK(new BigNumber(pairCOOKBalance));\n        setPairBalanceWETH(new BigNumber(pairWETHBalance));\n      }\n    }\n\n    updatePoolInfo();\n    const poolInfoId = setInterval(updatePoolInfo, 15000);\n\n    if (user === '') {\n      setUserTotalStaked(new BigNumber(0));\n      setUserTotalUnstakable(new BigNumber(0));\n      setUserTotalLocked(new BigNumber(0));\n\n      setUserTotalVested(new BigNumber(0));\n      setUserUNIAllowance(new BigNumber(0));\n      setUserUNIBalance(new BigNumber(0));\n      setUserWETHBalance(new BigNumber(0));\n      setUserWETHAllowance(new BigNumber(0));\n      return () => {\n        isCancelled = true;\n        clearInterval(poolInfoId);\n      };\n    }\n\n    async function updateUserInfo() {\n      const [\n        userTotalStakedStr,\n        userTotalUnstakableStr,\n        userTotalVestedStr,\n        uniAllowance,\n        uniBalance,\n        wethAllowance,\n        wethBalance\n      ] = await Promise.all([\n        getPoolBalanceOfStaked(selectedPool, user),\n        getPoolBalanceOfUnstakable(selectedPool, user),\n        getPoolBalanceOfClaimable(selectedPool, user),\n        getTokenAllowance(UNI.addr, user, selectedPool),\n        getTokenBalance(UNI.addr, user),\n        getTokenAllowance(WETH.addr, user, selectedPool),\n        getTokenBalance(WETH.addr, user),\n      ]);\n\n      const userTotalStakedBalance = toTokenUnitsBN(userTotalStakedStr, UNI.decimals);\n      const userTotalUnstakableBalance = toTokenUnitsBN(userTotalUnstakableStr, UNI.decimals);\n      const userTotalLockedBalance = (new BigNumber(userTotalStakedBalance)).minus(new BigNumber(userTotalUnstakableBalance));\n      const userTotalVestedBalance = toTokenUnitsBN(userTotalVestedStr, COOK.decimals);\n      const userUNIBalance = toTokenUnitsBN(uniBalance, UNI.decimals);\n      const userWETHBalance = toTokenUnitsBN(wethBalance, WETH.decimals);\n\n\n      if (!isCancelled) {\n        setUserTotalStaked(new BigNumber(userTotalStakedBalance));\n        setUserTotalUnstakable(new BigNumber(userTotalUnstakableBalance));\n        setUserTotalLocked(new BigNumber(userTotalLockedBalance));\n        setUserTotalVested(new BigNumber(userTotalVestedBalance));\n        setUserUNIAllowance(new BigNumber(uniAllowance));\n        setUserUNIBalance(new BigNumber(userUNIBalance));\n        setUserWETHAllowance(new BigNumber(wethAllowance));\n        setUserWETHBalance(new BigNumber(userWETHBalance));\n      }\n    }\n\n    updateUserInfo();\n    const userInfoId = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(poolInfoId);\n      clearInterval(userInfoId);\n    };\n  }, [user, selectedPool]);\n\n\n  const selectedPoolList = [_.find(poolList, { 'address': selectedPool })]\n  return (\n    <div style={{ padding: '2%' }}>\n      <div className=\"title\">LP mining</div>\n      <LinearText text={\"Stake Uni token, get cook token\"} />\n\n      <div style={below(\"medium\") ? {\n        padding: 0, margin: \"30pt auto\"\n      } : {\n          padding: '40px 30px',\n          backgroundColor: colors.secondary, width: \"100%\",\n          margin: \"30pt auto\", textAlign: \"center\", borderRadius: 20\n        }}>\n        <Pool user={user} poolAddress={selectedPool} pools={poolList} />\n\n      </div>\n      <ListTable pools={poolList} selectedPool={selectedPool} setSelectedPool={(selected) => {\n        setSelectedPool(selected)\n        setOpened(true)\n      }\n      } detailMode={true} action={\n        <Row style={{ textAlign: \"left\", width: \"100%\" }}>\n          <Col xs={12} xl={4} style={{ padding: 0 }}>\n            <Stake\n              pools={selectedPoolList}\n              user={user}\n              poolAddress={selectedPool}\n              balance={userUNIBalance}\n              allowance={userUNIAllowance}\n              staked={userTotalStaked}\n            />\n          </Col><Col xs={12} xl={4} style={{ padding: 0 }}>\n            <Unstake\n              user={user}\n              pools={selectedPoolList}\n              poolAddress={selectedPool}\n              unstakable={userTotalUnstakable}\n              locked={userTotalLocked}\n            />\n          </Col>\n          <Col xs={12} xl={4} style={{ padding: 0 }}>\n            <Zap\n              user={user}\n              pools={selectedPoolList}\n              cookAvailable={userTotalVested}\n              selected={selectedPool}\n              wethBalance={userWETHBalance}\n              wethAllowance={userWETHAllowance}\n              pairBalanceWETH={pairBalanceWETH}\n              pairBalanceCOOK={pairBalanceCOOK}\n            />\n          </Col>\n        </Row>\n      } />\n    </div >\n  );\n}\n\nexport default PoolList;\n"]},"metadata":{},"sourceType":"module"}