{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/cook-frontend/src/components/Pool/Claim.tsx\";\nimport React, { useState } from 'react';\nimport { Box } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { BalanceBlock, MaxButton, PriceSection } from '../common/index';\nimport { claim, zap, approve } from '../../utils/web3';\nimport { isPos, toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { COOK, WETH } from \"../../constants/tokens\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport ActionButton from \"../common/ActionButton\";\nimport colors from '../../constants/colors';\n\nfunction Claim({\n  user,\n  poolAddress,\n  claimable,\n  wethBalance,\n  wethAllowance,\n  pairBalanceWETH,\n  pairBalanceCOOK\n}) {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0));\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [wethAmount, setWethAmount] = useState(new BigNumber(0));\n  const WETHToCOOKRatio = pairBalanceWETH.isZero() ? new BigNumber(1) : pairBalanceWETH.div(pairBalanceCOOK);\n\n  const onChangeAmountCOOK = amountCOOK => {\n    if (!amountCOOK) {\n      setZapAmount(new BigNumber(0));\n      setWethAmount(new BigNumber(0));\n      return;\n    }\n\n    const amountCOOKBN = new BigNumber(amountCOOK);\n    setZapAmount(amountCOOKBN);\n    const amountCOOKBU = toBaseUnitBN(amountCOOKBN, COOK.decimals);\n    const newAmountWETH = toTokenUnitsBN(amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR), COOK.decimals);\n    setWethAmount(newAmountWETH);\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    heading: \"Claim\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '32%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BalanceBlock, {\n    asset: \"Claimable\",\n    balance: claimable,\n    suffix: \"COOK\",\n    type: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexBasis: '33%',\n      paddingTop: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '60%',\n      minWidth: '6em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BigNumberInput, {\n    adornment: \"COOK\",\n    value: claimAmount,\n    setter: setClaimAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MaxButton, {\n    onClick: () => {\n      setClaimAmount(claimable);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '40%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    label: \"CLAIM\",\n    color: colors.secondaryButton,\n    onClick: () => {\n      claim(poolAddress, toBaseUnitBN(claimAmount, COOK.decimals), hash => setClaimAmount(new BigNumber(0)));\n    },\n    disabled: poolAddress === '' || user === '' || !isPos(claimAmount) || claimAmount.isGreaterThan(claimable),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexBasis: '32%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BalanceBlock, {\n    asset: \"WETH Balance\",\n    balance: wethBalance,\n    suffix: \"WETH\",\n    type: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexBasis: '33%',\n      paddingTop: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '60%',\n      minWidth: '6em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BigNumberInput, {\n    adornment: \"COOK\",\n    value: zapAmount,\n    setter: onChangeAmountCOOK,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(PriceSection, {\n    label: \"Requires \",\n    amt: wethAmount,\n    symbol: \" WETH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MaxButton, {\n    onClick: () => {\n      onChangeAmountCOOK(claimable);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }))), wethAllowance.comparedTo(wethAmount) > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '40%',\n      minWidth: '6em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    label: \"ZAP\",\n    color: colors.secondaryButton,\n    onClick: () => {\n      zap(poolAddress, toBaseUnitBN(zapAmount, COOK.decimals), hash => {\n        setWethAmount(new BigNumber(0));\n        setZapAmount(new BigNumber(0));\n      });\n    },\n    disabled: poolAddress === '' || user === '' || !isPos(zapAmount) || wethAmount.isGreaterThan(wethBalance),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '40%',\n      minWidth: '6em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    label: \"APPROVE\",\n    color: colors.secondaryButton,\n    onClick: () => {\n      approve(WETH.addr, poolAddress);\n    },\n    disabled: poolAddress === '' || user === '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Claim;","map":{"version":3,"sources":["/Users/huanwen/Work/cook-frontend/src/components/Pool/Claim.tsx"],"names":["React","useState","Box","BigNumber","BalanceBlock","MaxButton","PriceSection","claim","zap","approve","isPos","toBaseUnitBN","toTokenUnitsBN","COOK","WETH","BigNumberInput","ActionButton","colors","Claim","user","poolAddress","claimable","wethBalance","wethAllowance","pairBalanceWETH","pairBalanceCOOK","claimAmount","setClaimAmount","zapAmount","setZapAmount","wethAmount","setWethAmount","WETHToCOOKRatio","isZero","div","onChangeAmountCOOK","amountCOOK","amountCOOKBN","amountCOOKBU","decimals","newAmountWETH","multipliedBy","integerValue","ROUND_FLOOR","display","flexWrap","width","flexBasis","paddingTop","minWidth","secondaryButton","hash","isGreaterThan","comparedTo","addr"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock, MaxButton, PriceSection\n} from '../common/index';\nimport {claim, zap, approve} from '../../utils/web3';\nimport {isPos, toBaseUnitBN, toTokenUnitsBN} from '../../utils/number';\nimport {COOK, WETH} from \"../../constants/tokens\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport ActionButton from \"../common/ActionButton\";\nimport colors from '../../constants/colors';\n\ntype ClaimProps = {\n  user: string,\n  poolAddress: string,\n  claimable: BigNumber,\n  wethBalance: BigNumber,\n  wethAllowance: BigNumber,\n  pairBalanceWETH: BigNumber,\n  pairBalanceCOOK: BigNumber\n};\n\nfunction Claim({\n  user,poolAddress, claimable, wethBalance, wethAllowance, pairBalanceWETH, pairBalanceCOOK\n}: ClaimProps) {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0));\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [wethAmount, setWethAmount] = useState(new BigNumber(0));\n\n  const WETHToCOOKRatio = pairBalanceWETH.isZero() ? new BigNumber(1) : pairBalanceWETH.div(pairBalanceCOOK);\n\n  const onChangeAmountCOOK = (amountCOOK) => {\n    if (!amountCOOK) {\n      setZapAmount(new BigNumber(0));\n      setWethAmount(new BigNumber(0));\n      return;\n    }\n\n    const amountCOOKBN = new BigNumber(amountCOOK)\n    setZapAmount(amountCOOKBN);\n\n    const amountCOOKBU = toBaseUnitBN(amountCOOKBN, COOK.decimals);\n    const newAmountWETH = toTokenUnitsBN(\n      amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR),\n      COOK.decimals);\n    setWethAmount(newAmountWETH);\n  };\n\n  return (\n    <Box heading=\"Claim\">\n      <div style={{display: 'flex', flexWrap: 'wrap'}}>\n        {/* Total Claimable */}\n        <div style={{width: '32%'}}>\n          <BalanceBlock asset=\"Claimable\" balance={claimable} suffix={\"COOK\"} type={\"row\"}/>\n        </div>\n        {/* Claim COOK rewards within Pool */}\n        <div style={{flexBasis: '33%', paddingTop: '2%'}}>\n          <div style={{display: 'flex'}}>\n            <div style={{width: '60%', minWidth: '6em'}}>\n              <>\n                <BigNumberInput\n                  adornment=\"COOK\"\n                  value={claimAmount}\n                  setter={setClaimAmount}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setClaimAmount(claimable);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{width: '40%'}}>\n              <ActionButton \n                label={\"CLAIM\"} \n                color={colors.secondaryButton}\n                onClick={() => {\n                  claim(\n                    poolAddress,\n                    toBaseUnitBN(claimAmount, COOK.decimals),\n                    (hash) => setClaimAmount(new BigNumber(0))\n                  );\n                }}\n                disabled={poolAddress === '' || user === '' || !isPos(claimAmount) || claimAmount.isGreaterThan(claimable)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div style={{display: 'flex', flexWrap: 'wrap'}}>\n        {/* total rewarded */}\n        <div style={{flexBasis: '32%'}}>\n          <BalanceBlock asset=\"WETH Balance\" balance={wethBalance} suffix={\"WETH\"} type={\"row\"}/>\n        </div>\n        \n        {/* Provide liquidity using Pool rewards */}\n        <div style={{flexBasis: '33%', paddingTop: '2%'}}>\n          <div style={{display: 'flex'}}>\n            <div style={{width: '60%', minWidth: '6em'}}>\n              <>\n                <BigNumberInput\n                  adornment=\"COOK\"\n                  value={zapAmount}\n                  setter={onChangeAmountCOOK}\n                />\n                <PriceSection label=\"Requires \" amt={wethAmount} symbol=\" WETH\"/>\n                <MaxButton\n                  onClick={() => {\n                    onChangeAmountCOOK(claimable);\n                  }}\n                />\n              </>\n            </div>\n            {wethAllowance.comparedTo(wethAmount) > 0 ? \n            <div style={{width: '40%', minWidth: '6em'}}>\n              <ActionButton \n                label={\"ZAP\"} \n                color={colors.secondaryButton}\n                onClick={() => {\n                  zap(\n                    poolAddress,\n                    toBaseUnitBN(zapAmount, COOK.decimals),\n                    (hash) => {\n                      setWethAmount(new BigNumber(0));\n                      setZapAmount(new BigNumber(0));\n                    }\n                  );\n                }}\n                disabled={poolAddress === '' || user === '' || !isPos(zapAmount) || wethAmount.isGreaterThan(wethBalance)}\n              />\n            </div>\n            :\n            <div style={{width: '40%', minWidth: '6em'}}>\n              <ActionButton \n                label={\"APPROVE\"} \n                color={colors.secondaryButton}\n                onClick={() => {\n                  approve(WETH.addr, poolAddress);\n                }}\n                disabled={poolAddress === '' || user === ''}\n              />\n            </div>\n            }\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nexport default Claim;\n"]},"metadata":{},"sourceType":"module"}