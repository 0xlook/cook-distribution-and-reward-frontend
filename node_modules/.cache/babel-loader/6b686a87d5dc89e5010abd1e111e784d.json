{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/Cook/cook-frontend/src/components/common/BalanceBlock.tsx\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport { useViewport } from '@aragon/ui';\nimport colors from '../../constants/colors';\nimport LinearText from \"../common/LinearText\";\nimport { Row, Col } from 'react-grid-system';\nconst format = {\n  decimalSeparator: '.',\n  groupSeparator: ',',\n  groupSize: 3,\n  secondaryGroupSize: 0,\n  fractionGroupSeparator: ' ',\n  fractionGroupSize: 0\n};\nBigNumber.config({\n  FORMAT: format\n});\n\nfunction BalanceBlock({\n  asset,\n  balance,\n  suffix = \"\",\n  type = \"\",\n  size\n}) {\n  let integer = '0';\n  let digits = '0';\n  let bigNumber = new BigNumber(balance);\n  const {\n    below\n  } = useViewport();\n\n  if (bigNumber.gt(new BigNumber(0))) {\n    // if (bigNumber.gte(1000000)) {\n    //   let str = (bigNumber.div(1000000)).toLocaleString()\n    //   const split = str.split('.');\n    //   integer = split[0]\n    //   digits = split.length > 1 ? str.split('.')[1] : '0';\n    //   digits = digits.length > 2 ? digits.substr(0, 2) : digits\n    //   digits += 'M'\n    // } else {\n    let str = bigNumber.toFormat();\n    const split = str.split('.');\n    integer = split[0];\n    digits = split.length > 1 ? str.split('.')[1] : '0';\n    digits = digits.length > 2 ? digits.substr(0, 2) : digits; // }\n  }\n\n  const fontSize = size || (below('medium') ? \"30px\" : \"50px\");\n\n  if (type === \"block\") {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      style: {\n        fontSize: 14,\n        fontWeight: 500,\n        color: colors.title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, asset), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      style: {\n        fontWeight: 700\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(LinearText, {\n      text: `${integer}.${digits}`,\n      size: fontSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), suffix === \"\" ? '' : /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: 14\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 35\n      }\n    }, \" \", suffix))));\n  }\n\n  if (type === \"row\") {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        padding: 15\n      },\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      md: 6,\n      style: {\n        padding: 0,\n        fontSize: 16,\n        fontWeight: 500,\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, asset), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      md: 6,\n      style: {\n        padding: 0,\n        textAlign: \"right\",\n        fontWeight: 700\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(LinearText, {\n      text: `${integer}.${digits}`,\n      size: integer.length > 8 ? \"30px\" : fontSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), suffix === \"\" ? '' : /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: 14\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 35\n      }\n    }, \" \", suffix))));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: 14,\n      fontWeight: 500,\n      color: colors.title\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, asset), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontWeight: 700\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LinearText, {\n    text: `${integer}.${digits}`,\n    size: fontSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), suffix === \"\" ? '' : /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: 14\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 31\n    }\n  }, \" \", suffix)));\n}\n\nexport default BalanceBlock;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/common/BalanceBlock.tsx"],"names":["React","BigNumber","useViewport","colors","LinearText","Row","Col","format","decimalSeparator","groupSeparator","groupSize","secondaryGroupSize","fractionGroupSeparator","fractionGroupSize","config","FORMAT","BalanceBlock","asset","balance","suffix","type","size","integer","digits","bigNumber","below","gt","str","toFormat","split","length","substr","fontSize","fontWeight","color","title","padding","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  useViewport\n} from '@aragon/ui';\nimport colors from '../../constants/colors';\nimport LinearText from \"../common/LinearText\";\nimport { Row, Col } from 'react-grid-system';\n\n\ntype BlanceBlockProps = {\n  asset: string,\n  balance: BigNumber | string | number\n  suffix?: any\n  type?: string\n  size?: string\n}\nconst format = {\n  decimalSeparator: '.',\n  groupSeparator: ',',\n  groupSize: 3,\n  secondaryGroupSize: 0,\n  fractionGroupSeparator: ' ',\n  fractionGroupSize: 0\n}\nBigNumber.config({ FORMAT: format })\n\nfunction BalanceBlock({ asset, balance, suffix = \"\", type = \"\", size }: BlanceBlockProps) {\n  let integer = '0';\n  let digits = '0';\n  let bigNumber = new BigNumber(balance)\n  const { below } = useViewport()\n\n\n  if (bigNumber.gt(new BigNumber(0))) {\n    // if (bigNumber.gte(1000000)) {\n    //   let str = (bigNumber.div(1000000)).toLocaleString()\n    //   const split = str.split('.');\n    //   integer = split[0]\n    //   digits = split.length > 1 ? str.split('.')[1] : '0';\n    //   digits = digits.length > 2 ? digits.substr(0, 2) : digits\n    //   digits += 'M'\n\n    // } else {\n    let str = bigNumber.toFormat()\n    const split = str.split('.');\n    integer = split[0];\n    digits = split.length > 1 ? str.split('.')[1] : '0';\n    digits = digits.length > 2 ? digits.substr(0, 2) : digits\n    // }\n\n  }\n  const fontSize = size || (below('medium') ? \"30px\" : \"50px\")\n\n  if (type === \"block\") {\n    return (\n      <>\n        <Row>\n          <Col md={12} style={{ fontSize: 14, fontWeight: 500, color: colors.title }}>{asset}</Col>\n          <Col md={12} style={{ fontWeight: 700 }}>\n            <LinearText text={`${integer}.${digits}`} size={fontSize} />\n            {suffix === \"\" ? '' : <span style={{ fontSize: 14 }}> {suffix}</span>}\n          </Col>\n        </Row>\n      </>\n    )\n  }\n  if (type === \"row\") {\n    return (\n      <>\n        <Row style={{ padding: 15 }} align=\"center\">\n          <Col xs={12} md={6} style={{ padding: 0, fontSize: 16, fontWeight: 500, textAlign: \"left\" }}>{asset}</Col>\n          <Col xs={12} md={6} style={{ padding: 0, textAlign: \"right\", fontWeight: 700 }}>\n            <LinearText text={`${integer}.${digits}`} size={integer.length > 8 ? \"30px\" : fontSize} />\n            {suffix === \"\" ? '' : <span style={{ fontSize: 14 }}> {suffix}</span>}\n          </Col>\n        </Row>\n      </>\n    )\n  }\n  return (\n    <>\n      <div style={{ fontSize: 14, fontWeight: 500, color: colors.title }}>{asset}</div>\n      <div style={{ fontWeight: 700 }}>\n        <LinearText text={`${integer}.${digits}`} size={fontSize} />\n        {suffix === \"\" ? '' : <span style={{ fontSize: 14 }}> {suffix}</span>}\n      </div>\n    </>\n  );\n}\n\nexport default BalanceBlock;\n"]},"metadata":{},"sourceType":"module"}