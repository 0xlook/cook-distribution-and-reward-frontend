{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/cook-frontend/src/components/PoolList/ListTable.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { getStakeLockupDuration, getRewardPerBlock, getTotalStaked } from '../../utils/infura';\nimport { Table, TableRow, TableCell, Text, useViewport, useTheme } from '@aragon/ui';\nimport { POOLS } from \"../../constants/contracts\";\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { COOK, UNI } from \"../../constants/tokens\";\nimport BigNumber from 'bignumber.js';\nimport colors from '../../constants/colors';\n\nfunction ListTable({\n  pools,\n  selectedPool,\n  setSelectedPool\n}) {\n  const {\n    within,\n    below,\n    above\n  } = useViewport();\n  const [poolList, setPoolList] = useState([]);\n  const [totalStaked, setTotalStaked] = useState(new BigNumber(0));\n  const [openMobileModal, setOpenMobileModal] = useState(false);\n  const [hovered, setHovered] = useState('');\n  const theme = useTheme();\n  useEffect(() => {\n    let isCancelled = false; // setPoolList([{name:\"4 UNI-V2 (WETH/COOK)\", address:\"0xf4B146FbA71F41E0592668ffbF264F1D186b2Ca8\",lockedUpPeriod:\"90 days\",rewardPerBlock:\"300\"}]);\n\n    async function updatePoolInfo() {\n      const poolList = await Promise.all(POOLS.map(async pool => {\n        const [lockedup, reward] = await Promise.all([getStakeLockupDuration(pool.address), getRewardPerBlock(pool.address)]);\n        const poolRewardPerBlock = toTokenUnitsBN(reward, COOK.decimals);\n        return {\n          name: pool.name,\n          address: pool.address,\n          lockedUpPeriod: lockedup,\n          rewardPerBlock: poolRewardPerBlock\n        };\n      }));\n      const totalStakedBalance = await POOLS.reduce(async (sum, pool) => {\n        const staked = await getTotalStaked(pool.address);\n        return (await sum).plus(staked);\n      }, Promise.resolve(new BigNumber(0)));\n      const totalStaked = toTokenUnitsBN(totalStakedBalance, UNI.decimals);\n\n      if (!isCancelled) {\n        setPoolList(poolList);\n        setTotalStaked(totalStaked);\n      }\n    }\n\n    updatePoolInfo();\n    const id = setInterval(updatePoolInfo, 15000); // eslint-disable-next-line consistent-return\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [pools, selectedPool, setSelectedPool]);\n  const width = below('small') ? '100%' : '85%';\n  const padding = below(1400) ? '10pt 7pt' : '35pt 20pt';\n  return /*#__PURE__*/React.createElement(Table, {\n    style: {\n      fontSize: below('medium') ? 12 : 16,\n      width,\n      margin: \"0 auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      padding\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, \"LP TOKEN\")), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      padding\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, \"LOCK-UP \", below('medium') && /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 53\n    }\n  }), \" PERIOD\")), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      padding\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, \"APY\")), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      padding\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, \"COOK/BLOCK\"))), poolList.map(pool => {\n    const selectedColor = selectedPool === pool.address ? theme.surfaceSelected : theme.surface;\n    let textColor = selectedPool == pool.address ? colors.yellow : hovered == pool.address ? colors.help : '#ffffff';\n    return /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        color: textColor,\n        cursor: hovered == pool.address ? 'pointer' : 'auto'\n      },\n      onMouseEnter: () => {\n        setHovered(pool.address);\n      },\n      onMouseLeave: () => {\n        setHovered('');\n      },\n      key: pool.address,\n      onClick: () => {\n        setSelectedPool(pool.address); // setOpenMobileModal(true)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        backgroundColor: selectedColor,\n        padding\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }\n    }, pool.name)), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        backgroundColor: selectedColor,\n        padding\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 23\n      }\n    }, pool.lockedUpPeriod, \" days lock up\")), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        backgroundColor: selectedColor,\n        padding\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 23\n      }\n    }, \"TO BE CALCULATED\")), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        backgroundColor: selectedColor,\n        padding\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 23\n      }\n    }, pool.rewardPerBlock.toString())));\n  }));\n}\n\nexport default ListTable;","map":{"version":3,"sources":["/Users/huanwen/Work/cook-frontend/src/components/PoolList/ListTable.tsx"],"names":["React","useState","useEffect","getStakeLockupDuration","getRewardPerBlock","getTotalStaked","Table","TableRow","TableCell","Text","useViewport","useTheme","POOLS","toTokenUnitsBN","COOK","UNI","BigNumber","colors","ListTable","pools","selectedPool","setSelectedPool","within","below","above","poolList","setPoolList","totalStaked","setTotalStaked","openMobileModal","setOpenMobileModal","hovered","setHovered","theme","isCancelled","updatePoolInfo","Promise","all","map","pool","lockedup","reward","address","poolRewardPerBlock","decimals","name","lockedUpPeriod","rewardPerBlock","totalStakedBalance","reduce","sum","staked","plus","resolve","id","setInterval","clearInterval","width","padding","fontSize","margin","fontWeight","selectedColor","surfaceSelected","surface","textColor","yellow","help","color","cursor","backgroundColor","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  getStakeLockupDuration,\n  getRewardPerBlock,\n  getTotalStaked\n} from '../../utils/infura';\nimport {\n  Table, TableRow, TableCell, Text, useViewport, useTheme, Modal\n} from '@aragon/ui';\nimport { POOLS } from \"../../constants/contracts\";\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { COOK,UNI } from \"../../constants/tokens\";\nimport Pool from \"../Pool\";\nimport BigNumber from 'bignumber.js';\nimport colors from '../../constants/colors';\nimport { Container, Row, Col, Visible, Hidden } from 'react-grid-system';\n\ntype PoolProps = {\n  pool:string,lockedUp:number,reward:BigNumber,staked:BigNumber,totalStaked:BigNumber\n};\n\nfunction ListTable({ pools, selectedPool, setSelectedPool }: {pools: Array<PoolProps>, selectedPool:string, setSelectedPool:Function }) {\n\n  const { within, below, above } = useViewport()\n  const [poolList, setPoolList] = useState([] as any);\n  const [totalStaked, setTotalStaked] = useState(new BigNumber(0));\n  const [openMobileModal, setOpenMobileModal] = useState(false)\n  const [hovered, setHovered] = useState('');\n  const theme = useTheme()\n  useEffect(() => {\n    let isCancelled = false;\n    // setPoolList([{name:\"4 UNI-V2 (WETH/COOK)\", address:\"0xf4B146FbA71F41E0592668ffbF264F1D186b2Ca8\",lockedUpPeriod:\"90 days\",rewardPerBlock:\"300\"}]);\n    async function updatePoolInfo() {\n      const poolList = await Promise.all(POOLS.map( async (pool)=>{\n        const [lockedup,reward] =\n        await Promise.all([\n            getStakeLockupDuration(pool.address),\n            getRewardPerBlock(pool.address)\n          ])\n        const poolRewardPerBlock = toTokenUnitsBN(reward, COOK.decimals);\n        return({\n          name: pool.name,\n          address: pool.address,\n          lockedUpPeriod: lockedup,\n          rewardPerBlock: poolRewardPerBlock\n        });\n      }));\n\n      const totalStakedBalance = await POOLS.reduce(async (sum, pool) => {\n        const staked = await getTotalStaked(pool.address);\n        return (await sum).plus(staked);\n      }, Promise.resolve(new BigNumber(0)));\n\n      const totalStaked = toTokenUnitsBN(totalStakedBalance, UNI.decimals);\n\n      if (!isCancelled) {\n        setPoolList(poolList);\n        setTotalStaked(totalStaked);\n      }\n    }\n    updatePoolInfo();\n\n    const id = setInterval(updatePoolInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [pools, selectedPool, setSelectedPool]);\n  const width= below('small')?'100%': '85%'\n  const padding =below(1400)?'10pt 7pt': '35pt 20pt'\n  return (\n      <Table style={{fontSize:below('medium')?12:16, width, margin:\"0 auto\"}}>\n              <TableRow style={{fontWeight:\"bold\"}}>\n                <TableCell style={{ padding}}>\n                  <Text >LP TOKEN</Text>\n                </TableCell>\n                <TableCell style={{ padding}}>\n                  <Text>LOCK-UP {below('medium') && <br/>} PERIOD</Text>\n                </TableCell >\n                <TableCell style={{ padding}}>\n                  <Text>APY</Text>\n                </TableCell>\n                <TableCell style={{ padding}}>\n                  <Text>COOK/BLOCK</Text>\n                </TableCell>\n              </TableRow>\n              {poolList.map(pool => {\n                const selectedColor = selectedPool === pool.address ?theme.surfaceSelected:theme.surface\n                let textColor = (selectedPool == pool.address)? colors.yellow: (hovered == pool.address?colors.help:'#ffffff');\n                return(\n                  <TableRow\n                    style={{color:textColor,cursor:hovered == pool.address?'pointer':'auto'}}\n                    onMouseEnter={()=>{\n                      setHovered(pool.address);\n                    }}\n                    onMouseLeave={()=>{\n                      setHovered('');\n                    }}\n                    key={pool.address}\n                    onClick={() => {\n                      setSelectedPool(pool.address)\n                      // setOpenMobileModal(true)\n                    }}\n                  >\n                    <TableCell style={{backgroundColor:selectedColor, padding}}>\n                      <Text>{pool.name}</Text>\n                    </TableCell>\n                    <TableCell style={{backgroundColor:selectedColor, padding}}>\n                      <Text>{pool.lockedUpPeriod} days lock up</Text>\n                    </TableCell>\n                    <TableCell style={{backgroundColor:selectedColor, padding}}>\n                      <Text>TO BE CALCULATED</Text>\n                    </TableCell>\n                    <TableCell style={{backgroundColor:selectedColor, padding}}>\n                      <Text>{pool.rewardPerBlock.toString()}</Text>\n                    </TableCell>\n                  </TableRow>\n                )\n              })}\n          </Table>\n\n  );\n}\n\nexport default ListTable;\n"]},"metadata":{},"sourceType":"module"}