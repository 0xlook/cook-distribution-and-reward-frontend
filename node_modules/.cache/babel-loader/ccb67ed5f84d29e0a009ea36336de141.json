{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/Cook/cook-frontend/src/components/PoolList/ListTable.tsx\";\nimport React, { useState } from 'react';\nimport { Table, TableRow, TableCell, Text, useViewport, useTheme } from '@aragon/ui';\nimport colors from '../../constants/colors';\n\nfunction ListTable({\n  pools,\n  selectedPool,\n  setSelectedPool,\n  detailMode\n}) {\n  const {\n    below\n  } = useViewport();\n  const [hovered, setHovered] = useState('');\n  const theme = useTheme();\n  const width = below('small') ? '100%' : '85%';\n  const padding = below(1400) ? '10pt 7pt' : '25pt 15pt';\n  return /*#__PURE__*/React.createElement(Table, {\n    style: {\n      fontSize: below('medium') ? 12 : 16,\n      width,\n      margin: \"0 auto\",\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      padding\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }\n  }, \"LP TOKEN\")), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      padding\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  }, \"LOCK-UP \", below('medium') && /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 53\n    }\n  }), \" PERIOD\")), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      padding\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }\n  }, \"APY\")), detailMode && /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      padding\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }\n  }, \"COOK/BLOCK\"))), pools && pools.map(pool => {\n    const selectedColor = selectedPool === pool.address ? theme.surfaceSelected : theme.surface;\n    let textColor = selectedPool === pool.address ? colors.yellow : hovered === pool.address ? colors.help : '#ffffff';\n    return /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        color: textColor,\n        cursor: hovered === pool.address ? 'pointer' : 'auto'\n      },\n      onMouseEnter: () => {\n        setHovered(pool.address);\n      },\n      onMouseLeave: () => {\n        setHovered('');\n      },\n      key: pool.address,\n      onClick: () => {\n        setSelectedPool && setSelectedPool(pool.address);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        backgroundColor: selectedColor,\n        padding\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }\n    }, pool.name)), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        backgroundColor: selectedColor,\n        padding\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }\n    }, pool.lockedUpPeriod, \" days lock up\")), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        backgroundColor: selectedColor,\n        padding\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 23\n      }\n    }, \"TO BE CALCULATED\")), detailMode && /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        backgroundColor: selectedColor,\n        padding\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 23\n      }\n    }, pool.rewardPerBlock.toString())));\n  }));\n}\n\nexport default ListTable;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/PoolList/ListTable.tsx"],"names":["React","useState","Table","TableRow","TableCell","Text","useViewport","useTheme","colors","ListTable","pools","selectedPool","setSelectedPool","detailMode","below","hovered","setHovered","theme","width","padding","fontSize","margin","marginBottom","fontWeight","map","pool","selectedColor","address","surfaceSelected","surface","textColor","yellow","help","color","cursor","backgroundColor","name","lockedUpPeriod","rewardPerBlock","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,KADF,EACSC,QADT,EACmBC,SADnB,EAC8BC,IAD9B,EACoCC,WADpC,EACiDC,QADjD,QAEO,YAFP;AAIA,OAAOC,MAAP,MAAmB,wBAAnB;;AAIA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA,eAAvB;AAAwCC,EAAAA;AAAxC,CAAnB,EAA2K;AAEzK,QAAM;AAAEC,IAAAA;AAAF,MAAYR,WAAW,EAA7B;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMgB,KAAK,GAAGV,QAAQ,EAAtB;AAEA,QAAMW,KAAK,GAAEJ,KAAK,CAAC,OAAD,CAAL,GAAe,MAAf,GAAuB,KAApC;AACA,QAAMK,OAAO,GAAEL,KAAK,CAAC,IAAD,CAAL,GAAY,UAAZ,GAAwB,WAAvC;AACA,sBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACM,MAAAA,QAAQ,EAACN,KAAK,CAAC,QAAD,CAAL,GAAgB,EAAhB,GAAmB,EAA7B;AAAiCI,MAAAA,KAAjC;AAAwCG,MAAAA,MAAM,EAAC,QAA/C;AAAyDC,MAAAA,YAAY,EAAC;AAAtE,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEJ,MAAAA;AAAF,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,eAIE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEA,MAAAA;AAAF,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAeL,KAAK,CAAC,QAAD,CAAL,iBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlC,YADF,CAJF,eAOE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEK,MAAAA;AAAF,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAPF,EAUGN,UAAU,iBAAI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEM,MAAAA;AAAF,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACb,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADa,CAVjB,CADR,EAeST,KAAK,IAAIA,KAAK,CAACc,GAAN,CAAUC,IAAI,IAAI;AAC1B,UAAMC,aAAa,GAAGf,YAAY,KAAKc,IAAI,CAACE,OAAtB,GAA+BV,KAAK,CAACW,eAArC,GAAqDX,KAAK,CAACY,OAAjF;AACA,QAAIC,SAAS,GAAInB,YAAY,KAAKc,IAAI,CAACE,OAAvB,GAAiCnB,MAAM,CAACuB,MAAxC,GAAiDhB,OAAO,KAAKU,IAAI,CAACE,OAAjB,GAAyBnB,MAAM,CAACwB,IAAhC,GAAqC,SAAtG;AACA,wBACE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAACH,SAAP;AAAiBI,QAAAA,MAAM,EAACnB,OAAO,KAAKU,IAAI,CAACE,OAAjB,GAAyB,SAAzB,GAAmC;AAA3D,OADT;AAEE,MAAA,YAAY,EAAE,MAAI;AAChBX,QAAAA,UAAU,CAACS,IAAI,CAACE,OAAN,CAAV;AACD,OAJH;AAKE,MAAA,YAAY,EAAE,MAAI;AAChBX,QAAAA,UAAU,CAAC,EAAD,CAAV;AACD,OAPH;AAQE,MAAA,GAAG,EAAES,IAAI,CAACE,OARZ;AASE,MAAA,OAAO,EAAE,MAAM;AACbf,QAAAA,eAAe,IAAIA,eAAe,CAACa,IAAI,CAACE,OAAN,CAAlC;AACD,OAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAaE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACQ,QAAAA,eAAe,EAACT,aAAjB;AAAgCP,QAAAA;AAAhC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOM,IAAI,CAACW,IAAZ,CADF,CAbF,eAgBE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACD,QAAAA,eAAe,EAACT,aAAjB;AAAgCP,QAAAA;AAAhC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOM,IAAI,CAACY,cAAZ,kBADF,CAhBF,eAmBE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACF,QAAAA,eAAe,EAACT,aAAjB;AAAgCP,QAAAA;AAAhC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CAnBF,EAsBGN,UAAU,iBAAI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACsB,QAAAA,eAAe,EAACT,aAAjB;AAAgCP,QAAAA;AAAhC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACb,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOM,IAAI,CAACa,cAAL,CAAoBC,QAApB,EAAP,CADa,CAtBjB,CADF;AA6BD,GAhCS,CAflB,CADJ;AAoDD;;AAED,eAAe9B,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Table, TableRow, TableCell, Text, useViewport, useTheme\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport colors from '../../constants/colors';\n\ntype PoolProps = {name:string,address:string,rewardPerBlock:BigNumber,lockedUpPeriod:BigNumber};\n\nfunction ListTable({ pools, selectedPool, setSelectedPool, detailMode }: {pools?: Array<PoolProps>, selectedPool:string, setSelectedPool?:Function, detailMode?:boolean }) {\n\n  const { below } = useViewport()\n  const [hovered, setHovered] = useState('');\n  const theme = useTheme();\n\n  const width= below('small')?'100%': '85%'\n  const padding =below(1400)?'10pt 7pt': '25pt 15pt'\n  return (\n      <Table style={{fontSize:below('medium')?12:16, width, margin:\"0 auto\", marginBottom:20}}>\n              <TableRow style={{fontWeight:\"bold\"}}>\n                <TableCell style={{ padding}}>\n                  <Text >LP TOKEN</Text>\n                </TableCell>\n                <TableCell style={{ padding}}>\n                  <Text>LOCK-UP {below('medium') && <br/>} PERIOD</Text>\n                </TableCell >\n                <TableCell style={{ padding}}>\n                  <Text>APY</Text>\n                </TableCell>\n                {detailMode && <TableCell style={{ padding}}>\n                  <Text>COOK/BLOCK</Text>\n                </TableCell>}\n              </TableRow>\n              {pools && pools.map(pool => {\n                const selectedColor = selectedPool === pool.address ?theme.surfaceSelected:theme.surface\n                let textColor = (selectedPool === pool.address)? colors.yellow: (hovered === pool.address?colors.help:'#ffffff');\n                return(\n                  <TableRow\n                    style={{color:textColor,cursor:hovered === pool.address?'pointer':'auto'}}\n                    onMouseEnter={()=>{\n                      setHovered(pool.address);\n                    }}\n                    onMouseLeave={()=>{\n                      setHovered('');\n                    }}\n                    key={pool.address}\n                    onClick={() => {\n                      setSelectedPool && setSelectedPool(pool.address)\n                    }}\n                  >\n                    <TableCell style={{backgroundColor:selectedColor, padding}}>\n                      <Text>{pool.name}</Text>\n                    </TableCell>\n                    <TableCell style={{backgroundColor:selectedColor, padding}}>\n                      <Text>{pool.lockedUpPeriod} days lock up</Text>\n                    </TableCell>\n                    <TableCell style={{backgroundColor:selectedColor, padding}}>\n                      <Text>TO BE CALCULATED</Text>\n                    </TableCell>\n                    {detailMode && <TableCell style={{backgroundColor:selectedColor, padding}}>\n                      <Text>{pool.rewardPerBlock.toString()}</Text>\n                    </TableCell>}\n\n                  </TableRow>\n                )\n              })}\n          </Table>\n\n  );\n}\n\nexport default ListTable;\n"]},"metadata":{},"sourceType":"module"}