{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/cook-frontend/src/components/Distribution/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport BigNumber from 'bignumber.js';\nimport { getDistributionVestingAmount, getDistributionVestedAmount, getDistributionAvalibleAmount, getDistributionStartTimestamp, getTodayNumber, getTokenAllowance, getTokenBalance, getStakeLockupDuration, getRewardPerBlock, getTotalStaked, getPoolBalanceOfStaked } from '../../utils/infura';\nimport { getWithdrawRecords } from '../../utils/web3';\nimport { COOK, UNI, WETH } from \"../../constants/tokens\";\nimport { CookDistribution, POOLS } from \"../../constants/contracts\";\nimport { toTokenUnitsBN } from '../../utils/number';\nimport WithdrawPageHeader from \"./Header\";\nimport Withdraw from \"./Withdraw\";\nimport Zap from \"./Zap\";\n\nfunction Distribution({\n  user\n}) {\n  const {\n    override\n  } = useParams();\n\n  if (override) {\n    user = override;\n  }\n\n  const [userWETHBalance, setUserWETHBalance] = useState(new BigNumber(0));\n  const [userWETHAllowance, setUserWETHAllowance] = useState(new BigNumber(0));\n  const [pairBalanceCOOK, setPairBalanceCOOK] = useState(new BigNumber(0));\n  const [pairBalanceWETH, setPairBalanceWETH] = useState(new BigNumber(0));\n  const [userVestingBalance, setUserVestingBalance] = useState(new BigNumber(0));\n  const [userVestedBalance, setUserVestedBalance] = useState(new BigNumber(0));\n  const [userAvalibleBalance, setUserAvalibleBalance] = useState(new BigNumber(0));\n  const [startDay, setStartDay] = useState(new BigNumber(0));\n  const [today, setToday] = useState(new BigNumber(0));\n  const [withdrawRecords, setWithdrawRecords] = useState([]);\n  const [managedPools, setManagedPools] = useState([]); //Update User balances\n\n  useEffect(() => {\n    if (user === '') {\n      setUserVestingBalance(new BigNumber(0));\n      setUserVestedBalance(new BigNumber(0));\n      setUserAvalibleBalance(new BigNumber(0));\n      setPairBalanceCOOK(new BigNumber(0));\n      setPairBalanceWETH(new BigNumber(0));\n      setUserWETHBalance(new BigNumber(0));\n      setUserWETHAllowance(new BigNumber(0));\n      setStartDay(new BigNumber(0));\n      setToday(new BigNumber(0));\n      setWithdrawRecords([]);\n      setManagedPools([]);\n      return;\n    }\n\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [vestingBalance, vestedBalance, avalibleBalance, startTimeStamp, tDay, wRecords, pairBalanceCOOKStr, pairBalanceWETHStr, wethBalance, wethAllowance] = await Promise.all([getDistributionVestingAmount(CookDistribution, user), getDistributionVestedAmount(CookDistribution, user), getDistributionAvalibleAmount(CookDistribution, user), getDistributionStartTimestamp(CookDistribution), getTodayNumber(CookDistribution), getWithdrawRecords(CookDistribution), getTokenBalance(COOK.addr, UNI.addr), getTokenBalance(WETH.addr, UNI.addr), getTokenBalance(WETH.addr, user), getTokenAllowance(WETH.addr, user, CookDistribution)]);\n      const userVestingBalance = toTokenUnitsBN(vestingBalance, COOK.decimals);\n      const userVestedBalance = toTokenUnitsBN(vestedBalance, COOK.decimals);\n      const userAvalibleBalance = toTokenUnitsBN(avalibleBalance, COOK.decimals);\n      const startDay = new BigNumber(startTimeStamp).div(86400).decimalPlaces(0, 1);\n      const todayNumber = new BigNumber(tDay);\n      const withdrawRecords = wRecords;\n      const pairCOOKBalance = toTokenUnitsBN(pairBalanceCOOKStr, COOK.decimals);\n      const pairWETHBalance = toTokenUnitsBN(pairBalanceWETHStr, WETH.decimals);\n      const userWETHBalance = toTokenUnitsBN(wethBalance, WETH.decimals);\n      const poolList = await Promise.all(POOLS.map(async pool => {\n        const [lockedup, reward, staked, totalStaked] = await Promise.all([getStakeLockupDuration(pool.address), getRewardPerBlock(pool.address), getTotalStaked(pool.address), getPoolBalanceOfStaked(pool.address, user)]);\n        const totalStakedBalance = toTokenUnitsBN(totalStaked, UNI.decimals);\n        const userTotalStakedBalance = toTokenUnitsBN(staked, UNI.decimals);\n        const poolRewardPerBlock = toTokenUnitsBN(reward, COOK.decimals);\n        return {\n          pool: pool.address,\n          lockedUp: lockedup,\n          reward: poolRewardPerBlock,\n          staked: userTotalStakedBalance,\n          totalStaked: totalStakedBalance\n        };\n      }));\n\n      if (!isCancelled) {\n        setUserVestingBalance(new BigNumber(userVestingBalance));\n        setUserVestedBalance(new BigNumber(userVestedBalance));\n        setUserAvalibleBalance(new BigNumber(userAvalibleBalance));\n        setStartDay(new BigNumber(startDay));\n        setToday(new BigNumber(todayNumber));\n        setWithdrawRecords(withdrawRecords);\n        setPairBalanceCOOK(new BigNumber(pairCOOKBalance));\n        setPairBalanceWETH(new BigNumber(pairWETHBalance));\n        setUserWETHBalance(new BigNumber(userWETHBalance));\n        setManagedPools(poolList);\n        setUserWETHAllowance(new BigNumber(wethAllowance));\n      }\n    }\n\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 1000); // eslint-disable-next-line consistent-return\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontWeight: 'bold',\n      fontSize: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, \"Cook Protocol\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 30,\n      marginBottom: 50,\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, \"Mobri.........\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontWeight: 'bold',\n      fontSize: 35\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, \"Total Token 10,000,000 COOK\")), /*#__PURE__*/React.createElement(WithdrawPageHeader, {\n    accountVestingBalance: userVestingBalance,\n    accountAvalibleBalance: userAvalibleBalance,\n    accountVestedBalance: userVestedBalance,\n    todayNumber: today,\n    startDayNumber: startDay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Withdraw, {\n    user: user,\n    vestingAmount: userVestingBalance,\n    availableAmount: userAvalibleBalance,\n    records: withdrawRecords,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Zap, {\n    user: user,\n    pools: managedPools,\n    cookAvailable: userAvalibleBalance,\n    wethBalance: userWETHBalance,\n    wethAllowance: userWETHAllowance,\n    pairBalanceWETH: pairBalanceWETH,\n    pairBalanceCOOK: pairBalanceCOOK,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Distribution;","map":{"version":3,"sources":["/Users/huanwen/Work/cook-frontend/src/components/Distribution/index.tsx"],"names":["React","useState","useEffect","useParams","BigNumber","getDistributionVestingAmount","getDistributionVestedAmount","getDistributionAvalibleAmount","getDistributionStartTimestamp","getTodayNumber","getTokenAllowance","getTokenBalance","getStakeLockupDuration","getRewardPerBlock","getTotalStaked","getPoolBalanceOfStaked","getWithdrawRecords","COOK","UNI","WETH","CookDistribution","POOLS","toTokenUnitsBN","WithdrawPageHeader","Withdraw","Zap","Distribution","user","override","userWETHBalance","setUserWETHBalance","userWETHAllowance","setUserWETHAllowance","pairBalanceCOOK","setPairBalanceCOOK","pairBalanceWETH","setPairBalanceWETH","userVestingBalance","setUserVestingBalance","userVestedBalance","setUserVestedBalance","userAvalibleBalance","setUserAvalibleBalance","startDay","setStartDay","today","setToday","withdrawRecords","setWithdrawRecords","managedPools","setManagedPools","isCancelled","updateUserInfo","vestingBalance","vestedBalance","avalibleBalance","startTimeStamp","tDay","wRecords","pairBalanceCOOKStr","pairBalanceWETHStr","wethBalance","wethAllowance","Promise","all","addr","decimals","div","decimalPlaces","todayNumber","pairCOOKBalance","pairWETHBalance","poolList","map","pool","lockedup","reward","staked","totalStaked","address","totalStakedBalance","userTotalStakedBalance","poolRewardPerBlock","lockedUp","id","setInterval","clearInterval","textAlign","fontWeight","fontSize","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport BigNumber from 'bignumber.js';\nimport {getDistributionVestingAmount,\n        getDistributionVestedAmount,\n        getDistributionAvalibleAmount,\n        getDistributionStartTimestamp,\n        getTodayNumber,\n        getTokenAllowance,\n        getTokenBalance,\n        getStakeLockupDuration,\n        getRewardPerBlock,\n        getTotalStaked,\n        getPoolBalanceOfStaked} from '../../utils/infura';\nimport {getWithdrawRecords} from '../../utils/web3';\nimport {COOK, UNI, WETH} from \"../../constants/tokens\";\nimport {CookDistribution, POOLS} from \"../../constants/contracts\";\nimport { toTokenUnitsBN } from '../../utils/number';\nimport {\n  Header,Button\n} from '@aragon/ui';\nimport colors from '../../constants/colors';\nimport WithdrawPageHeader from \"./Header\";\nimport Withdraw from \"./Withdraw\";\nimport IconHeader from \"../common/IconHeader\";\nimport Zap from \"./Zap\";\nimport ActionButton from \"../common/ActionButton\";\n\nfunction Distribution({ user }: {user: string}) {\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n\n  const [userWETHBalance, setUserWETHBalance] = useState(new BigNumber(0));\n  const [userWETHAllowance, setUserWETHAllowance] = useState(new BigNumber(0));\n\n  const [pairBalanceCOOK, setPairBalanceCOOK] = useState(new BigNumber(0));\n  const [pairBalanceWETH, setPairBalanceWETH] = useState(new BigNumber(0));\n\n\n  const [userVestingBalance, setUserVestingBalance] = useState(new BigNumber(0));\n  const [userVestedBalance, setUserVestedBalance] = useState(new BigNumber(0));\n  const [userAvalibleBalance, setUserAvalibleBalance] = useState(new BigNumber(0));\n\n  const [startDay, setStartDay] = useState(new BigNumber(0));\n  const [today, setToday] = useState(new BigNumber(0));\n  const [withdrawRecords, setWithdrawRecords] = useState([]);\n  const [managedPools, setManagedPools] = useState([] as any);\n\n\n  //Update User balances\n  useEffect(() => {\n    if (user === '') {\n      setUserVestingBalance(new BigNumber(0));\n      setUserVestedBalance(new BigNumber(0));\n      setUserAvalibleBalance(new BigNumber(0));\n      setPairBalanceCOOK(new BigNumber(0));\n      setPairBalanceWETH(new BigNumber(0));\n      setUserWETHBalance(new BigNumber(0));\n      setUserWETHAllowance(new BigNumber(0));\n      setStartDay(new BigNumber(0));\n      setToday(new BigNumber(0));\n      setWithdrawRecords([]);\n      setManagedPools([]);\n      return;\n    }\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [vestingBalance,\n             vestedBalance,\n             avalibleBalance,\n             startTimeStamp,\n             tDay,\n             wRecords,\n             pairBalanceCOOKStr,\n             pairBalanceWETHStr,\n             wethBalance,\n             wethAllowance\n           ] = await Promise.all([\n        getDistributionVestingAmount(CookDistribution, user),\n        getDistributionVestedAmount(CookDistribution, user),\n        getDistributionAvalibleAmount(CookDistribution, user),\n        getDistributionStartTimestamp(CookDistribution),\n        getTodayNumber(CookDistribution),\n        getWithdrawRecords(CookDistribution),\n        getTokenBalance(COOK.addr, UNI.addr),\n        getTokenBalance(WETH.addr, UNI.addr),\n        getTokenBalance(WETH.addr, user),\n        getTokenAllowance(WETH.addr, user, CookDistribution)\n      ]);\n\n      const userVestingBalance = toTokenUnitsBN(vestingBalance, COOK.decimals);\n      const userVestedBalance = toTokenUnitsBN(vestedBalance, COOK.decimals);\n      const userAvalibleBalance = toTokenUnitsBN(avalibleBalance, COOK.decimals);\n      const startDay = new BigNumber(startTimeStamp).div(86400).decimalPlaces(0, 1);\n      const todayNumber = new BigNumber(tDay);\n      const withdrawRecords = wRecords;\n\n      const pairCOOKBalance = toTokenUnitsBN(pairBalanceCOOKStr, COOK.decimals);\n      const pairWETHBalance = toTokenUnitsBN(pairBalanceWETHStr, WETH.decimals);\n      const userWETHBalance = toTokenUnitsBN(wethBalance, WETH.decimals);\n\n\n      const poolList = await Promise.all(POOLS.map( async (pool)=>{\n        const [lockedup,reward,staked,totalStaked] =\n        await Promise.all([\n            getStakeLockupDuration(pool.address),\n            getRewardPerBlock(pool.address),\n            getTotalStaked(pool.address),\n            getPoolBalanceOfStaked(pool.address,user)\n          ])\n\n        const totalStakedBalance = toTokenUnitsBN(totalStaked, UNI.decimals);\n        const userTotalStakedBalance = toTokenUnitsBN(staked, UNI.decimals);\n        const poolRewardPerBlock = toTokenUnitsBN(reward, COOK.decimals);\n\n\n        return({pool:pool.address,lockedUp:lockedup,reward:poolRewardPerBlock,staked:userTotalStakedBalance,totalStaked:totalStakedBalance})\n      }))\n\n      if (!isCancelled) {\n        setUserVestingBalance(new BigNumber(userVestingBalance));\n        setUserVestedBalance(new BigNumber(userVestedBalance));\n        setUserAvalibleBalance(new BigNumber(userAvalibleBalance));\n        setStartDay(new BigNumber(startDay));\n        setToday(new BigNumber(todayNumber));\n        setWithdrawRecords(withdrawRecords);\n\n        setPairBalanceCOOK(new BigNumber(pairCOOKBalance));\n        setPairBalanceWETH(new BigNumber(pairWETHBalance));\n        setUserWETHBalance(new BigNumber(userWETHBalance));\n        setManagedPools(poolList)\n        setUserWETHAllowance(new BigNumber(wethAllowance));\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 1000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n\n  return (\n    <>\n      <div style={{textAlign:\"center\"}}>\n      <div style={{fontWeight:'bold', fontSize:40}}>Cook Protocol</div>\n      <div style={{marginTop:30, marginBottom:50,fontSize:20}}>{\"Mobri.........\"}</div>\n      <div style={{fontWeight:'bold', fontSize:35}}>Total Token 10,000,000 COOK</div>\n      </div>\n      <WithdrawPageHeader\n        accountVestingBalance={userVestingBalance}\n        accountAvalibleBalance={userAvalibleBalance}\n        accountVestedBalance={userVestedBalance}\n        todayNumber={today}\n        startDayNumber={startDay}\n      />\n\n      <Withdraw\n        user={user}\n        vestingAmount={userVestingBalance}\n        availableAmount={userAvalibleBalance}\n        records={withdrawRecords}\n      />\n\n\n      <Zap\n        user={user}\n        pools={managedPools}\n        cookAvailable={userAvalibleBalance}\n        wethBalance={userWETHBalance}\n        wethAllowance={userWETHAllowance}\n        pairBalanceWETH={pairBalanceWETH}\n        pairBalanceCOOK={pairBalanceCOOK}\n      />\n    </>\n  );\n}\n\nexport default Distribution;\n"]},"metadata":{},"sourceType":"module"}