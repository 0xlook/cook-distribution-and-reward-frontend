{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/cook-frontend/src/components/Distribution/Withdraw.tsx\";\nimport React, { useState } from 'react';\nimport { Box, Table, TableHeader, TableRow, TableCell, Text } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { BalanceBlock, MaxButton } from '../common/index';\nimport { withdraw } from '../../utils/web3';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { COOK } from \"../../constants/tokens\";\nimport { CookDistribution } from \"../../constants/contracts\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport colors from '../../constants/colors';\nimport ActionButton from \"../common/ActionButton\";\n\nfunction Withdraw({\n  user,\n  vestingAmount,\n  availableAmount,\n  records\n}) {\n  const [withdrawAmount, setWithdrawAmount] = useState(new BigNumber(0));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    heading: \"Claim\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '40%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BalanceBlock, {\n    asset: \"Total Available\",\n    balance: availableAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '60%',\n      paddingTop: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '60%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(BigNumberInput, {\n    adornment: \"COOK\",\n    value: withdrawAmount,\n    setter: setWithdrawAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(MaxButton, {\n    onClick: () => {\n      setWithdrawAmount(availableAmount);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '40%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    label: \"CLAIM\",\n    color: colors.button,\n    onClick: () => {\n      withdraw(CookDistribution, toBaseUnitBN(withdrawAmount, COOK.decimals));\n    },\n    disabled: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })))))), records.length > 0 ? /*#__PURE__*/React.createElement(Table, {\n    header: /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHeader, {\n      title: \"Withdraw records\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"hash\")), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"amount\"))), records.map(record => {\n    let tokenAmount = toTokenUnitsBN(record.returnValues.amount, COOK.decimals);\n    return /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, record.transactionHash)), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, tokenAmount.toString())));\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null));\n}\n\nexport default Withdraw;","map":{"version":3,"sources":["/Users/huanwen/Work/cook-frontend/src/components/Distribution/Withdraw.tsx"],"names":["React","useState","Box","Table","TableHeader","TableRow","TableCell","Text","BigNumber","BalanceBlock","MaxButton","withdraw","toBaseUnitBN","toTokenUnitsBN","COOK","CookDistribution","BigNumberInput","colors","ActionButton","Withdraw","user","vestingAmount","availableAmount","records","withdrawAmount","setWithdrawAmount","marginBottom","display","width","paddingTop","button","decimals","length","map","record","tokenAmount","returnValues","amount","transactionHash","toString"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box, Button, IconCircleMinus, Table, TableHeader, TableRow, TableCell, Text\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock, MaxButton\n} from '../common/index';\nimport {withdraw} from '../../utils/web3';\nimport {toBaseUnitBN,toTokenUnitsBN} from '../../utils/number';\nimport {COOK} from \"../../constants/tokens\";\nimport {CookDistribution} from \"../../constants/contracts\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport colors from '../../constants/colors';\nimport ActionButton from \"../common/ActionButton\";\n\ntype WithdrawProps = {\n  user: string\n  vestingAmount: BigNumber,\n  availableAmount: BigNumber,\n  records: Array<{transactionHash: string; returnValues:{amount:string}}>\n};\n\nfunction Withdraw({\n  user, vestingAmount, availableAmount, records\n}: WithdrawProps) {\n  const [withdrawAmount, setWithdrawAmount] = useState(new BigNumber(0));\n\n  return (\n    <div style={{marginBottom:50}}>\n    <Box heading=\"Claim\">\n        <div style={{display: 'flex'}}>\n          <div style={{width: '40%'}}>\n            <BalanceBlock asset=\"Total Available\" balance={availableAmount}/>\n          </div>\n\n          <div style={{width: '60%', paddingTop: '2%'}}>\n            <div style={{display: 'flex'}}>\n              <div style={{width: '60%'}}>\n                  <BigNumberInput\n                    adornment=\"COOK\"\n                    value={withdrawAmount}\n                    setter={setWithdrawAmount}\n                  />\n                  <MaxButton\n                    onClick={() => {\n                      setWithdrawAmount(availableAmount);\n                    }}\n                  />\n              </div>\n              <div style={{width: '40%'}}>\n                <ActionButton label={\"CLAIM\"} color={colors.button} onClick={()=>{\n                  withdraw(\n                    CookDistribution,\n                    toBaseUnitBN(withdrawAmount, COOK.decimals),\n                  );\n                }} disabled={false}/>\n              </div>\n            </div>\n          </div>\n\n\n        </div>\n    </Box>\n    {records.length > 0?\n      <Table\n      header={\n        <TableRow>\n          <TableHeader title=\"Withdraw records\" />\n        </TableRow>\n      }>\n      <TableRow>\n        <TableCell>\n          <Text>hash</Text>\n        </TableCell>\n        <TableCell>\n          <Text>amount</Text>\n        </TableCell>\n      </TableRow>\n      {records.map(record => {\n        let tokenAmount:BigNumber = toTokenUnitsBN(record.returnValues.amount,COOK.decimals);\n        return(\n          <TableRow>\n            <TableCell>\n              <Text>{record.transactionHash}</Text>\n            </TableCell>\n            <TableCell>\n              <Text>{tokenAmount.toString()}</Text>\n            </TableCell>\n          </TableRow>\n        )\n      })}\n    </Table>:<></>\n    }\n    </div>\n  );\n}\n\nexport default Withdraw;\n"]},"metadata":{},"sourceType":"module"}