{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/cook-frontend/src/components/PoolList/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getStakeLockupDuration, getRewardPerBlock, getTotalStaked } from '../../utils/infura';\nimport { Table, TableRow, TableCell, Text } from '@aragon/ui';\nimport { POOLS } from \"../../constants/contracts\";\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { COOK, UNI } from \"../../constants/tokens\";\nimport Pool from \"../Pool\";\nimport BigNumber from 'bignumber.js';\n\nfunction PoolList({\n  user\n}) {\n  const {\n    override\n  } = useParams();\n\n  if (override) {\n    user = override;\n  }\n\n  const [poolList, setPoolList] = useState([]);\n  const [selectedPool, setSelectedPool] = useState('');\n  const [totalStaked, setTotalStaked] = useState(new BigNumber(0));\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updatePoolInfo() {\n      const poolList = await Promise.all(POOLS.map(async pool => {\n        const [lockedup, reward] = await Promise.all([getStakeLockupDuration(pool.address), getRewardPerBlock(pool.address)]);\n        const poolRewardPerBlock = toTokenUnitsBN(reward, COOK.decimals);\n        return {\n          name: pool.name,\n          address: pool.address,\n          lockedUpPeriod: lockedup,\n          rewardPerBlock: poolRewardPerBlock\n        };\n      }));\n      const totalStakedBalance = await POOLS.reduce(async (sum, pool) => {\n        const staked = await getTotalStaked(pool.address);\n        return (await sum).plus(staked);\n      }, Promise.resolve(new BigNumber(0)));\n      const totalStaked = toTokenUnitsBN(totalStakedBalance, UNI.decimals);\n\n      if (!isCancelled) {\n        setPoolList(poolList);\n        setTotalStaked(totalStaked);\n      }\n    }\n\n    updatePoolInfo();\n    const id = setInterval(updatePoolInfo, 15000); // eslint-disable-next-line consistent-return\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Total Staked\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: 50,\n      fontSize: 40,\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, totalStaked.toString(), \" UNI-V2\")), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"LP TOKEN\")), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"LOCK-UP PERIOD\")), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"APY\")), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"COOK/BLOCK\"))), poolList.map(pool => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: pool.address,\n      onClick: () => {\n        setSelectedPool(pool.address);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, pool.name)), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, pool.lockedUpPeriod, \" days lock up\")), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"TO BE CALCULATED\")), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, pool.rewardPerBlock.toString(), \" COOK/BLOCK\")));\n  })), selectedPool === '' ? '' : /*#__PURE__*/React.createElement(Pool, {\n    user: user,\n    poolAddress: selectedPool,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default PoolList;","map":{"version":3,"sources":["/Users/huanwen/Work/cook-frontend/src/components/PoolList/index.tsx"],"names":["React","useState","useEffect","useParams","getStakeLockupDuration","getRewardPerBlock","getTotalStaked","Table","TableRow","TableCell","Text","POOLS","toTokenUnitsBN","COOK","UNI","Pool","BigNumber","PoolList","user","override","poolList","setPoolList","selectedPool","setSelectedPool","totalStaked","setTotalStaked","isCancelled","updatePoolInfo","Promise","all","map","pool","lockedup","reward","address","poolRewardPerBlock","decimals","name","lockedUpPeriod","rewardPerBlock","totalStakedBalance","reduce","sum","staked","plus","resolve","id","setInterval","clearInterval","textAlign","fontSize","marginBottom","fontWeight","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  getStakeLockupDuration,\n  getRewardPerBlock,\n  getTotalStaked\n} from '../../utils/infura';\nimport {\n  Table, TableRow, TableCell, Text\n} from '@aragon/ui';\nimport { POOLS } from \"../../constants/contracts\";\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { COOK,UNI } from \"../../constants/tokens\";\nimport Pool from \"../Pool\";\nimport BigNumber from 'bignumber.js';\n\nfunction PoolList({ user }: {user: string}) {\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n\n  const [poolList, setPoolList] = useState([] as any);\n  const [selectedPool, setSelectedPool] = useState('');\n  const [totalStaked, setTotalStaked] = useState(new BigNumber(0));\n\n  useEffect(() => {\n    let isCancelled = false;\n    \n    async function updatePoolInfo() {\n      const poolList = await Promise.all(POOLS.map( async (pool)=>{\n        const [lockedup,reward] =\n        await Promise.all([\n            getStakeLockupDuration(pool.address),\n            getRewardPerBlock(pool.address)\n          ])\n        const poolRewardPerBlock = toTokenUnitsBN(reward, COOK.decimals);\n        return({\n          name: pool.name,\n          address: pool.address,\n          lockedUpPeriod: lockedup,\n          rewardPerBlock: poolRewardPerBlock\n        });\n      }));\n\n      const totalStakedBalance = await POOLS.reduce(async (sum, pool) => {\n        const staked = await getTotalStaked(pool.address);\n        return (await sum).plus(staked);\n      }, Promise.resolve(new BigNumber(0)));\n\n      const totalStaked = toTokenUnitsBN(totalStakedBalance, UNI.decimals);\n\n      if (!isCancelled) {\n        setPoolList(poolList);\n        setTotalStaked(totalStaked);\n      }\n    }\n    updatePoolInfo();\n\n    const id = setInterval(updatePoolInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n\n  return (\n    <>\n      <div style={{textAlign:\"center\"}}>\n        <div style={{fontSize:40}}>Total Staked</div>\n        <div style={{ marginBottom:50,fontSize:40, fontWeight:'bold'}}>{totalStaked.toString()} UNI-V2</div>\n      </div>\n      <Table>\n        <TableRow>\n          <TableCell>\n            <Text>LP TOKEN</Text>\n          </TableCell>\n          <TableCell>\n            <Text>LOCK-UP PERIOD</Text>\n          </TableCell>\n          <TableCell>\n            <Text>APY</Text>\n          </TableCell>\n          <TableCell>\n            <Text>COOK/BLOCK</Text>\n          </TableCell>\n        </TableRow>\n        {poolList.map(pool => {\n          return(\n            <TableRow\n              key={pool.address}\n              onClick={() => {\n                setSelectedPool(pool.address)\n              }}\n            >\n              <TableCell>\n                <Text>{pool.name}</Text>\n              </TableCell>\n              <TableCell>\n                <Text>{pool.lockedUpPeriod} days lock up</Text>\n              </TableCell>\n              <TableCell>\n                <Text>TO BE CALCULATED</Text>\n              </TableCell>\n              <TableCell>\n                <Text>{pool.rewardPerBlock.toString()} COOK/BLOCK</Text>\n              </TableCell>\n            </TableRow>\n          )\n        })}\n    </Table>\n    {selectedPool === '' ? '' :\n      <Pool user={user} poolAddress={selectedPool}/>\n    }\n    </>\n  );\n}\n\nexport default PoolList;\n"]},"metadata":{},"sourceType":"module"}