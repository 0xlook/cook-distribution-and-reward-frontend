{"ast":null,"code":"import _slicedToArray from\"/Users/huanwen/Work/Cook/cook-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Table,TableRow,TableCell,Text,useViewport,useTheme}from'@aragon/ui';import colors from'../../constants/colors';function ListTable(_ref){var pools=_ref.pools,selectedPool=_ref.selectedPool,setSelectedPool=_ref.setSelectedPool,detailMode=_ref.detailMode;var _useViewport=useViewport(),below=_useViewport.below;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),hovered=_useState2[0],setHovered=_useState2[1];var theme=useTheme();var width=below('small')?'100%':'85%';var padding=below(1400)?'10pt 7pt':'25pt 15pt';return/*#__PURE__*/React.createElement(Table,{style:{fontSize:below('medium')?12:16,width:width,margin:\"0 auto\",marginBottom:20}},/*#__PURE__*/React.createElement(TableRow,{style:{fontWeight:\"bold\"}},/*#__PURE__*/React.createElement(TableCell,{style:{padding:padding}},/*#__PURE__*/React.createElement(Text,null,\"LP TOKEN\")),/*#__PURE__*/React.createElement(TableCell,{style:{padding:padding}},/*#__PURE__*/React.createElement(Text,null,\"LOCK-UP \",below('medium')&&/*#__PURE__*/React.createElement(\"br\",null),\" PERIOD\")),/*#__PURE__*/React.createElement(TableCell,{style:{padding:padding}},/*#__PURE__*/React.createElement(Text,null,\"APY\")),detailMode&&/*#__PURE__*/React.createElement(TableCell,{style:{padding:padding}},/*#__PURE__*/React.createElement(Text,null,\"COOK/BLOCK\"))),pools&&pools.map(function(pool){var selectedColor=selectedPool===pool.address?theme.surfaceSelected:theme.surface;var textColor=selectedPool===pool.address?colors.yellow:hovered===pool.address?colors.help:'#ffffff';return/*#__PURE__*/React.createElement(TableRow,{style:{color:textColor,cursor:hovered===pool.address?'pointer':'auto'},onMouseEnter:function onMouseEnter(){setHovered(pool.address);},onMouseLeave:function onMouseLeave(){setHovered('');},key:pool.address,onClick:function onClick(){setSelectedPool&&setSelectedPool(pool.address);}},/*#__PURE__*/React.createElement(TableCell,{style:{backgroundColor:selectedColor,padding:padding}},/*#__PURE__*/React.createElement(Text,null,pool.name)),/*#__PURE__*/React.createElement(TableCell,{style:{backgroundColor:selectedColor,padding:padding}},/*#__PURE__*/React.createElement(Text,null,pool.lockedUpPeriod,\" days lock up\")),/*#__PURE__*/React.createElement(TableCell,{style:{backgroundColor:selectedColor,padding:padding}},/*#__PURE__*/React.createElement(Text,null,\"TO BE CALCULATED\")),detailMode&&/*#__PURE__*/React.createElement(TableCell,{style:{backgroundColor:selectedColor,padding:padding}},/*#__PURE__*/React.createElement(Text,null,pool.rewardPerBlock.toString())));}));}export default ListTable;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/PoolList/ListTable.tsx"],"names":["React","useState","Table","TableRow","TableCell","Text","useViewport","useTheme","colors","ListTable","pools","selectedPool","setSelectedPool","detailMode","below","hovered","setHovered","theme","width","padding","fontSize","margin","marginBottom","fontWeight","map","pool","selectedColor","address","surfaceSelected","surface","textColor","yellow","help","color","cursor","backgroundColor","name","lockedUpPeriod","rewardPerBlock","toString"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Table, TableRow, TableCell, Text, useViewport, useTheme\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport colors from '../../constants/colors';\n\ntype PoolProps = {name:string,address:string,rewardPerBlock:BigNumber,lockedUpPeriod:BigNumber};\n\nfunction ListTable({ pools, selectedPool, setSelectedPool, detailMode }: {pools?: Array<PoolProps>, selectedPool:string, setSelectedPool?:Function, detailMode?:boolean }) {\n\n  const { below } = useViewport()\n  const [hovered, setHovered] = useState('');\n  const theme = useTheme();\n\n  const width= below('small')?'100%': '85%'\n  const padding =below(1400)?'10pt 7pt': '25pt 15pt'\n  return (\n      <Table style={{fontSize:below('medium')?12:16, width, margin:\"0 auto\", marginBottom:20}}>\n              <TableRow style={{fontWeight:\"bold\"}}>\n                <TableCell style={{ padding}}>\n                  <Text >LP TOKEN</Text>\n                </TableCell>\n                <TableCell style={{ padding}}>\n                  <Text>LOCK-UP {below('medium') && <br/>} PERIOD</Text>\n                </TableCell >\n                <TableCell style={{ padding}}>\n                  <Text>APY</Text>\n                </TableCell>\n                {detailMode && <TableCell style={{ padding}}>\n                  <Text>COOK/BLOCK</Text>\n                </TableCell>}\n              </TableRow>\n              {pools && pools.map(pool => {\n                const selectedColor = selectedPool === pool.address ?theme.surfaceSelected:theme.surface\n                let textColor = (selectedPool === pool.address)? colors.yellow: (hovered === pool.address?colors.help:'#ffffff');\n                return(\n                  <TableRow\n                    style={{color:textColor,cursor:hovered === pool.address?'pointer':'auto'}}\n                    onMouseEnter={()=>{\n                      setHovered(pool.address);\n                    }}\n                    onMouseLeave={()=>{\n                      setHovered('');\n                    }}\n                    key={pool.address}\n                    onClick={() => {\n                      setSelectedPool && setSelectedPool(pool.address)\n                    }}\n                  >\n                    <TableCell style={{backgroundColor:selectedColor, padding}}>\n                      <Text>{pool.name}</Text>\n                    </TableCell>\n                    <TableCell style={{backgroundColor:selectedColor, padding}}>\n                      <Text>{pool.lockedUpPeriod} days lock up</Text>\n                    </TableCell>\n                    <TableCell style={{backgroundColor:selectedColor, padding}}>\n                      <Text>TO BE CALCULATED</Text>\n                    </TableCell>\n                    {detailMode && <TableCell style={{backgroundColor:selectedColor, padding}}>\n                      <Text>{pool.rewardPerBlock.toString()}</Text>\n                    </TableCell>}\n\n                  </TableRow>\n                )\n              })}\n          </Table>\n\n  );\n}\n\nexport default ListTable;\n"]},"metadata":{},"sourceType":"module"}