{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/Cook/cook-frontend/src/components/common/BalanceBlock.tsx\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport { useViewport } from '@aragon/ui';\nimport LinearText from \"../common/LinearText\";\nimport { Row, Col } from 'react-grid-system';\n\nfunction BalanceBlock({\n  asset,\n  balance,\n  suffix = \"\",\n  type = \"\"\n}) {\n  let integer = '0';\n  let digits = '0';\n  let bigNumber = new BigNumber(balance);\n  const {\n    below\n  } = useViewport();\n\n  if (new BigNumber(balance).gt(new BigNumber(0))) {\n    if (bigNumber.gte(1000000)) {\n      let str = bigNumber.div(1000000).toLocaleString();\n      const split = str.split('.');\n      integer = split[0];\n      digits = split.length > 1 ? str.split('.')[1] : '0';\n      digits = digits.length > 2 ? digits.substr(0, 2) : digits;\n      digits += 'M';\n    } else {\n      let str = balance.toLocaleString();\n      const split = str.split('.');\n      integer = split[0];\n      digits = split.length > 1 ? str.split('.')[1] : '0';\n      digits = digits.length > 2 ? digits.substr(0, 2) : digits;\n    }\n  }\n\n  const fontSize = below('medium') ? \"30px\" : \"50px\";\n\n  if (type === \"block\") {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      style: {\n        padding: 5,\n        fontWeight: 700\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, asset), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      style: {\n        padding: 5,\n        fontWeight: 700\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(LinearText, {\n      text: `${integer}.${digits}`,\n      size: fontSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }), suffix === \"\" ? '' : /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: 14\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 35\n      }\n    }, \" \", suffix))));\n  }\n\n  if (type === \"row\") {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        padding: 15,\n        height: '100px'\n      },\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      md: 6,\n      style: {\n        padding: 0,\n        fontSize: 16,\n        textAlign: \"left\",\n        fontWeight: 700\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, asset), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      md: 6,\n      style: {\n        padding: 0,\n        textAlign: \"right\",\n        fontWeight: 700\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(LinearText, {\n      text: `${integer}.${digits}`,\n      size: fontSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }), suffix === \"\" ? '' : /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: 14\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 35\n      }\n    }, \" \", suffix))));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: 14,\n      padding: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, asset), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 3,\n      fontWeight: 700\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LinearText, {\n    text: `${integer}.${digits}`,\n    size: fontSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), suffix === \"\" ? '' : /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: 14\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 31\n    }\n  }, \" \", suffix)));\n}\n\nexport default BalanceBlock;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/common/BalanceBlock.tsx"],"names":["React","BigNumber","useViewport","LinearText","Row","Col","BalanceBlock","asset","balance","suffix","type","integer","digits","bigNumber","below","gt","gte","str","div","toLocaleString","split","length","substr","fontSize","padding","fontWeight","height","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  useViewport\n} from '@aragon/ui';\nimport LinearText from \"../common/LinearText\";\nimport { Row, Col } from 'react-grid-system';\n\ntype BlanceBlockProps = {\n  asset: string,\n  balance: BigNumber | string | number\n  suffix?: any\n  type?: string\n}\n\nfunction BalanceBlock({ asset, balance, suffix = \"\", type = \"\" }: BlanceBlockProps) {\n  let integer = '0';\n  let digits = '0';\n  let bigNumber = new BigNumber(balance)\n  const { below } = useViewport()\n  if (new BigNumber(balance).gt(new BigNumber(0))) {\n    if (bigNumber.gte(1000000)) {\n      let str = (bigNumber.div(1000000)).toLocaleString()\n      const split = str.split('.');\n      integer = split[0]\n      digits = split.length > 1 ? str.split('.')[1] : '0';\n      digits = digits.length > 2 ? digits.substr(0, 2) : digits\n      digits += 'M'\n\n    } else {\n      let str = balance.toLocaleString()\n      const split = str.split('.');\n      integer = split[0];\n      digits = split.length > 1 ? str.split('.')[1] : '0';\n      digits = digits.length > 2 ? digits.substr(0, 2) : digits\n    }\n\n  }\n  const fontSize = below('medium') ? \"30px\" : \"50px\"\n\n  if (type === \"block\") {\n    return (\n      <>\n        <Row>\n          <Col md={12} style={{ padding: 5, fontWeight: 700 }}>{asset}</Col>\n          <Col md={12} style={{ padding: 5, fontWeight: 700 }}>\n            <LinearText text={`${integer}.${digits}`} size={fontSize} />\n            {suffix === \"\" ? '' : <span style={{ fontSize: 14 }}> {suffix}</span>}\n          </Col>\n        </Row>\n      </>\n    )\n  }\n  if (type === \"row\") {\n    return (\n      <>\n        <Row style={{ padding: 15, height: '100px' }} align=\"center\">\n          <Col xs={12} md={6} style={{ padding: 0, fontSize: 16, textAlign: \"left\", fontWeight: 700 }}>{asset}</Col>\n          <Col xs={12} md={6} style={{ padding: 0, textAlign: \"right\", fontWeight: 700 }}>\n            <LinearText text={`${integer}.${digits}`} size={fontSize} />\n            {suffix === \"\" ? '' : <span style={{ fontSize: 14 }}> {suffix}</span>}\n          </Col>\n        </Row>\n      </>\n    )\n  }\n  return (\n    <>\n      <div style={{ fontSize: 14, padding: 3 }}>{asset}</div>\n      <div style={{ padding: 3, fontWeight: 700 }}>\n        <LinearText text={`${integer}.${digits}`} size={fontSize} />\n        {suffix === \"\" ? '' : <span style={{ fontSize: 14 }}> {suffix}</span>}\n      </div>\n    </>\n  );\n}\n\nexport default BalanceBlock;\n"]},"metadata":{},"sourceType":"module"}