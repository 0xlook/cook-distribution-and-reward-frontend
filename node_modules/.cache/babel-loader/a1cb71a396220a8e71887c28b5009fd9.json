{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/Cook/cook-frontend/src/components/Distribution/ZapCook.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Modal } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { BalanceBlock } from '../common/index';\nimport { cookDistributionZap } from '../../utils/web3';\nimport { toBaseUnitBN } from '../../utils/number';\nimport { COOK } from \"../../constants/tokens\";\nimport { CookDistribution } from \"../../constants/contracts\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport colors from '../../constants/colors';\nimport ActionButton from \"../common/ActionButton\";\nimport { Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\nfunction DistributionZap({\n  user,\n  pools,\n  cookAvailable,\n  selected\n}) {\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false);\n  const [selectedPool, setSelectedPool] = useState(selected || '');\n  useEffect(() => {\n    if (selected) {\n      setSelectedPool(selected);\n    }\n  }, [selectedPool, selected]);\n\n  const close = () => {\n    setOpened(false);\n    setZapAmount(new BigNumber(0));\n  };\n\n  const onChangeAmountCOOK = amountCOOK => {\n    const amountCOOKBN = new BigNumber(amountCOOK);\n    setZapAmount(amountCOOKBN);\n  };\n\n  const renderPoolZap = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ActionButton, {\n      label: \"Zap Cook\",\n      color: colors.linear,\n      onClick: () => {\n        setOpened(true);\n      },\n      disabled: !user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      visible: opened,\n      onClose: () => close(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: 45,\n        fontWeight: 700\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"Zap Cook\"), /*#__PURE__*/React.createElement(ListTable, {\n      pools: pools,\n      selectedPool: selectedPool,\n      setSelectedPool: setSelectedPool,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        padding: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BalanceBlock, {\n      asset: \"Available Cook\",\n      balance: cookAvailable,\n      suffix: \"Cook\",\n      type: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 28\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BigNumberInput, {\n      adornment: \"Cook\",\n      value: zapAmount,\n      max: () => {\n        onChangeAmountCOOK(cookAvailable);\n      },\n      setter: onChangeAmountCOOK,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ActionButton, {\n      type: \"cancel\",\n      label: \"Cancel\",\n      onClick: () => {\n        close();\n      },\n      disabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ActionButton, {\n      type: \"filled\",\n      label: \"Zap\",\n      onClick: () => {\n        console.log(selectedPool);\n\n        if (selectedPool) {\n          console.log(CookDistribution, selectedPool, zapAmount, toBaseUnitBN(zapAmount, COOK.decimals));\n          cookDistributionZap(CookDistribution, selectedPool, toBaseUnitBN(zapAmount, COOK.decimals), hash => {\n            close();\n          });\n        }\n      },\n      disabled: selectedPool === '' || user === '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }))))));\n  };\n\n  return renderPoolZap();\n}\n\nexport default DistributionZap;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/Distribution/ZapCook.tsx"],"names":["React","useState","useEffect","Modal","BigNumber","BalanceBlock","cookDistributionZap","toBaseUnitBN","COOK","CookDistribution","BigNumberInput","colors","ActionButton","Row","Col","ListTable","DistributionZap","user","pools","cookAvailable","selected","zapAmount","setZapAmount","opened","setOpened","selectedPool","setSelectedPool","close","onChangeAmountCOOK","amountCOOK","amountCOOKBN","renderPoolZap","linear","padding","textAlign","fontSize","fontWeight","console","log","decimals","hash"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Modal, DropDown\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock, PriceSection\n} from '../common/index';\nimport { cookDistributionZap, approve } from '../../utils/web3';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { COOK, WETH } from \"../../constants/tokens\";\nimport { CookDistribution } from \"../../constants/contracts\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport colors from '../../constants/colors';\nimport ActionButton from \"../common/ActionButton\";\nimport HelpText from \"../common/HelpText\";\nimport { Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\ntype ZapProps = {\n  user: string,\n  pools: Array<{ name: string, address: string, rewardPerBlock: BigNumber, lockedUpPeriod: BigNumber }>,\n  cookAvailable: BigNumber,\n  selected?: string\n};\n\nfunction DistributionZap({\n  user, pools, cookAvailable, selected\n}: ZapProps) {\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false)\n  const [selectedPool, setSelectedPool] = useState(selected || '')\n\n  useEffect(() => {\n\n    if (selected) {\n      setSelectedPool(selected)\n    }\n\n  }, [selectedPool, selected])\n\n  const close = () => {\n    setOpened(false);\n    setZapAmount(new BigNumber(0));\n  }\n\n\n  const onChangeAmountCOOK = (amountCOOK) => {\n\n    const amountCOOKBN = new BigNumber(amountCOOK)\n    setZapAmount(amountCOOKBN);\n\n  };\n  const renderPoolZap = () => {\n    return (\n      <div>\n        <ActionButton label={\"Zap Cook\"} color={colors.linear} onClick={() => {\n          setOpened(true)\n        }} disabled={!user} />\n        <Modal visible={opened} onClose={() => close()}>\n          <div style={{ padding: 20 }}>\n            <h1 style={{ textAlign: \"center\", fontSize: 45, fontWeight: 700 }}>Zap Cook</h1>\n            <ListTable pools={pools} selectedPool={selectedPool} setSelectedPool={setSelectedPool} />\n            <Row style={{ padding: 10 }}>\n              <Col xs={12}><BalanceBlock asset=\"Available Cook\" balance={cookAvailable} suffix={\"Cook\"} type={\"row\"} /></Col>\n\n            </Row>\n            <Row>\n              <Col xs={12}>\n                <BigNumberInput\n                  adornment=\"Cook\"\n                  value={zapAmount}\n                  max={() => {\n                    onChangeAmountCOOK(cookAvailable);\n                  }}\n                  setter={onChangeAmountCOOK}\n                />\n\n              </Col>\n              <Col xs={6} style={{ textAlign: \"center\" }}>\n                <ActionButton\n                  type=\"cancel\"\n                  label=\"Cancel\"\n                  onClick={() => {\n                    close()\n                  }}\n                  disabled={false}\n                />\n              </Col>\n              <Col xs={6} style={{ textAlign: \"center\" }}>\n                <ActionButton\n                  type=\"filled\"\n                  label={\"Zap\"}\n                  onClick={() => {\n                    console.log(selectedPool)\n                    if (selectedPool) {\n                      console.log(CookDistribution,\n                        selectedPool,\n                        zapAmount,\n                        toBaseUnitBN(zapAmount, COOK.decimals))\n                      cookDistributionZap(\n                        CookDistribution,\n                        selectedPool,\n                        toBaseUnitBN(zapAmount, COOK.decimals),\n                        (hash) => {\n                          close()\n                        }\n                      );\n                    }\n\n                  }}\n                  disabled={selectedPool === '' || user === ''}\n                />\n              </Col>\n            </Row>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n\n  return (\n    renderPoolZap()\n  );\n}\n\nexport default DistributionZap;\n"]},"metadata":{},"sourceType":"module"}