{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/Cook/cook-frontend/src/components/PoolList/ListTable.tsx\";\nimport React, { useState } from 'react';\nimport { useViewport, useTheme, Modal } from '@aragon/ui';\nimport colors from '../../constants/colors';\nimport Span from \"../common/Span\";\nimport { Row, Col } from 'react-grid-system';\nimport styled from \"styled-components\";\nimport LinearText from \"../common/LinearText\";\n\nfunction ListTable({\n  pools,\n  selectedPool,\n  setSelectedPool,\n  detailMode,\n  action\n}) {\n  const {\n    below\n  } = useViewport();\n  const [hovered, setHovered] = useState('');\n  const theme = useTheme();\n  const breakpoint = 'medium';\n  const width = '100%';\n  const padding = below(breakpoint) ? '2px 4px' : '10pt 15pt';\n  const [openPopover, setOpenPopover] = useState(false);\n\n  const renderCell = (title, value, size = 16) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: size,\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, value), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 10,\n        color: colors.title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, title));\n  };\n\n  const rowDisplay = action ? [11, 8, 1, 4] : [12, 12, 0, 0];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    visible: openPopover,\n    onClose: () => setOpenPopover(false),\n    width: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, action)), pools && pools.map((pool, index) => {\n    const isSelected = selectedPool === pool.address;\n    return /*#__PURE__*/React.createElement(StyledRow, {\n      selected: isSelected,\n      key: pool.address,\n      onClick: () => {\n        setSelectedPool && setSelectedPool(pool.address);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: rowDisplay[0],\n      md: rowDisplay[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        padding: 0\n      },\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Span, {\n      label: \"open\",\n      size: 10,\n      color: colors.linear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        paddingLeft: 6,\n        color: colors.title,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"APY \", /*#__PURE__*/React.createElement(LinearText, {\n      text: \"180%\",\n      size: \"16px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 93\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      md: 4.5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, renderCell('LP TOKEN', pool.name, 20)), /*#__PURE__*/React.createElement(Col, {\n      xs: 4,\n      md: 2.5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, renderCell('LOCK-UP PERIOD', `${pool.lockedUpPeriod}days`)), /*#__PURE__*/React.createElement(Col, {\n      xs: 4,\n      md: 2.5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, renderCell('POOL SIZE', '100k')), /*#__PURE__*/React.createElement(Col, {\n      xs: 4,\n      md: 2.5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, renderCell('YOUR STAKE', 0)))), /*#__PURE__*/React.createElement(Col, {\n      xs: rowDisplay[2],\n      md: rowDisplay[3],\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, isSelected ? action && below(breakpoint) ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 35,\n        position: 'relative'\n      },\n      onClick: () => setOpenPopover(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        position: 'absolute',\n        top: '50%'\n      },\n      src: require('../../assets/more.svg'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 23\n      }\n    })) : action : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 40\n      }\n    })))));\n  }));\n}\n\nconst StyledRow = styled(Row)`\n  background-color: ${colors.card};\n  ${props => `\n    cursor: ${props.selected ? 'auto' : 'pointer'};\n    border: ${props.selected ? `2px solid ` : \"0px\"};\n  `}\n  border-image-source: ${colors.linear};\n  border-image-slice: 1;\n  border-radius: 12px;\n  text-align: left;\n  margin: 15px 0;\n  padding: 10px;\n\n`;\nexport default ListTable;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/PoolList/ListTable.tsx"],"names":["React","useState","useViewport","useTheme","Modal","colors","Span","Row","Col","styled","LinearText","ListTable","pools","selectedPool","setSelectedPool","detailMode","action","below","hovered","setHovered","theme","breakpoint","width","padding","openPopover","setOpenPopover","renderCell","title","value","size","fontSize","color","rowDisplay","marginTop","map","pool","index","isSelected","address","linear","paddingLeft","name","lockedUpPeriod","height","position","top","require","StyledRow","card","props","selected"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Table, TableRow, TableCell, Text, useViewport, useTheme, Modal\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport colors from '../../constants/colors';\nimport Span from \"../common/Span\";\nimport { Container, Row, Col } from 'react-grid-system';\nimport styled from \"styled-components\";\nimport LinearText from \"../common/LinearText\";\n\ntype PoolProps = { name: string, address: string, rewardPerBlock: BigNumber, lockedUpPeriod: BigNumber };\n\nfunction ListTable({ pools, selectedPool, setSelectedPool, detailMode, action }: {\n  pools?: Array<PoolProps>, selectedPool: string,\n  setSelectedPool?: Function, detailMode?: boolean, action?: any\n}) {\n\n  const { below } = useViewport()\n  const [hovered, setHovered] = useState('');\n  const theme = useTheme();\n  const breakpoint = 'medium'\n  const width = '100%'\n  const padding = below(breakpoint) ? '2px 4px' : '10pt 15pt'\n  const [openPopover, setOpenPopover] = useState(false)\n\n\n  const renderCell = (title, value, size = 16) => {\n    return (\n      <div>\n        <div style={{ fontSize: size, color: \"white\" }}>{value}</div>\n        <div style={{ fontSize: 10, color: colors.title }}>{title}</div>\n      </div>\n    )\n  }\n  const rowDisplay = action ? [11, 8, 1, 4] : [12, 12, 0, 0]\n  return (\n    <>\n      <Modal visible={openPopover} onClose={() => setOpenPopover(false)} width={\"100px\"}>\n        <div style={{ marginTop: \"30px\" }}>\n          {action}\n        </div>\n      </Modal>\n      {pools && pools.map((pool, index) => {\n        const isSelected = selectedPool === pool.address\n        return (\n          <StyledRow\n            selected={isSelected}\n            key={pool.address}\n            onClick={() => {\n              setSelectedPool && setSelectedPool(pool.address)\n            }}\n          >\n            <Col style={{}}>\n              <Row align=\"center\">\n                <Col xs={rowDisplay[0]} md={rowDisplay[1]}>\n                  <Row style={{ padding: 0 }} align=\"center\">\n                    <Span label={\"open\"} size={10} color={colors.linear} />\n                    <span style={{ paddingLeft: 6, color: colors.title, fontSize: 12 }}>APY <LinearText text={\"180%\"} size={\"16px\"} /></span>\n                  </Row>\n                  <Row style={{ marginTop: 10 }}>\n                    <Col xs={12} md={4.5}>\n                      {renderCell('LP TOKEN', pool.name, 20)}\n                    </Col>\n                    <Col xs={4} md={2.5}>{renderCell('LOCK-UP PERIOD', `${pool.lockedUpPeriod}days`)}</Col>\n                    <Col xs={4} md={2.5}>{renderCell('POOL SIZE', '100k')}</Col>\n                    <Col xs={4} md={2.5}>{renderCell('YOUR STAKE', 0)}</Col>\n                  </Row>\n                </Col>\n                <Col xs={rowDisplay[2]} md={rowDisplay[3]} style={{ padding: 0 }}>\n\n                  {isSelected ? (action && below(breakpoint) ?\n                    <div style={{ height: 35, position: 'relative' }}\n                      onClick={() => setOpenPopover(true)}>\n                      <img style={{ position: 'absolute', top: '50%' }}\n                        src={require('../../assets/more.svg')} />\n                    </div> : action) : <div />}\n\n                </Col>\n              </Row>\n            </Col>\n\n          </StyledRow>\n        )\n      })}</>\n  )\n\n\n}\n\nconst StyledRow = styled(Row)`\n  background-color: ${colors.card};\n  ${props => `\n    cursor: ${props.selected ? 'auto' : 'pointer'};\n    border: ${props.selected ? `2px solid ` : \"0px\"};\n  `}\n  border-image-source: ${colors.linear};\n  border-image-slice: 1;\n  border-radius: 12px;\n  text-align: left;\n  margin: 15px 0;\n  padding: 10px;\n\n`;\n\nexport default ListTable;"]},"metadata":{},"sourceType":"module"}