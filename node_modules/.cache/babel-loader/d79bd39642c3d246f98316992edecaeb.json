{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/cook-frontend/src/components/Distribution/Zap.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, IconCirclePlus, Modal, DropDown } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { BalanceBlock, MaxButton, PriceSection } from '../common/index';\nimport { distributionZap, approve } from '../../utils/web3';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { COOK, WETH } from \"../../constants/tokens\";\nimport { CookDistribution } from \"../../constants/contracts\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport colors from '../../constants/colors';\nimport ActionButton from \"../common/ActionButton\";\nimport { Container, Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\nfunction Zap({\n  user,\n  pools,\n  cookAvailable,\n  wethBalance,\n  wethAllowance,\n  pairBalanceWETH,\n  pairBalanceCOOK,\n  component,\n  selected\n}) {\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [wethAmount, setWethAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false);\n  const [selectedPool, setSelectedPool] = useState('');\n  const [balanceType, setBalanceType] = useState(0);\n  useEffect(() => {\n    if (selected) {\n      setSelectedPool(selected);\n    }\n  }, [selected]);\n\n  const open = opend => {\n    setOpened(true);\n  };\n\n  const close = () => {\n    setOpened(false);\n    setZapAmount(new BigNumber(0));\n    setWethAmount(new BigNumber(0));\n  };\n\n  const WETHToCOOKRatio = pairBalanceWETH.isZero() ? new BigNumber(1) : pairBalanceWETH.div(pairBalanceCOOK);\n\n  const onChangeAmountCOOK = amountCOOK => {\n    if (!amountCOOK) {\n      setWethAmount(new BigNumber(0));\n      return;\n    }\n\n    const amountCOOKBN = new BigNumber(amountCOOK);\n    setZapAmount(amountCOOKBN);\n    const amountCOOKBU = toBaseUnitBN(amountCOOKBN, COOK.decimals);\n    const newAmountWETH = toTokenUnitsBN(amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR), COOK.decimals);\n    setWethAmount(newAmountWETH);\n  };\n\n  const renderPoolZap = () => {\n    return /*#__PURE__*/React.createElement(Modal, {\n      visible: opened,\n      closeButton: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flexBasis: '100%',\n        paddingTop: '2%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ListTable, {\n      pools: pools,\n      selectedPool: selectedPool,\n      setSelectedPool: setSelectedPool,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BalanceBlock, {\n      asset: \"Available COOK\",\n      balance: cookAvailable,\n      suffix: \"COOK\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BalanceBlock, {\n      asset: \"WETH Balance\",\n      balance: wethBalance,\n      suffix: /*#__PURE__*/React.createElement(DropDown, {\n        items: ['WETH'],\n        selected: balanceType,\n        onChange: setBalanceType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 76\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '60%',\n        minWidth: '6em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BigNumberInput, {\n      adornment: \"COOK\",\n      value: zapAmount,\n      setter: onChangeAmountCOOK,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(PriceSection, {\n      label: \"Requires \",\n      amt: wethAmount,\n      symbol: \" WETH\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(MaxButton, {\n      onClick: () => {\n        onChangeAmountCOOK(cookAvailable);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    })), wethAllowance.comparedTo(wethAmount) > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '40%',\n        minWidth: '6em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      wide: true,\n      icon: /*#__PURE__*/React.createElement(IconCirclePlus, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 23\n        }\n      }),\n      label: \"Zap\",\n      onClick: () => {\n        if (selectedPool) {\n          distributionZap(CookDistribution, selectedPool, toBaseUnitBN(zapAmount, COOK.decimals), hash => {\n            close();\n          });\n        }\n      },\n      disabled: selectedPool === '' || user === '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '40%',\n        minWidth: '6em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      wide: true,\n      icon: /*#__PURE__*/React.createElement(IconCirclePlus, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }),\n      label: \"Approve\",\n      onClick: () => {\n        approve(WETH.addr, CookDistribution);\n      },\n      disabled: selectedPool === '' || user === '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    })))), /*#__PURE__*/React.createElement(Button, {\n      wide: true,\n      label: \"Close\",\n      onClick: () => {\n        close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    heading: \"Zap\",\n    style: {\n      marginTop: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, component, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    xl: 4,\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    label: \"ZAP\",\n    color: colors.button,\n    onClick: () => {\n      open(true);\n    },\n    disabled: user === '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 12\n    }\n  }))))), renderPoolZap());\n}\n\nexport default Zap;","map":{"version":3,"sources":["/Users/huanwen/Work/cook-frontend/src/components/Distribution/Zap.tsx"],"names":["React","useState","useEffect","Box","Button","IconCirclePlus","Modal","DropDown","BigNumber","BalanceBlock","MaxButton","PriceSection","distributionZap","approve","toBaseUnitBN","toTokenUnitsBN","COOK","WETH","CookDistribution","BigNumberInput","colors","ActionButton","Container","Row","Col","ListTable","Zap","user","pools","cookAvailable","wethBalance","wethAllowance","pairBalanceWETH","pairBalanceCOOK","component","selected","zapAmount","setZapAmount","wethAmount","setWethAmount","opened","setOpened","selectedPool","setSelectedPool","balanceType","setBalanceType","open","opend","close","WETHToCOOKRatio","isZero","div","onChangeAmountCOOK","amountCOOK","amountCOOKBN","amountCOOKBU","decimals","newAmountWETH","multipliedBy","integerValue","ROUND_FLOOR","renderPoolZap","flexBasis","paddingTop","display","width","minWidth","comparedTo","hash","addr","marginTop","textAlign","button"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,GADF,EACOC,MADP,EACeC,cADf,EAC+BC,KAD/B,EACwEC,QADxE,QAEO,YAFP;AAGA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SACEC,YADF,EACgBC,SADhB,EAC2BC,YAD3B,QAEO,iBAFP;AAGA,SAAQC,eAAR,EAAyBC,OAAzB,QAAuC,kBAAvC;AACA,SAAQC,YAAR,EAAsBC,cAAtB,QAA2C,oBAA3C;AACA,SAAQC,IAAR,EAAcC,IAAd,QAAyB,wBAAzB;AACA,SAAQC,gBAAR,QAA+B,2BAA/B;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,mBAApC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAcA,SAASC,GAAT,CAAa;AACXC,EAAAA,IADW;AACLC,EAAAA,KADK;AACEC,EAAAA,aADF;AACiBC,EAAAA,WADjB;AAC8BC,EAAAA,aAD9B;AAC6CC,EAAAA,eAD7C;AAC8DC,EAAAA,eAD9D;AAC+EC,EAAAA,SAD/E;AAC0FC,EAAAA;AAD1F,CAAb,EAEa;AAEX,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BpC,QAAQ,CAAC,IAAIO,SAAJ,CAAc,CAAd,CAAD,CAA1C;AACA,QAAM,CAAC8B,UAAD,EAAaC,aAAb,IAA8BtC,QAAQ,CAAC,IAAIO,SAAJ,CAAc,CAAd,CAAD,CAA5C;AACA,QAAM,CAACgC,MAAD,EAASC,SAAT,IAAsBxC,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACyC,YAAD,EAAeC,eAAf,IAAkC1C,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC2C,WAAD,EAAcC,cAAd,IAAgC5C,QAAQ,CAAC,CAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGiC,QAAH,EAAY;AACVQ,MAAAA,eAAe,CAACR,QAAD,CAAf;AACD;AACF,GAJQ,EAIN,CAACA,QAAD,CAJM,CAAT;;AAMA,QAAMW,IAAI,GAAIC,KAAD,IAAmB;AAC9BN,IAAAA,SAAS,CAAC,IAAD,CAAT;AAED,GAHD;;AAIA,QAAMO,KAAK,GAAG,MAAM;AAClBP,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAJ,IAAAA,YAAY,CAAC,IAAI7B,SAAJ,CAAc,CAAd,CAAD,CAAZ;AACA+B,IAAAA,aAAa,CAAC,IAAI/B,SAAJ,CAAc,CAAd,CAAD,CAAb;AACD,GAJD;;AAMA,QAAMyC,eAAe,GAAGjB,eAAe,CAACkB,MAAhB,KAA2B,IAAI1C,SAAJ,CAAc,CAAd,CAA3B,GAA8CwB,eAAe,CAACmB,GAAhB,CAAoBlB,eAApB,CAAtE;;AAEA,QAAMmB,kBAAkB,GAAIC,UAAD,IAAgB;AACzC,QAAI,CAACA,UAAL,EAAiB;AACfd,MAAAA,aAAa,CAAC,IAAI/B,SAAJ,CAAc,CAAd,CAAD,CAAb;AACA;AACD;;AAED,UAAM8C,YAAY,GAAG,IAAI9C,SAAJ,CAAc6C,UAAd,CAArB;AACAhB,IAAAA,YAAY,CAACiB,YAAD,CAAZ;AAEA,UAAMC,YAAY,GAAGzC,YAAY,CAACwC,YAAD,EAAetC,IAAI,CAACwC,QAApB,CAAjC;AACA,UAAMC,aAAa,GAAG1C,cAAc,CAClCwC,YAAY,CAACG,YAAb,CAA0BT,eAA1B,EAA2CU,YAA3C,CAAwDnD,SAAS,CAACoD,WAAlE,CADkC,EAElC5C,IAAI,CAACwC,QAF6B,CAApC;AAGAjB,IAAAA,aAAa,CAACkB,aAAD,CAAb;AACD,GAdD;;AAgBA,QAAMI,aAAa,GAAG,MAAM;AAC1B,wBACE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAErB,MAAhB;AAAwB,MAAA,WAAW,EAAE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,KAAK,EAAE;AAACsB,QAAAA,SAAS,EAAE,MAAZ;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEnC,KAAlB;AAAyB,MAAA,YAAY,EAAEc,YAAvC;AAAqD,MAAA,eAAe,EAAEC,eAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAACoB,QAAAA,UAAU,EAAC;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,gBAApB;AAAqC,MAAA,OAAO,EAAElC,aAA9C;AAA6D,MAAA,MAAM,EAAE,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CADA,eAEA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,cAApB;AAAmC,MAAA,OAAO,EAAEC,WAA5C;AAAyD,MAAA,MAAM,eAAE,oBAAC,QAAD;AAC3D,QAAA,KAAK,EAAE,CAAC,MAAD,CADoD;AAE3D,QAAA,QAAQ,EAAEc,WAFiD;AAG3D,QAAA,QAAQ,EAAEC,cAHiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFA,CAFJ,eAYE;AAAK,MAAA,KAAK,EAAE;AAACmB,QAAAA,OAAO,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,QAAQ,EAAE;AAAzB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,cAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,KAAK,EAAE9B,SAFT;AAGE,MAAA,MAAM,EAAEgB,kBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,WAApB;AAAgC,MAAA,GAAG,EAAEd,UAArC;AAAiD,MAAA,MAAM,EAAC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAOI,oBAAC,SAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACbc,QAAAA,kBAAkB,CAACvB,aAAD,CAAlB;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADF,EAcGE,aAAa,CAACoC,UAAd,CAAyB7B,UAAzB,IAAuC,CAAvC,gBACC;AAAK,MAAA,KAAK,EAAE;AAAC2B,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,QAAQ,EAAE;AAAzB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,IAAI,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR;AAGE,MAAA,KAAK,EAAC,KAHR;AAIE,MAAA,OAAO,EAAE,MAAM;AACb,YAAGxB,YAAH,EAAgB;AACd9B,UAAAA,eAAe,CACbM,gBADa,EAEbwB,YAFa,EAGb5B,YAAY,CAACsB,SAAD,EAAYpB,IAAI,CAACwC,QAAjB,CAHC,EAIZY,IAAD,IAAU;AACRpB,YAAAA,KAAK;AACN,WANY,CAAf;AAQD;AAEF,OAhBH;AAiBE,MAAA,QAAQ,EAAEN,YAAY,KAAK,EAAjB,IAAuBf,IAAI,KAAK,EAjB5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,gBAuBD;AAAK,MAAA,KAAK,EAAE;AAACsC,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,QAAQ,EAAE;AAAzB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,IAAI,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,OAAO,EAAE,MAAM;AACbrD,QAAAA,OAAO,CAACI,IAAI,CAACoD,IAAN,EAAYnD,gBAAZ,CAAP;AACD,OANH;AAOE,MAAA,QAAQ,EAAEwB,YAAY,KAAK,EAAjB,IAAuBf,IAAI,KAAK,EAP5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CArCF,CAZF,CADA,eAgEA,oBAAC,MAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,OAAO,EAAE,MAAM;AACbqB,QAAAA,KAAK;AACN,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhEA,CADF;AA0ED,GA3ED;;AA6EA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,KAAb;AAAmB,IAAA,KAAK,EAAE;AAACsB,MAAAA,SAAS,EAAC;AAAX,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpC,SADH,eAEE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAoB,IAAA,KAAK,EAAE;AAACqC,MAAAA,SAAS,EAAC;AAAX,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE,KAArB;AAA4B,IAAA,KAAK,EAAEnD,MAAM,CAACoD,MAA1C;AAAkD,IAAA,OAAO,EAAE,MAAI;AAC9D1B,MAAAA,IAAI,CAAC,IAAD,CAAJ;AACD,KAFA;AAEE,IAAA,QAAQ,EAAEnB,IAAI,KAAK,EAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFF,CAFA,CADF,CADA,EAeCkC,aAAa,EAfd,CADF;AAmBD;;AAED,eAAenC,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box, Button, IconCirclePlus, Modal, Card, Table, TableRow, TableCell, DropDown\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock, MaxButton, PriceSection\n} from '../common/index';\nimport {distributionZap, approve} from '../../utils/web3';\nimport {toBaseUnitBN, toTokenUnitsBN} from '../../utils/number';\nimport {COOK, WETH} from \"../../constants/tokens\";\nimport {CookDistribution} from \"../../constants/contracts\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport colors from '../../constants/colors';\nimport ActionButton from \"../common/ActionButton\";\nimport { Container, Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\ntype ZapProps = {\n  user: string,\n  pools: Array<{pool:string,lockedUp:number,reward:BigNumber,staked:BigNumber,totalStaked:BigNumber}>,\n  cookAvailable: BigNumber,\n  wethBalance: BigNumber,\n  wethAllowance: BigNumber,\n  pairBalanceWETH: BigNumber,\n  pairBalanceCOOK: BigNumber,\n  selected?:string,\n  component: any\n};\n\nfunction Zap({\n  user, pools, cookAvailable, wethBalance, wethAllowance, pairBalanceWETH, pairBalanceCOOK, component, selected\n}: ZapProps) {\n\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [wethAmount, setWethAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false)\n  const [selectedPool, setSelectedPool] = useState('')\n  const [balanceType, setBalanceType] = useState(0)\n\n  useEffect(() => {\n    if(selected){\n      setSelectedPool(selected)\n    }\n  }, [selected])\n\n  const open = (opend:boolean) => {\n    setOpened(true);\n\n  }\n  const close = () => {\n    setOpened(false);\n    setZapAmount(new BigNumber(0));\n    setWethAmount(new BigNumber(0));\n  }\n\n  const WETHToCOOKRatio = pairBalanceWETH.isZero() ? new BigNumber(1) : pairBalanceWETH.div(pairBalanceCOOK);\n\n  const onChangeAmountCOOK = (amountCOOK) => {\n    if (!amountCOOK) {\n      setWethAmount(new BigNumber(0));\n      return;\n    }\n\n    const amountCOOKBN = new BigNumber(amountCOOK)\n    setZapAmount(amountCOOKBN);\n\n    const amountCOOKBU = toBaseUnitBN(amountCOOKBN, COOK.decimals);\n    const newAmountWETH = toTokenUnitsBN(\n      amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR),\n      COOK.decimals);\n    setWethAmount(newAmountWETH);\n  };\n\n  const renderPoolZap = () => {\n    return(\n      <Modal visible={opened} closeButton={false}>\n      <div style={{flexBasis: '100%', paddingTop: '2%'}}>\n          <ListTable pools={pools} selectedPool={selectedPool} setSelectedPool={setSelectedPool}/>\n          <Row style={{paddingTop:20}}>\n          <Col><BalanceBlock asset=\"Available COOK\" balance={cookAvailable} suffix={\"COOK\"} /></Col>\n          <Col>\n          <BalanceBlock asset=\"WETH Balance\" balance={wethBalance} suffix={<DropDown\n                items={['WETH']}\n                selected={balanceType}\n                onChange={setBalanceType}\n              />}/>\n          </Col>\n          </Row>\n        <div style={{display: 'flex'}}>\n          <div style={{width: '60%', minWidth: '6em'}}>\n              <BigNumberInput\n                adornment=\"COOK\"\n                value={zapAmount}\n                setter={onChangeAmountCOOK}\n              />\n              <PriceSection label=\"Requires \" amt={wethAmount} symbol=\" WETH\"/>\n              <MaxButton\n                onClick={() => {\n                  onChangeAmountCOOK(cookAvailable);\n                }}\n              />\n          </div>\n          {wethAllowance.comparedTo(wethAmount) > 0 ?\n            <div style={{width: '40%', minWidth: '6em'}}>\n              <Button\n                wide\n                icon={<IconCirclePlus/>}\n                label=\"Zap\"\n                onClick={() => {\n                  if(selectedPool){\n                    distributionZap(\n                      CookDistribution,\n                      selectedPool,\n                      toBaseUnitBN(zapAmount, COOK.decimals),\n                      (hash) => {\n                        close()\n                      }\n                    );\n                  }\n\n                }}\n                disabled={selectedPool === '' || user === ''}\n              />\n            </div>\n          :\n          <div style={{width: '40%', minWidth: '6em'}}>\n            <Button\n              wide\n              icon={<IconCirclePlus/>}\n              label=\"Approve\"\n              onClick={() => {\n                approve(WETH.addr, CookDistribution);\n              }}\n              disabled={selectedPool === '' || user === ''}\n            />\n          </div>\n          }\n        </div>\n      </div>\n      <Button\n        wide\n        label=\"Close\"\n        onClick={() => {\n          close();\n        }}\n      />\n      </Modal>\n    )\n  }\n\n  return (\n    <div >\n    <Box heading=\"Zap\" style={{marginTop:0}}>\n      <Container>\n\n      <Row>\n        {component}\n        <Col md={12} xl={4} style={{textAlign:\"center\"}}>\n          {<ActionButton label={\"ZAP\"} color={colors.button} onClick={()=>{\n            open(true);\n          }} disabled={user === '' }/>}\n        </Col>\n      </Row>\n\n      </Container>\n    </Box>\n    {renderPoolZap()}\n    </div>\n  );\n}\n\nexport default Zap;\n"]},"metadata":{},"sourceType":"module"}