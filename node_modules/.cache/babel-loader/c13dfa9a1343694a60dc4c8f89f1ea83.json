{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/cook-frontend/src/components/PoolList/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getStakeLockupDuration, getRewardPerBlock, getTotalStaked } from '../../utils/infura';\nimport { useViewport, useTheme, Modal } from '@aragon/ui';\nimport { POOLS } from \"../../constants/contracts\";\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { COOK, UNI } from \"../../constants/tokens\";\nimport Pool from \"../Pool\";\nimport BigNumber from 'bignumber.js';\nimport ListTable from \"./ListTable\";\nimport { Row, Col, Visible, Hidden } from 'react-grid-system';\n\nfunction PoolList({\n  user\n}) {\n  const {\n    override\n  } = useParams();\n\n  if (override) {\n    user = override;\n  }\n\n  const {\n    within,\n    below,\n    above\n  } = useViewport();\n  const [poolList, setPoolList] = useState([]);\n  const [selectedPool, setSelectedPool] = useState('');\n  const [totalStaked, setTotalStaked] = useState(new BigNumber(0));\n  const [openMobileModal, setOpenMobileModal] = useState(false);\n  const [hovered, setHovered] = useState('');\n  const theme = useTheme();\n  useEffect(() => {\n    let isCancelled = false; // setPoolList([{name:\"4 UNI-V2 (WETH/COOK)\", address:\"0xf4B146FbA71F41E0592668ffbF264F1D186b2Ca8\",lockedUpPeriod:\"90 days\",rewardPerBlock:\"300\"}]);\n\n    async function updatePoolInfo() {\n      const poolList = await Promise.all(POOLS.map(async pool => {\n        const [lockedup, reward] = await Promise.all([getStakeLockupDuration(pool.address), getRewardPerBlock(pool.address)]);\n        const poolRewardPerBlock = toTokenUnitsBN(reward, COOK.decimals);\n        return {\n          name: pool.name,\n          address: pool.address,\n          lockedUpPeriod: lockedup,\n          rewardPerBlock: poolRewardPerBlock\n        };\n      }));\n      const totalStakedBalance = await POOLS.reduce(async (sum, pool) => {\n        const staked = await getTotalStaked(pool.address);\n        return (await sum).plus(staked);\n      }, Promise.resolve(new BigNumber(0)));\n      const totalStaked = toTokenUnitsBN(totalStakedBalance, UNI.decimals);\n\n      if (!isCancelled) {\n        setPoolList(poolList);\n        setTotalStaked(totalStaked);\n      }\n    }\n\n    updatePoolInfo();\n    const id = setInterval(updatePoolInfo, 15000); // eslint-disable-next-line consistent-return\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n  const padding = below('medium') ? '3pt 7pt' : 20;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Total Staked\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: 8,\n      fontSize: 40,\n      paddingRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, totalStaked.toString(), \" UNI-V2\"), /*#__PURE__*/React.createElement(ListTable, {\n    pools: poolList,\n    selectedPool: selectedPool,\n    setSelectedPool: setSelectedPool,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    lg: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, selectedPool === '' ? '' : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Visible, {\n    sm: true,\n    xs: true,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    visible: true,\n    onClose: () => {\n      setOpenMobileModal(false);\n      setSelectedPool('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Pool, {\n    user: user,\n    poolAddress: selectedPool,\n    pools: poolList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Hidden, {\n    sm: true,\n    xs: true,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Pool, {\n    user: user,\n    poolAddress: selectedPool,\n    pools: poolList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default PoolList;","map":{"version":3,"sources":["/Users/huanwen/Work/cook-frontend/src/components/PoolList/index.tsx"],"names":["React","useState","useEffect","useParams","getStakeLockupDuration","getRewardPerBlock","getTotalStaked","useViewport","useTheme","Modal","POOLS","toTokenUnitsBN","COOK","UNI","Pool","BigNumber","ListTable","Row","Col","Visible","Hidden","PoolList","user","override","within","below","above","poolList","setPoolList","selectedPool","setSelectedPool","totalStaked","setTotalStaked","openMobileModal","setOpenMobileModal","hovered","setHovered","theme","isCancelled","updatePoolInfo","Promise","all","map","pool","lockedup","reward","address","poolRewardPerBlock","decimals","name","lockedUpPeriod","rewardPerBlock","totalStakedBalance","reduce","sum","staked","plus","resolve","id","setInterval","clearInterval","padding","textAlign","fontSize","marginBottom","paddingRight","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SACEC,sBADF,EAEEC,iBAFF,EAGEC,cAHF,QAIO,oBAJP;AAKA,SACoCC,WADpC,EACiDC,QADjD,EAC2DC,KAD3D,QAEO,YAFP;AAGA,SAASC,KAAT,QAAsB,2BAAtB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,IAAT,EAAcC,GAAd,QAAyB,wBAAzB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,OAA9B,EAAuCC,MAAvC,QAAqD,mBAArD;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4C;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAepB,SAAS,EAA9B;;AACA,MAAIoB,QAAJ,EAAc;AACZD,IAAAA,IAAI,GAAGC,QAAP;AACD;;AACD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA2BnB,WAAW,EAA5C;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC4B,YAAD,EAAeC,eAAf,IAAkC7B,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC8B,WAAD,EAAcC,cAAd,IAAgC/B,QAAQ,CAAC,IAAIc,SAAJ,CAAc,CAAd,CAAD,CAA9C;AACA,QAAM,CAACkB,eAAD,EAAkBC,kBAAlB,IAAwCjC,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACkC,OAAD,EAAUC,UAAV,IAAwBnC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMoC,KAAK,GAAG7B,QAAQ,EAAtB;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoC,WAAW,GAAG,KAAlB,CADc,CAEd;;AACA,mBAAeC,cAAf,GAAgC;AAC9B,YAAMZ,QAAQ,GAAG,MAAMa,OAAO,CAACC,GAAR,CAAY/B,KAAK,CAACgC,GAAN,CAAW,MAAOC,IAAP,IAAc;AAC1D,cAAM,CAACC,QAAD,EAAUC,MAAV,IACN,MAAML,OAAO,CAACC,GAAR,CAAY,CACdrC,sBAAsB,CAACuC,IAAI,CAACG,OAAN,CADR,EAEdzC,iBAAiB,CAACsC,IAAI,CAACG,OAAN,CAFH,CAAZ,CADN;AAKA,cAAMC,kBAAkB,GAAGpC,cAAc,CAACkC,MAAD,EAASjC,IAAI,CAACoC,QAAd,CAAzC;AACA,eAAO;AACLC,UAAAA,IAAI,EAAEN,IAAI,CAACM,IADN;AAELH,UAAAA,OAAO,EAAEH,IAAI,CAACG,OAFT;AAGLI,UAAAA,cAAc,EAAEN,QAHX;AAILO,UAAAA,cAAc,EAAEJ;AAJX,SAAP;AAMD,OAbkC,CAAZ,CAAvB;AAeA,YAAMK,kBAAkB,GAAG,MAAM1C,KAAK,CAAC2C,MAAN,CAAa,OAAOC,GAAP,EAAYX,IAAZ,KAAqB;AACjE,cAAMY,MAAM,GAAG,MAAMjD,cAAc,CAACqC,IAAI,CAACG,OAAN,CAAnC;AACA,eAAO,CAAC,MAAMQ,GAAP,EAAYE,IAAZ,CAAiBD,MAAjB,CAAP;AACD,OAHgC,EAG9Bf,OAAO,CAACiB,OAAR,CAAgB,IAAI1C,SAAJ,CAAc,CAAd,CAAhB,CAH8B,CAAjC;AAKA,YAAMgB,WAAW,GAAGpB,cAAc,CAACyC,kBAAD,EAAqBvC,GAAG,CAACmC,QAAzB,CAAlC;;AAEA,UAAI,CAACV,WAAL,EAAkB;AAChBV,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAK,QAAAA,cAAc,CAACD,WAAD,CAAd;AACD;AACF;;AACDQ,IAAAA,cAAc;AAEd,UAAMmB,EAAE,GAAGC,WAAW,CAACpB,cAAD,EAAiB,KAAjB,CAAtB,CAjCc,CAmCd;;AACA,WAAO,MAAM;AACXD,MAAAA,WAAW,GAAG,IAAd;AACAsB,MAAAA,aAAa,CAACF,EAAD,CAAb;AACD,KAHD;AAID,GAxCQ,EAwCN,CAACpC,IAAD,CAxCM,CAAT;AAyCA,QAAMuC,OAAO,GAAGpC,KAAK,CAAC,QAAD,CAAL,GAAiB,SAAjB,GAA2B,EAA3C;AACA,sBACE,uDACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAACqC,MAAAA,SAAS,EAAC;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAC;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAC,CAAf;AAAiBD,MAAAA,QAAQ,EAAC,EAA1B;AAA8BE,MAAAA,YAAY,EAAC;AAA3C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6DlC,WAAW,CAACmC,QAAZ,EAA7D,YAFF,eAGE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEvC,QAAlB;AAA4B,IAAA,YAAY,EAAEE,YAA1C;AAAwD,IAAA,eAAe,EAAEC,eAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF,eASI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,YAAY,KAAK,EAAjB,GAAsB,EAAtB,gBACC,uDACA,oBAAC,OAAD;AAAS,IAAA,EAAE,MAAX;AAAY,IAAA,EAAE,MAAd;AAAe,IAAA,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAE,IAAhB;AAAsB,IAAA,OAAO,EAAE,MAAI;AACjCK,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAJ,MAAAA,eAAe,CAAC,EAAD,CAAf;AACD,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIA,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAER,IAAZ;AAAkB,IAAA,WAAW,EAAEO,YAA/B;AAA6C,IAAA,KAAK,EAAEF,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,CADA,CADA,eASA,oBAAC,MAAD;AAAQ,IAAA,EAAE,MAAV;AAAW,IAAA,EAAE,MAAb;AAAc,IAAA,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEL,IAAZ;AAAkB,IAAA,WAAW,EAAEO,YAA/B;AAA6C,IAAA,KAAK,EAAEF,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATA,CAFF,CATJ,CADF,CADF;AA+BD;;AAED,eAAeN,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  getStakeLockupDuration,\n  getRewardPerBlock,\n  getTotalStaked\n} from '../../utils/infura';\nimport {\n  Table, TableRow, TableCell, Text, useViewport, useTheme, Modal\n} from '@aragon/ui';\nimport { POOLS } from \"../../constants/contracts\";\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { COOK,UNI } from \"../../constants/tokens\";\nimport Pool from \"../Pool\";\nimport BigNumber from 'bignumber.js';\nimport colors from '../../constants/colors';\nimport ListTable from \"./ListTable\";\nimport { Container, Row, Col, Visible, Hidden } from 'react-grid-system';\n\nfunction PoolList({ user }: {user: string}) {\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n  const { within, below, above } = useViewport()\n  const [poolList, setPoolList] = useState([] as any);\n  const [selectedPool, setSelectedPool] = useState('');\n  const [totalStaked, setTotalStaked] = useState(new BigNumber(0));\n  const [openMobileModal, setOpenMobileModal] = useState(false)\n  const [hovered, setHovered] = useState('');\n  const theme = useTheme()\n  useEffect(() => {\n    let isCancelled = false;\n    // setPoolList([{name:\"4 UNI-V2 (WETH/COOK)\", address:\"0xf4B146FbA71F41E0592668ffbF264F1D186b2Ca8\",lockedUpPeriod:\"90 days\",rewardPerBlock:\"300\"}]);\n    async function updatePoolInfo() {\n      const poolList = await Promise.all(POOLS.map( async (pool)=>{\n        const [lockedup,reward] =\n        await Promise.all([\n            getStakeLockupDuration(pool.address),\n            getRewardPerBlock(pool.address)\n          ])\n        const poolRewardPerBlock = toTokenUnitsBN(reward, COOK.decimals);\n        return({\n          name: pool.name,\n          address: pool.address,\n          lockedUpPeriod: lockedup,\n          rewardPerBlock: poolRewardPerBlock\n        });\n      }));\n\n      const totalStakedBalance = await POOLS.reduce(async (sum, pool) => {\n        const staked = await getTotalStaked(pool.address);\n        return (await sum).plus(staked);\n      }, Promise.resolve(new BigNumber(0)));\n\n      const totalStaked = toTokenUnitsBN(totalStakedBalance, UNI.decimals);\n\n      if (!isCancelled) {\n        setPoolList(poolList);\n        setTotalStaked(totalStaked);\n      }\n    }\n    updatePoolInfo();\n\n    const id = setInterval(updatePoolInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n  const padding = below('medium')? '3pt 7pt':20\n  return (\n    <>\n      <Row>\n        <Col sm={12} lg={5}>\n          <div style={{textAlign:\"center\"}}>\n            <div style={{fontSize:40}}>Total Staked</div>\n            <div style={{ marginBottom:8,fontSize:40, paddingRight:10}}>{totalStaked.toString()} UNI-V2</div>\n            <ListTable pools={poolList} selectedPool={selectedPool} setSelectedPool={setSelectedPool}/>\n          </div>\n\n          </Col>\n          <Col sm={12} lg={7}>\n          {selectedPool === '' ? '' :\n            <>\n            <Visible sm xs md>\n            <Modal visible={true} onClose={()=>{\n              setOpenMobileModal(false)\n              setSelectedPool('')\n            }}>\n            <Pool user={user} poolAddress={selectedPool} pools={poolList}/>\n            </Modal>\n            </Visible>\n            <Hidden sm xs md>\n              <Pool user={user} poolAddress={selectedPool} pools={poolList}/>\n            </Hidden>\n            </>\n          }\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default PoolList;\n"]},"metadata":{},"sourceType":"module"}