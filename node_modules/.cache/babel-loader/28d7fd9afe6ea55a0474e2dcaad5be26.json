{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/cook-frontend/src/components/Distribution/Zap.tsx\";\nimport React, { useState } from 'react';\nimport { Box, Button, IconCirclePlus, Modal, Card } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { BalanceBlock, MaxButton, PriceSection } from '../common/index';\nimport { distributionZap, approve } from '../../utils/web3';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { COOK, WETH } from \"../../constants/tokens\";\nimport { CookDistribution } from \"../../constants/contracts\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport colors from '../../constants/colors';\nimport ActionButton from \"../common/ActionButton\";\n\nfunction Zap({\n  user,\n  pools,\n  cookAvailable,\n  wethBalance,\n  wethAllowance,\n  pairBalanceWETH,\n  pairBalanceCOOK\n}) {\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [wethAmount, setWethAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState('');\n\n  const open = pool => {\n    console.log(pool);\n    setOpened(pool);\n  };\n\n  const close = () => {\n    setOpened('');\n    setZapAmount(new BigNumber(0));\n    setWethAmount(new BigNumber(0));\n  };\n\n  const WETHToCOOKRatio = pairBalanceWETH.isZero() ? new BigNumber(1) : pairBalanceWETH.div(pairBalanceCOOK);\n\n  const onChangeAmountCOOK = amountCOOK => {\n    if (!amountCOOK) {\n      setWethAmount(new BigNumber(0));\n      return;\n    }\n\n    const amountCOOKBN = new BigNumber(amountCOOK);\n    setZapAmount(amountCOOKBN);\n    const amountCOOKBU = toBaseUnitBN(amountCOOKBN, COOK.decimals);\n    const newAmountWETH = toTokenUnitsBN(amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR), COOK.decimals);\n    setWethAmount(newAmountWETH);\n  };\n\n  const renderPoolZapPopup = (pool, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: pool.pool,\n      style: {\n        flexBasis: '25%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      width: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Pool(\", index + 1, \")\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Locked-up:\", pool.lockedUp, \" days\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"Reward/Block:\", pool.reward.toString()), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Staked:\", pool.staked.toString()), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Total Staked:\", pool.totalStaked.toString()), /*#__PURE__*/React.createElement(ActionButton, {\n      label: \"ZAP\",\n      color: colors.button,\n      onClick: () => {\n        open(pool.pool);\n      },\n      disabled: user === '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }))), renderPoolZap(pool));\n  };\n\n  const renderPoolZap = pool => {\n    return /*#__PURE__*/React.createElement(Modal, {\n      visible: opened === pool.pool,\n      closeButton: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flexBasis: '100%',\n        paddingTop: '2%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '60%',\n        minWidth: '6em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BigNumberInput, {\n      adornment: \"COOK\",\n      value: zapAmount,\n      setter: onChangeAmountCOOK,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(PriceSection, {\n      label: \"Requires \",\n      amt: wethAmount,\n      symbol: \" WETH\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(MaxButton, {\n      onClick: () => {\n        onChangeAmountCOOK(cookAvailable);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    })), wethAllowance.comparedTo(wethAmount) > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '40%',\n        minWidth: '6em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      wide: true,\n      icon: /*#__PURE__*/React.createElement(IconCirclePlus, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 23\n        }\n      }),\n      label: \"Zap\",\n      onClick: () => {\n        distributionZap(CookDistribution, pool.pool, toBaseUnitBN(zapAmount, COOK.decimals), hash => {\n          close();\n        });\n      },\n      disabled: user === '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '40%',\n        minWidth: '6em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      wide: true,\n      icon: /*#__PURE__*/React.createElement(IconCirclePlus, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }),\n      label: \"Approve\",\n      onClick: () => {\n        approve(WETH.addr, CookDistribution);\n      },\n      disabled: pool.pool === '' || user === '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    })))), /*#__PURE__*/React.createElement(Button, {\n      wide: true,\n      label: \"Close\",\n      onClick: () => {\n        close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    heading: \"Zap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexBasis: '32%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BalanceBlock, {\n    asset: \"Available COOK\",\n    balance: cookAvailable,\n    suffix: \"COOK\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexBasis: '32%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BalanceBlock, {\n    asset: \"WETH Balance\",\n    balance: wethBalance,\n    suffix: \"WETH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, pools.map((pool, index) => {\n    return renderPoolZapPopup(pool, index);\n  })));\n}\n\nexport default Zap;","map":{"version":3,"sources":["/Users/huanwen/Work/cook-frontend/src/components/Distribution/Zap.tsx"],"names":["React","useState","Box","Button","IconCirclePlus","Modal","Card","BigNumber","BalanceBlock","MaxButton","PriceSection","distributionZap","approve","toBaseUnitBN","toTokenUnitsBN","COOK","WETH","CookDistribution","BigNumberInput","colors","ActionButton","Zap","user","pools","cookAvailable","wethBalance","wethAllowance","pairBalanceWETH","pairBalanceCOOK","zapAmount","setZapAmount","wethAmount","setWethAmount","opened","setOpened","open","pool","console","log","close","WETHToCOOKRatio","isZero","div","onChangeAmountCOOK","amountCOOK","amountCOOKBN","amountCOOKBU","decimals","newAmountWETH","multipliedBy","integerValue","ROUND_FLOOR","renderPoolZapPopup","index","flexBasis","lockedUp","reward","toString","staked","totalStaked","button","renderPoolZap","paddingTop","display","width","minWidth","comparedTo","hash","addr","flexWrap","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box, Button, IconCircleMinus, IconArrowUp, IconCirclePlus, Modal, Card\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock, MaxButton, PriceSection\n} from '../common/index';\nimport {distributionZap, approve} from '../../utils/web3';\nimport {getTokenAllowance} from '../../utils/infura';\nimport {isPos, toBaseUnitBN, toTokenUnitsBN} from '../../utils/number';\nimport {COOK, WETH, UNI} from \"../../constants/tokens\";\nimport {CookDistribution} from \"../../constants/contracts\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport {MAX_UINT256} from \"../../constants/values\";\nimport colors from '../../constants/colors';\nimport ActionButton from \"../common/ActionButton\";\n\ntype ZapProps = {\n  user: string,\n  pools: Array<{pool:string,lockedUp:number,reward:BigNumber,staked:BigNumber,totalStaked:BigNumber}>,\n  cookAvailable: BigNumber,\n  wethBalance: BigNumber,\n  wethAllowance: BigNumber,\n  pairBalanceWETH: BigNumber,\n  pairBalanceCOOK: BigNumber\n};\n\nfunction Zap({\n  user, pools, cookAvailable, wethBalance, wethAllowance, pairBalanceWETH, pairBalanceCOOK\n}: ZapProps) {\n\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [wethAmount, setWethAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState('')\n\n  const open = (pool:string) => {\n    console.log(pool);\n    setOpened(pool);\n\n  }\n  const close = () => {\n    setOpened('');\n    setZapAmount(new BigNumber(0));\n    setWethAmount(new BigNumber(0));\n  }\n\n  const WETHToCOOKRatio = pairBalanceWETH.isZero() ? new BigNumber(1) : pairBalanceWETH.div(pairBalanceCOOK);\n\n  const onChangeAmountCOOK = (amountCOOK) => {\n    if (!amountCOOK) {\n      setWethAmount(new BigNumber(0));\n      return;\n    }\n\n    const amountCOOKBN = new BigNumber(amountCOOK)\n    setZapAmount(amountCOOKBN);\n\n    const amountCOOKBU = toBaseUnitBN(amountCOOKBN, COOK.decimals);\n    const newAmountWETH = toTokenUnitsBN(\n      amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR),\n      COOK.decimals);\n    setWethAmount(newAmountWETH);\n  };\n\n  const renderPoolZapPopup = (pool,index) => {\n\n    return(\n      <div key={pool.pool} style={{flexBasis: '25%'}}>\n        <div>\n          <Card width='100%'>\n          <div>Pool({index+1})</div>\n          <div>Locked-up:{pool.lockedUp} days</div>\n          <div>Reward/Block:{pool.reward.toString()}</div>\n          <div>Staked:{pool.staked.toString()}</div>\n          <div>Total Staked:{pool.totalStaked.toString()}</div>\n          <ActionButton label={\"ZAP\"} color={colors.button} onClick={()=>{\n            open(pool.pool);\n          }} disabled={user === ''}/>\n          </Card>\n        </div>\n        {renderPoolZap(pool)}\n      </div>\n    )\n\n  }\n\n  const renderPoolZap = (pool) => {\n    return(\n      <Modal visible={opened === pool.pool} closeButton={false}>\n      <div style={{flexBasis: '100%', paddingTop: '2%'}}>\n        <div style={{display: 'flex'}}>\n          <div style={{width: '60%', minWidth: '6em'}}>\n              <BigNumberInput\n                adornment=\"COOK\"\n                value={zapAmount}\n                setter={onChangeAmountCOOK}\n              />\n              <PriceSection label=\"Requires \" amt={wethAmount} symbol=\" WETH\"/>\n              <MaxButton\n                onClick={() => {\n                  onChangeAmountCOOK(cookAvailable);\n                }}\n              />\n          </div>\n          {wethAllowance.comparedTo(wethAmount) > 0 ?\n            <div style={{width: '40%', minWidth: '6em'}}>\n              <Button\n                wide\n                icon={<IconCirclePlus/>}\n                label=\"Zap\"\n                onClick={() => {\n                  distributionZap(\n                    CookDistribution,\n                    pool.pool,\n                    toBaseUnitBN(zapAmount, COOK.decimals),\n                    (hash) => {\n                      close()\n                    }\n                  );\n\n                }}\n                disabled={user === ''}\n              />\n            </div>\n          :\n          <div style={{width: '40%', minWidth: '6em'}}>\n            <Button\n              wide\n              icon={<IconCirclePlus/>}\n              label=\"Approve\"\n              onClick={() => {\n                approve(WETH.addr, CookDistribution);\n              }}\n              disabled={pool.pool === '' || user === ''}\n            />\n          </div>\n          }\n        </div>\n      </div>\n      <Button\n        wide\n        label=\"Close\"\n        onClick={() => {\n          close();\n        }}\n      />\n      </Modal>\n    )\n  }\n\n  return (\n    <Box heading=\"Zap\">\n      <div style={{display: 'flex', flexWrap: 'wrap'}}>\n        {/* total rewarded */}\n        <div style={{flexBasis: '32%'}}>\n          <BalanceBlock asset=\"Available COOK\" balance={cookAvailable} suffix={\"COOK\"} />\n\n        </div>\n        <div style={{flexBasis: '32%'}}>\n        <BalanceBlock asset=\"WETH Balance\" balance={wethBalance} suffix={\"WETH\"} />\n        </div>\n\n        {/* Provide liquidity using Pool rewards */}\n      </div>\n      <div style={{display: 'flex', flexWrap: 'wrap'}}>\n      {pools.map((pool,index) => {\n        return(\n          renderPoolZapPopup(pool,index)\n        )\n      })}\n      </div>\n    </Box>\n  );\n}\n\nexport default Zap;\n"]},"metadata":{},"sourceType":"module"}