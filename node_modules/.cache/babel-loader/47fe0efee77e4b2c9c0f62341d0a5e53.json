{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/cook-frontend/src/components/Admin/index.tsx\";\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { POOLS, CookDistribution, Oracle, PriceConsumer } from \"../../constants/contracts\";\nimport IconHeader from \"../common/IconHeader\";\nimport SetParam from \"./SetParam\";\nimport SetDay from \"./SetDay\";\nimport SetPrice from \"./SetPrice\";\n\nfunction Admin({\n  user\n}) {\n  const {\n    override\n  } = useParams();\n\n  if (override) {\n    user = override;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconHeader, {\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-parachute-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }\n    }),\n    text: \"Admin Functions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SetDay, {\n    user: user,\n    cookDistribution: CookDistribution,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SetPrice, {\n    user: user,\n    oracle: Oracle,\n    priceComsumer: PriceConsumer,\n    cookDistribution: CookDistribution,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), POOLS.map(pool => {\n    return /*#__PURE__*/React.createElement(SetParam, {\n      key: pool.address,\n      user: user,\n      poolAddress: pool.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    });\n  }));\n}\n\nexport default Admin;","map":{"version":3,"sources":["/Users/huanwen/Work/cook-frontend/src/components/Admin/index.tsx"],"names":["React","useParams","POOLS","CookDistribution","Oracle","PriceConsumer","IconHeader","SetParam","SetDay","SetPrice","Admin","user","override","map","pool","address"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,SAAQC,KAAR,EAAeC,gBAAf,EAAiCC,MAAjC,EAAyCC,aAAzC,QAA6D,2BAA7D;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAyC;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAeX,SAAS,EAA9B;;AACA,MAAIW,QAAJ,EAAc;AACZD,IAAAA,IAAI,GAAGC,QAAP;AACD;;AAED,sBACE,uDACE,oBAAC,UAAD;AAAY,IAAA,IAAI,eAAE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB;AAAyD,IAAA,IAAI,EAAC,iBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAED,IADR;AAEE,IAAA,gBAAgB,EAAER,gBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAME,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEQ,IADR;AAEE,IAAA,MAAM,EAAEP,MAFV;AAGE,IAAA,aAAa,EAAEC,aAHjB;AAIE,IAAA,gBAAgB,EAAEF,gBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAaID,KAAK,CAACW,GAAN,CAAUC,IAAI,IAAI;AAClB,wBACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,OAApB;AACE,MAAA,IAAI,EAAEJ,IADR;AAEE,MAAA,WAAW,EAAEG,IAAI,CAACC,OAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD,GAPC,CAbJ,CADF;AAyBD;;AAED,eAAeL,KAAf","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {POOLS, CookDistribution, Oracle, PriceConsumer} from \"../../constants/contracts\";\nimport IconHeader from \"../common/IconHeader\";\nimport SetParam from \"./SetParam\";\nimport SetDay from \"./SetDay\";\nimport SetPrice from \"./SetPrice\";\n\nfunction Admin({ user }: {user: string}) {\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n\n  return (\n    <>\n      <IconHeader icon={<i className=\"fas fa-parachute-box\"/>} text=\"Admin Functions\"/>\n      <SetDay\n        user={user}\n        cookDistribution={CookDistribution}\n      />\n      <SetPrice\n        user={user}\n        oracle={Oracle}\n        priceComsumer={PriceConsumer}\n        cookDistribution={CookDistribution}\n      />\n      {\n        POOLS.map(pool => {\n        return(\n          <SetParam key={pool.address}\n            user={user}\n            poolAddress={pool.address}\n          />\n        )\n      })\n    }\n    </>\n  );\n}\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}