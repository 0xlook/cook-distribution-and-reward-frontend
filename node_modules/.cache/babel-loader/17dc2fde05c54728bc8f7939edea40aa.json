{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/Cook/cook-frontend/src/components/Distribution/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport BigNumber from 'bignumber.js';\nimport { getDistributionVestingAmount, getDistributionVestedAmount, getDistributionAvalibleAmount, getDistributionStartTimestamp, getTodayNumber, getTokenAllowance, getTokenBalance, getStakeLockupDuration, getRewardPerBlock, getTotalStaked, getPoolBalanceOfStaked } from '../../utils/infura';\nimport { COOK, UNI, WETH } from \"../../constants/tokens\";\nimport { CookDistribution, POOLS } from \"../../constants/contracts\";\nimport { toTokenUnitsBN } from '../../utils/number';\nimport WithdrawPageHeader from \"./Header\";\nimport Withdraw from \"./Withdraw\";\nimport LinearText from \"../common/LinearText\";\nimport DistributionZap from \"./DistributionZap\";\nimport ZapCook from \"./ZapCook\";\nimport { Row, Col } from 'react-grid-system';\nimport colors from '../../constants/colors';\nimport { useViewport } from '@aragon/ui';\n\nfunction Distribution({\n  user\n}) {\n  const {\n    override\n  } = useParams();\n\n  if (override) {\n    user = override;\n  }\n\n  const {\n    below\n  } = useViewport();\n  const [userWETHBalance, setUserWETHBalance] = useState(new BigNumber(0));\n  const [userWETHAllowance, setUserWETHAllowance] = useState(new BigNumber(0));\n  const [pairBalanceCOOK, setPairBalanceCOOK] = useState(new BigNumber(0));\n  const [pairBalanceWETH, setPairBalanceWETH] = useState(new BigNumber(0));\n  const [userVestingBalance, setUserVestingBalance] = useState(new BigNumber(0));\n  const [userVestedBalance, setUserVestedBalance] = useState(new BigNumber(0));\n  const [userAvalibleBalance, setUserAvalibleBalance] = useState(new BigNumber(0));\n  const [startDay, setStartDay] = useState(new BigNumber(0));\n  const [today, setToday] = useState(new BigNumber(0));\n  const [managedPools, setManagedPools] = useState([]); //Update User balances\n\n  useEffect(() => {\n    if (user === '') {\n      setUserVestingBalance(new BigNumber(0));\n      setUserVestedBalance(new BigNumber(0));\n      setUserAvalibleBalance(new BigNumber(0));\n      setPairBalanceCOOK(new BigNumber(0));\n      setPairBalanceWETH(new BigNumber(0));\n      setUserWETHBalance(new BigNumber(0));\n      setUserWETHAllowance(new BigNumber(0));\n      setStartDay(new BigNumber(0));\n      setToday(new BigNumber(0));\n      setManagedPools([]);\n      return;\n    }\n\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [vestingBalance, vestedBalance, avalibleBalance, startTimeStamp, tDay, pairBalanceCOOKStr, pairBalanceWETHStr, wethBalance, wethAllowance] = await Promise.all([getDistributionVestingAmount(CookDistribution, user), getDistributionVestedAmount(CookDistribution, user), getDistributionAvalibleAmount(CookDistribution, user), getDistributionStartTimestamp(CookDistribution), getTodayNumber(CookDistribution), getTokenBalance(COOK.addr, UNI.addr), getTokenBalance(WETH.addr, UNI.addr), getTokenBalance(WETH.addr, user), getTokenAllowance(WETH.addr, user, CookDistribution)]);\n      console.log('wethAllowance', wethAllowance);\n      const userVestingBalance = toTokenUnitsBN(vestingBalance, COOK.decimals);\n      const userVestedBalance = toTokenUnitsBN(vestedBalance, COOK.decimals);\n      const userAvalibleBalance = toTokenUnitsBN(avalibleBalance, COOK.decimals);\n      const startDay = new BigNumber(startTimeStamp).div(86400).decimalPlaces(0, 1);\n      const todayNumber = new BigNumber(tDay);\n      const pairCOOKBalance = toTokenUnitsBN(pairBalanceCOOKStr, COOK.decimals);\n      const pairWETHBalance = toTokenUnitsBN(pairBalanceWETHStr, WETH.decimals);\n      const userWETHBalance = toTokenUnitsBN(wethBalance, WETH.decimals);\n      const poolList = await Promise.all(POOLS.map(async pool => {\n        const [lockedup, reward, staked, totalStaked] = await Promise.all([getStakeLockupDuration(pool.address), getRewardPerBlock(pool.address), getTotalStaked(pool.address), getPoolBalanceOfStaked(pool.address, user)]);\n        const totalStakedBalance = toTokenUnitsBN(totalStaked, UNI.decimals);\n        const userTotalStakedBalance = toTokenUnitsBN(staked, UNI.decimals);\n        const poolRewardPerBlock = toTokenUnitsBN(reward, COOK.decimals);\n        return {\n          pool: pool.address,\n          lockedUp: lockedup,\n          reward: poolRewardPerBlock,\n          staked: userTotalStakedBalance,\n          totalStaked: totalStakedBalance,\n          name: pool.name,\n          address: pool.address,\n          lockedUpPeriod: lockedup,\n          rewardPerBlock: poolRewardPerBlock\n        };\n      }));\n\n      if (!isCancelled) {\n        setUserVestingBalance(new BigNumber(userVestingBalance));\n        setUserVestedBalance(new BigNumber(userVestedBalance));\n        setUserAvalibleBalance(new BigNumber(userAvalibleBalance));\n        setStartDay(new BigNumber(startDay));\n        setToday(new BigNumber(todayNumber));\n        setPairBalanceCOOK(new BigNumber(pairCOOKBalance));\n        setPairBalanceWETH(new BigNumber(pairWETHBalance));\n        setUserWETHBalance(new BigNumber(userWETHBalance));\n        setManagedPools(poolList);\n        console.log(wethAllowance);\n        setUserWETHAllowance(new BigNumber(wethAllowance));\n      }\n    }\n\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 1000); // eslint-disable-next-line consistent-return\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, \"Distribution\"), /*#__PURE__*/React.createElement(LinearText, {\n    text: \"Manage Cook balance for presale parties\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 30,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '40px 30px',\n      backgroundColor: below(\"medium\") ? \"transparent\" : colors.secondary,\n      width: \"100%\",\n      margin: \"10pt auto\",\n      textAlign: \"center\",\n      borderRadius: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WithdrawPageHeader, {\n    accountVestingBalance: userVestingBalance,\n    accountAvalibleBalance: userAvalibleBalance,\n    accountVestedBalance: userVestedBalance,\n    todayNumber: today,\n    startDayNumber: startDay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Withdraw, {\n    user: user,\n    vestingAmount: userVestingBalance,\n    availableAmount: userAvalibleBalance,\n    records: [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DistributionZap, {\n    user: user,\n    pools: managedPools,\n    cookAvailable: userAvalibleBalance,\n    wethBalance: userWETHBalance,\n    wethAllowance: userWETHAllowance,\n    pairBalanceWETH: pairBalanceWETH,\n    pairBalanceCOOK: pairBalanceCOOK,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ZapCook, {\n    user: user,\n    pools: managedPools,\n    cookAvailable: userAvalibleBalance,\n    wethBalance: userWETHBalance,\n    wethAllowance: userWETHAllowance,\n    pairBalanceWETH: pairBalanceWETH,\n    pairBalanceCOOK: pairBalanceCOOK,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Distribution;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/Distribution/index.tsx"],"names":["React","useState","useEffect","useParams","BigNumber","getDistributionVestingAmount","getDistributionVestedAmount","getDistributionAvalibleAmount","getDistributionStartTimestamp","getTodayNumber","getTokenAllowance","getTokenBalance","getStakeLockupDuration","getRewardPerBlock","getTotalStaked","getPoolBalanceOfStaked","COOK","UNI","WETH","CookDistribution","POOLS","toTokenUnitsBN","WithdrawPageHeader","Withdraw","LinearText","DistributionZap","ZapCook","Row","Col","colors","useViewport","Distribution","user","override","below","userWETHBalance","setUserWETHBalance","userWETHAllowance","setUserWETHAllowance","pairBalanceCOOK","setPairBalanceCOOK","pairBalanceWETH","setPairBalanceWETH","userVestingBalance","setUserVestingBalance","userVestedBalance","setUserVestedBalance","userAvalibleBalance","setUserAvalibleBalance","startDay","setStartDay","today","setToday","managedPools","setManagedPools","isCancelled","updateUserInfo","vestingBalance","vestedBalance","avalibleBalance","startTimeStamp","tDay","pairBalanceCOOKStr","pairBalanceWETHStr","wethBalance","wethAllowance","Promise","all","addr","console","log","decimals","div","decimalPlaces","todayNumber","pairCOOKBalance","pairWETHBalance","poolList","map","pool","lockedup","reward","staked","totalStaked","address","totalStakedBalance","userTotalStakedBalance","poolRewardPerBlock","lockedUp","name","lockedUpPeriod","rewardPerBlock","id","setInterval","clearInterval","padding","marginTop","display","alignItems","backgroundColor","secondary","width","margin","textAlign","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  getDistributionVestingAmount,\n  getDistributionVestedAmount,\n  getDistributionAvalibleAmount,\n  getDistributionStartTimestamp,\n  getTodayNumber,\n  getTokenAllowance,\n  getTokenBalance,\n  getStakeLockupDuration,\n  getRewardPerBlock,\n  getTotalStaked,\n  getPoolBalanceOfStaked\n} from '../../utils/infura';\nimport { COOK, UNI, WETH } from \"../../constants/tokens\";\nimport { CookDistribution, POOLS } from \"../../constants/contracts\";\nimport { toTokenUnitsBN } from '../../utils/number';\nimport WithdrawPageHeader from \"./Header\";\nimport Withdraw from \"./Withdraw\";\nimport LinearText from \"../common/LinearText\";\nimport DistributionZap from \"./DistributionZap\";\nimport ZapCook from \"./ZapCook\";\nimport { Row, Col } from 'react-grid-system';\nimport colors from '../../constants/colors';\nimport {\n  useViewport\n} from '@aragon/ui';\n\nfunction Distribution({ user }: { user: string }) {\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n  const { below } = useViewport()\n  const [userWETHBalance, setUserWETHBalance] = useState(new BigNumber(0));\n  const [userWETHAllowance, setUserWETHAllowance] = useState(new BigNumber(0));\n\n  const [pairBalanceCOOK, setPairBalanceCOOK] = useState(new BigNumber(0));\n  const [pairBalanceWETH, setPairBalanceWETH] = useState(new BigNumber(0));\n\n\n  const [userVestingBalance, setUserVestingBalance] = useState(new BigNumber(0));\n  const [userVestedBalance, setUserVestedBalance] = useState(new BigNumber(0));\n  const [userAvalibleBalance, setUserAvalibleBalance] = useState(new BigNumber(0));\n\n  const [startDay, setStartDay] = useState(new BigNumber(0));\n  const [today, setToday] = useState(new BigNumber(0));\n  const [managedPools, setManagedPools] = useState([] as any);\n\n\n  //Update User balances\n  useEffect(() => {\n    if (user === '') {\n      setUserVestingBalance(new BigNumber(0));\n      setUserVestedBalance(new BigNumber(0));\n      setUserAvalibleBalance(new BigNumber(0));\n      setPairBalanceCOOK(new BigNumber(0));\n      setPairBalanceWETH(new BigNumber(0));\n      setUserWETHBalance(new BigNumber(0));\n      setUserWETHAllowance(new BigNumber(0));\n      setStartDay(new BigNumber(0));\n      setToday(new BigNumber(0));\n      setManagedPools([]);\n      return;\n    }\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [\n        vestingBalance,\n        vestedBalance,\n        avalibleBalance,\n        startTimeStamp,\n        tDay,\n        pairBalanceCOOKStr,\n        pairBalanceWETHStr,\n        wethBalance,\n        wethAllowance\n      ] = await Promise.all([\n        getDistributionVestingAmount(CookDistribution, user),\n        getDistributionVestedAmount(CookDistribution, user),\n        getDistributionAvalibleAmount(CookDistribution, user),\n        getDistributionStartTimestamp(CookDistribution),\n        getTodayNumber(CookDistribution),\n        getTokenBalance(COOK.addr, UNI.addr),\n        getTokenBalance(WETH.addr, UNI.addr),\n        getTokenBalance(WETH.addr, user),\n        getTokenAllowance(WETH.addr, user, CookDistribution)\n      ]);\n      console.log('wethAllowance', wethAllowance);\n      const userVestingBalance = toTokenUnitsBN(vestingBalance, COOK.decimals);\n      const userVestedBalance = toTokenUnitsBN(vestedBalance, COOK.decimals);\n      const userAvalibleBalance = toTokenUnitsBN(avalibleBalance, COOK.decimals);\n      const startDay = new BigNumber(startTimeStamp).div(86400).decimalPlaces(0, 1);\n      const todayNumber = new BigNumber(tDay);\n\n      const pairCOOKBalance = toTokenUnitsBN(pairBalanceCOOKStr, COOK.decimals);\n      const pairWETHBalance = toTokenUnitsBN(pairBalanceWETHStr, WETH.decimals);\n      const userWETHBalance = toTokenUnitsBN(wethBalance, WETH.decimals);\n\n\n      const poolList = await Promise.all(POOLS.map(async (pool) => {\n        const [lockedup, reward, staked, totalStaked] =\n          await Promise.all([\n            getStakeLockupDuration(pool.address),\n            getRewardPerBlock(pool.address),\n            getTotalStaked(pool.address),\n            getPoolBalanceOfStaked(pool.address, user)\n          ])\n\n        const totalStakedBalance = toTokenUnitsBN(totalStaked, UNI.decimals);\n        const userTotalStakedBalance = toTokenUnitsBN(staked, UNI.decimals);\n        const poolRewardPerBlock = toTokenUnitsBN(reward, COOK.decimals);\n\n\n        return ({\n          pool: pool.address, lockedUp: lockedup, reward: poolRewardPerBlock, staked: userTotalStakedBalance, totalStaked: totalStakedBalance,\n          name: pool.name,\n          address: pool.address,\n          lockedUpPeriod: lockedup,\n          rewardPerBlock: poolRewardPerBlock\n        })\n      }))\n\n      if (!isCancelled) {\n        setUserVestingBalance(new BigNumber(userVestingBalance));\n        setUserVestedBalance(new BigNumber(userVestedBalance));\n        setUserAvalibleBalance(new BigNumber(userAvalibleBalance));\n        setStartDay(new BigNumber(startDay));\n        setToday(new BigNumber(todayNumber));\n\n        setPairBalanceCOOK(new BigNumber(pairCOOKBalance));\n        setPairBalanceWETH(new BigNumber(pairWETHBalance));\n        setUserWETHBalance(new BigNumber(userWETHBalance));\n        setManagedPools(poolList)\n        console.log(wethAllowance);\n        setUserWETHAllowance(new BigNumber(wethAllowance));\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 1000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n\n  return (\n    <div style={{ padding: '2%' }}>\n      <div className=\"title\">Distribution</div>\n      <LinearText text={\"Manage Cook balance for presale parties\"} />\n      <div style={{ marginTop: 30, display: 'flex', alignItems: 'center' }}>\n\n        <div style={{\n          padding: '40px 30px',\n          backgroundColor: below(\"medium\") ? \"transparent\" : colors.secondary,\n          width: \"100%\", margin: \"10pt auto\", textAlign: \"center\", borderRadius: 20\n        }}>\n          <WithdrawPageHeader\n            accountVestingBalance={userVestingBalance}\n            accountAvalibleBalance={userAvalibleBalance}\n            accountVestedBalance={userVestedBalance}\n            todayNumber={today}\n            startDayNumber={startDay}\n          />\n          <Row style={{ marginTop: 100 }}>\n            <Col xs={12} md={4}>\n              <Withdraw\n                user={user}\n                vestingAmount={userVestingBalance}\n                availableAmount={userAvalibleBalance}\n                records={[]}\n              />\n            </Col>\n            <Col xs={12} md={4} >\n              <DistributionZap\n                user={user}\n                pools={managedPools}\n                cookAvailable={userAvalibleBalance}\n                wethBalance={userWETHBalance}\n                wethAllowance={userWETHAllowance}\n                pairBalanceWETH={pairBalanceWETH}\n                pairBalanceCOOK={pairBalanceCOOK}\n              />\n            </Col>\n            <Col xs={12} md={4} >\n              <ZapCook\n                user={user}\n                pools={managedPools}\n                cookAvailable={userAvalibleBalance}\n                wethBalance={userWETHBalance}\n                wethAllowance={userWETHAllowance}\n                pairBalanceWETH={pairBalanceWETH}\n                pairBalanceCOOK={pairBalanceCOOK}\n              />\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Distribution;\n"]},"metadata":{},"sourceType":"module"}