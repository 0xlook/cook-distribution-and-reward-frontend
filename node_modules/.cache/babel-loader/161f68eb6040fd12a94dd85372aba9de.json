{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/Cook/cook-frontend/src/components/PoolList/ListTable.tsx\";\nimport React, { useState } from 'react';\nimport { Table, TableRow, TableCell, Text, useViewport, useTheme, ContextMenu, ContextMenuItem } from '@aragon/ui';\nimport colors from '../../constants/colors';\nimport Span from \"../common/Span\";\nimport { Row, Col } from 'react-grid-system';\nimport styled from \"styled-components\";\n\nfunction ListTable({\n  pools,\n  selectedPool,\n  setSelectedPool,\n  detailMode,\n  action\n}) {\n  const {\n    below\n  } = useViewport();\n  const [hovered, setHovered] = useState('');\n  const theme = useTheme();\n  const breakpoint = 'medium';\n  const width = '100%';\n  const padding = below(breakpoint) ? '7px 4px' : '10pt 15pt';\n\n  if (below(breakpoint)) {\n    return /*#__PURE__*/React.createElement(Table, {\n      style: {\n        fontSize: 12,\n        width,\n        margin: \"20px auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, pools && pools.map(pool => {\n      const selectedColor = selectedPool === pool.address ? theme.surfaceSelected : \"transparent\";\n      return /*#__PURE__*/React.createElement(TableRow, {\n        style: {\n          color: 'white',\n          cursor: hovered === pool.address ? 'pointer' : 'auto'\n        },\n        onMouseEnter: () => {\n          setHovered(pool.address);\n        },\n        onMouseLeave: () => {\n          setHovered('');\n        },\n        key: pool.address,\n        onClick: () => {\n          setSelectedPool && setSelectedPool(pool.address);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          backgroundColor: selectedColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"100%\",\n          padding\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Span, {\n        label: \"open\",\n        size: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 28\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          marginLeft: 5,\n          fontSize: 14\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 61\n        }\n      }, pool.name)), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          marginTop: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, pool.lockedUpPeriod, \"days\"), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, 0, \"%\"), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }, \"100k\"), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, \"0\"))), /*#__PURE__*/React.createElement(Col, {\n        xs: 2,\n        style: {\n          padding: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ContextMenu, {\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ContextMenuItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, selectedPool === pool.address ? action : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 69\n        }\n      }))))))));\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(StyledTable, {\n    style: {\n      width,\n      margin: \"20px auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableRow, {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      padding,\n      backgroundColor: 'transparent'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"LP TOKEN\")), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      padding,\n      backgroundColor: 'transparent'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"LOCK-UP \", below('medium') && /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 45\n    }\n  }), \" PERIOD\")), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      padding,\n      backgroundColor: 'transparent'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"APY\")), detailMode && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      padding,\n      backgroundColor: 'transparent'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"POOL SIZE\")), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      padding,\n      backgroundColor: 'transparent'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \"YOUR STAKE\")), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      padding,\n      backgroundColor: 'transparent'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"STATUS\"))), action && /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      padding,\n      backgroundColor: 'transparent'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"ACTION\"))), pools && pools.map(pool => {\n    const selectedColor = selectedPool === pool.address ? theme.surfaceSelected : \"transparent\";\n    return /*#__PURE__*/React.createElement(TableRow, {\n      style: {\n        color: 'white',\n        cursor: hovered === pool.address ? 'pointer' : 'auto'\n      },\n      onMouseEnter: () => {\n        setHovered(pool.address);\n      },\n      onMouseLeave: () => {\n        setHovered('');\n      },\n      key: pool.address,\n      onClick: () => {\n        setSelectedPool && setSelectedPool(pool.address);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        backgroundColor: selectedColor,\n        padding\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, pool.name)), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        backgroundColor: selectedColor,\n        padding\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, pool.lockedUpPeriod, \" days\")), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        backgroundColor: selectedColor,\n        padding\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, 0, \"%\")), detailMode && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        backgroundColor: selectedColor,\n        padding\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, \"100k\")), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        backgroundColor: selectedColor,\n        padding\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, \"0\")), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        backgroundColor: selectedColor,\n        padding\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Span, {\n      label: \"open\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }))), action && /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        backgroundColor: selectedColor,\n        padding: '0 5px',\n        minWidth: below(1200) ? '120px' : '400px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, selectedPool === pool.address ? action : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 61\n      }\n    })));\n  }));\n}\n\nconst StyledTable = styled(Table)`\n  background: \n  linear-gradient(#0A0A2A,#0A0A2A) padding-box, ${colors.linear} border-box;\n  border: 2px solid transparent;\n  border-radius:5px;\n`;\nconst StyledTableRow = styled(TableRow)`\nbackground: \nlinear-gradient(#0A0A2A,#0A0A2A) padding-box, ${colors.linear} border-box;\n  border-bottom: 2px solid transparent;\n  td {\n      background: transparent;\n      border-top: 0 !important;\n      border-bottom: 2px solid transparent;\n  }\n\n`;\nexport default ListTable;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/PoolList/ListTable.tsx"],"names":["React","useState","Table","TableRow","TableCell","Text","useViewport","useTheme","ContextMenu","ContextMenuItem","colors","Span","Row","Col","styled","ListTable","pools","selectedPool","setSelectedPool","detailMode","action","below","hovered","setHovered","theme","breakpoint","width","padding","fontSize","margin","map","pool","selectedColor","address","surfaceSelected","color","cursor","backgroundColor","marginLeft","name","marginTop","lockedUpPeriod","fontWeight","minWidth","StyledTable","linear","StyledTableRow"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Table, TableRow, TableCell, Text, useViewport, useTheme, ContextMenu, ContextMenuItem\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport colors from '../../constants/colors';\nimport Span from \"../common/Span\";\nimport { Container, Row, Col } from 'react-grid-system';\nimport styled from \"styled-components\";\n\n\ntype PoolProps = { name: string, address: string, rewardPerBlock: BigNumber, lockedUpPeriod: BigNumber };\n\nfunction ListTable({ pools, selectedPool, setSelectedPool, detailMode, action }: {\n  pools?: Array<PoolProps>, selectedPool: string,\n  setSelectedPool?: Function, detailMode?: boolean, action?: any\n}) {\n\n  const { below } = useViewport()\n  const [hovered, setHovered] = useState('');\n  const theme = useTheme();\n  const breakpoint = 'medium'\n  const width = '100%'\n  const padding = below(breakpoint) ? '7px 4px' : '10pt 15pt'\n\n  if (below(breakpoint)) {\n    return (\n      <Table style={{ fontSize: 12, width, margin: \"20px auto\" }}>\n        {pools && pools.map(pool => {\n          const selectedColor = selectedPool === pool.address ? theme.surfaceSelected : \"transparent\"\n          return (\n            <TableRow\n              style={{ color: 'white', cursor: hovered === pool.address ? 'pointer' : 'auto' }}\n              onMouseEnter={() => {\n                setHovered(pool.address);\n              }}\n              onMouseLeave={() => {\n                setHovered('');\n              }}\n              key={pool.address}\n              onClick={() => {\n                setSelectedPool && setSelectedPool(pool.address)\n              }}\n            >\n              <TableCell style={{ backgroundColor: selectedColor }}>\n                <div style={{ width: \"100%\", padding }}>\n                  <Row>\n                    <Col xs={10}>\n                      <Row><Span label={\"open\"} size={10} /><span style={{ marginLeft: 5, fontSize: 14 }}>{pool.name}</span></Row>\n                      <Row style={{ marginTop: 5 }}>\n                        <Col>{pool.lockedUpPeriod}days</Col>\n                        <Col>{0}%</Col>\n                        <Col>100k</Col>\n                        <Col>0</Col>\n                      </Row>\n                    </Col>\n                    <Col xs={2} style={{ padding: 0 }}>\n                      <ContextMenu style={{ width: \"100%\" }}>\n                        <ContextMenuItem>\n                          {selectedPool === pool.address ? action : <div />}\n                        </ContextMenuItem>\n                      </ContextMenu>\n                    </Col>\n                  </Row>\n                </div>\n              </TableCell>\n\n            </TableRow>\n          )\n        })}\n      </Table>\n    )\n  }\n\n\n  return (\n    <StyledTable style={{ width, margin: \"20px auto\" }}>\n      <StyledTableRow style={{ fontWeight: \"bold\" }}>\n        <TableCell style={{ padding, backgroundColor: 'transparent' }}>\n          <Text >LP TOKEN</Text>\n        </TableCell>\n        <TableCell style={{ padding, backgroundColor: 'transparent' }}>\n          <Text>LOCK-UP {below('medium') && <br />} PERIOD</Text>\n        </TableCell >\n        <TableCell style={{ padding, backgroundColor: 'transparent' }}>\n          <Text>APY</Text>\n        </TableCell>\n        {detailMode &&\n          <>\n            <TableCell style={{ padding, backgroundColor: 'transparent' }}>\n              <Text>POOL SIZE</Text>\n            </TableCell>\n            <TableCell style={{ padding, backgroundColor: 'transparent' }}>\n              <Text>YOUR STAKE</Text>\n            </TableCell>\n            <TableCell style={{ padding, backgroundColor: 'transparent' }}>\n              <Text>STATUS</Text>\n            </TableCell>\n\n          </>\n        }\n        {\n          action &&\n          <TableCell style={{ padding, backgroundColor: 'transparent' }}>\n            <Text>ACTION</Text>\n          </TableCell>\n        }\n      </StyledTableRow>\n      {pools && pools.map(pool => {\n        const selectedColor = selectedPool === pool.address ? theme.surfaceSelected : \"transparent\"\n\n        return (\n          <TableRow\n            style={{ color: 'white', cursor: hovered === pool.address ? 'pointer' : 'auto' }}\n            onMouseEnter={() => {\n              setHovered(pool.address);\n            }}\n            onMouseLeave={() => {\n              setHovered('');\n            }}\n            key={pool.address}\n            onClick={() => {\n              setSelectedPool && setSelectedPool(pool.address)\n            }}\n          >\n            <TableCell style={{ backgroundColor: selectedColor, padding }}>\n              <Text>{pool.name}</Text>\n            </TableCell>\n            <TableCell style={{ backgroundColor: selectedColor, padding }}>\n              <Text>{pool.lockedUpPeriod} days</Text>\n            </TableCell>\n            <TableCell style={{ backgroundColor: selectedColor, padding }}>\n              <Text>{0}%</Text>\n            </TableCell>\n            {detailMode &&\n              <>\n                <TableCell style={{ backgroundColor: selectedColor, padding }}>\n                  <Text>100k</Text>\n                </TableCell>\n                <TableCell style={{ backgroundColor: selectedColor, padding }}>\n                  <Text>0</Text>\n                </TableCell>\n                <TableCell style={{ backgroundColor: selectedColor, padding }}>\n                  <Span label={\"open\"} />\n                </TableCell>\n\n              </>}\n            {\n              action && (\n                <TableCell style={{ backgroundColor: selectedColor, padding: '0 5px', minWidth: below(1200) ? '120px' : '400px' }}>\n                  {selectedPool === pool.address ? action : <div />}\n                </TableCell>\n              )\n            }\n          </TableRow>\n        )\n      })}\n    </StyledTable>\n\n  );\n}\n\nconst StyledTable = styled(Table)`\n  background: \n  linear-gradient(#0A0A2A,#0A0A2A) padding-box, ${colors.linear} border-box;\n  border: 2px solid transparent;\n  border-radius:5px;\n`\n\nconst StyledTableRow = styled(TableRow)`\nbackground: \nlinear-gradient(#0A0A2A,#0A0A2A) padding-box, ${colors.linear} border-box;\n  border-bottom: 2px solid transparent;\n  td {\n      background: transparent;\n      border-top: 0 !important;\n      border-bottom: 2px solid transparent;\n  }\n\n`\n\n\nexport default ListTable;"]},"metadata":{},"sourceType":"module"}