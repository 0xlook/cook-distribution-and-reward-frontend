{"ast":null,"code":"var _jsxFileName = \"/Users/huanwen/Work/Cook/cook-frontend/src/components/Distribution/DistributionZap.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Modal } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { BalanceBlock, PriceSection } from '../common/index';\nimport { distributionZap, approve } from '../../utils/web3';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { COOK, WETH } from \"../../constants/tokens\";\nimport { CookDistribution } from \"../../constants/contracts\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport colors from '../../constants/colors';\nimport ActionButton from \"../common/ActionButton\";\nimport { Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\nfunction DistributionZap({\n  user,\n  pools,\n  cookAvailable,\n  wethBalance,\n  wethAllowance,\n  pairBalanceWETH,\n  pairBalanceCOOK,\n  selected\n}) {\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [wethAmount, setWethAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false);\n  const [selectedPool, setSelectedPool] = useState(selected || '');\n  const [balanceType, setBalanceType] = useState(0);\n  useEffect(() => {\n    if (selected) {\n      setSelectedPool(selected);\n    }\n  }, [selectedPool, selected]);\n\n  const close = () => {\n    setOpened(false);\n    setZapAmount(new BigNumber(0));\n    setWethAmount(new BigNumber(0));\n  };\n\n  const WETHToCOOKRatio = pairBalanceWETH.isZero() ? new BigNumber(1) : pairBalanceWETH.div(pairBalanceCOOK);\n\n  const onChangeAmountCOOK = amountCOOK => {\n    if (!amountCOOK) {\n      setWethAmount(new BigNumber(0));\n      return;\n    }\n\n    const amountCOOKBN = new BigNumber(amountCOOK);\n    setZapAmount(amountCOOKBN);\n    const amountCOOKBU = toBaseUnitBN(amountCOOKBN, COOK.decimals);\n    const newAmountWETH = toTokenUnitsBN(amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR), COOK.decimals);\n    setWethAmount(newAmountWETH);\n  };\n\n  const renderPoolZap = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ActionButton, {\n      label: \"Zap LP\",\n      color: colors.linear,\n      onClick: () => {\n        setOpened(true);\n      },\n      disabled: !user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      visible: opened,\n      onClose: () => close(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: '5%',\n        padding: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: 45,\n        fontWeight: 700\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, \"Zap LP\"), /*#__PURE__*/React.createElement(ListTable, {\n      pools: pools,\n      selectedPool: selectedPool,\n      setSelectedPool: setSelectedPool,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        padding: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BalanceBlock, {\n      asset: \"Available Cook\",\n      balance: cookAvailable,\n      suffix: \"Cook\",\n      type: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 28\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BalanceBlock, {\n      asset: \"WETH Balance\",\n      balance: wethBalance,\n      type: \"row\",\n      suffix: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: 14\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }\n      }, \" WETH\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BigNumberInput, {\n      adornment: \"Cook\",\n      value: zapAmount,\n      max: () => {\n        onChangeAmountCOOK(cookAvailable);\n      },\n      setter: onChangeAmountCOOK,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(PriceSection, {\n      label: \"Requires \",\n      amt: wethAmount,\n      symbol: \" WETH\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ActionButton, {\n      label: \"Cancel\",\n      onClick: () => {\n        close();\n      },\n      disabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    })), wethAllowance.comparedTo(wethAmount) > 0 ? /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ActionButton, {\n      label: \"Zap\",\n      color: colors.button,\n      onClick: () => {\n        if (selectedPool) {\n          distributionZap(CookDistribution, selectedPool, toBaseUnitBN(zapAmount, COOK.decimals), hash => {\n            close();\n          });\n        }\n      },\n      disabled: selectedPool === '' || user === '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ActionButton, {\n      label: \"Approve\",\n      onClick: () => {\n        if (selectedPool) {\n          approve(WETH.addr, CookDistribution);\n        }\n      },\n      disabled: selectedPool === '' || user === '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }))))));\n  };\n\n  return renderPoolZap();\n}\n\nexport default DistributionZap;","map":{"version":3,"sources":["/Users/huanwen/Work/Cook/cook-frontend/src/components/Distribution/DistributionZap.tsx"],"names":["React","useState","useEffect","Modal","BigNumber","BalanceBlock","PriceSection","distributionZap","approve","toBaseUnitBN","toTokenUnitsBN","COOK","WETH","CookDistribution","BigNumberInput","colors","ActionButton","Row","Col","ListTable","DistributionZap","user","pools","cookAvailable","wethBalance","wethAllowance","pairBalanceWETH","pairBalanceCOOK","selected","zapAmount","setZapAmount","wethAmount","setWethAmount","opened","setOpened","selectedPool","setSelectedPool","balanceType","setBalanceType","close","WETHToCOOKRatio","isZero","div","onChangeAmountCOOK","amountCOOK","amountCOOKBN","amountCOOKBU","decimals","newAmountWETH","multipliedBy","integerValue","ROUND_FLOOR","renderPoolZap","linear","paddingTop","padding","textAlign","fontSize","fontWeight","comparedTo","button","hash","addr"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Modal, DropDown\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  BalanceBlock, PriceSection\n} from '../common/index';\nimport { distributionZap, approve } from '../../utils/web3';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { COOK, WETH } from \"../../constants/tokens\";\nimport { CookDistribution } from \"../../constants/contracts\";\nimport BigNumberInput from \"../common/BigNumberInput\";\nimport colors from '../../constants/colors';\nimport ActionButton from \"../common/ActionButton\";\nimport HelpText from \"../common/HelpText\";\nimport { Row, Col } from 'react-grid-system';\nimport ListTable from \"../PoolList/ListTable\";\n\ntype ZapProps = {\n  user: string,\n  pools: Array<{ name: string, address: string, rewardPerBlock: BigNumber, lockedUpPeriod: BigNumber }>,\n  cookAvailable: BigNumber,\n  wethBalance: BigNumber,\n  wethAllowance: BigNumber,\n  pairBalanceWETH: BigNumber,\n  pairBalanceCOOK: BigNumber,\n  selected?: string\n};\n\nfunction DistributionZap({\n  user, pools, cookAvailable, wethBalance, wethAllowance, pairBalanceWETH, pairBalanceCOOK, selected\n}: ZapProps) {\n  const [zapAmount, setZapAmount] = useState(new BigNumber(0));\n  const [wethAmount, setWethAmount] = useState(new BigNumber(0));\n  const [opened, setOpened] = useState(false)\n  const [selectedPool, setSelectedPool] = useState(selected || '')\n  const [balanceType, setBalanceType] = useState(0)\n\n  useEffect(() => {\n\n    if (selected) {\n      setSelectedPool(selected)\n    }\n\n  }, [selectedPool, selected])\n\n  const close = () => {\n    setOpened(false);\n    setZapAmount(new BigNumber(0));\n    setWethAmount(new BigNumber(0));\n  }\n\n  const WETHToCOOKRatio = pairBalanceWETH.isZero() ? new BigNumber(1) : pairBalanceWETH.div(pairBalanceCOOK);\n\n  const onChangeAmountCOOK = (amountCOOK) => {\n    if (!amountCOOK) {\n      setWethAmount(new BigNumber(0));\n      return;\n    }\n\n    const amountCOOKBN = new BigNumber(amountCOOK)\n    setZapAmount(amountCOOKBN);\n\n    const amountCOOKBU = toBaseUnitBN(amountCOOKBN, COOK.decimals);\n    const newAmountWETH = toTokenUnitsBN(\n      amountCOOKBU.multipliedBy(WETHToCOOKRatio).integerValue(BigNumber.ROUND_FLOOR),\n      COOK.decimals);\n    setWethAmount(newAmountWETH);\n  };\n  const renderPoolZap = () => {\n    return (\n      <div>\n        <ActionButton label={\"Zap LP\"} color={colors.linear} onClick={() => {\n          setOpened(true)\n        }} disabled={!user} />\n        <Modal visible={opened} onClose={() => close()}>\n          <div style={{ paddingTop: '5%', padding: 20 }}>\n            <h1 style={{ textAlign: \"center\", fontSize: 45, fontWeight: 700 }}>Zap LP</h1>\n            <ListTable pools={pools} selectedPool={selectedPool} setSelectedPool={setSelectedPool} />\n            <Row style={{ padding: 10 }}>\n              <Col xs={12}><BalanceBlock asset=\"Available Cook\" balance={cookAvailable} suffix={\"Cook\"} type={\"row\"} /></Col>\n              <Col xs={12}>\n                <BalanceBlock asset=\"WETH Balance\" balance={wethBalance} type={\"row\"} suffix={\n                  <span style={{ fontSize: 14 }}> WETH</span>} />\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={12}>\n                <BigNumberInput\n                  adornment=\"Cook\"\n                  value={zapAmount}\n                  max={() => {\n                    onChangeAmountCOOK(cookAvailable);\n                  }}\n                  setter={onChangeAmountCOOK}\n                />\n                <PriceSection label=\"Requires \" amt={wethAmount} symbol=\" WETH\" />\n\n              </Col>\n              <Col xs={6} style={{ textAlign: \"center\" }}>\n                <ActionButton\n                  label=\"Cancel\"\n                  onClick={() => {\n                    close()\n                  }}\n                  disabled={false}\n                />\n              </Col>\n              {wethAllowance.comparedTo(wethAmount) > 0 ?\n                <Col xs={6} style={{ textAlign: \"center\" }}>\n                  <ActionButton\n                    label={\"Zap\"} color={colors.button}\n                    onClick={() => {\n                      if (selectedPool) {\n                        distributionZap(\n                          CookDistribution,\n                          selectedPool,\n                          toBaseUnitBN(zapAmount, COOK.decimals),\n                          (hash) => {\n                            close()\n                          }\n                        );\n                      }\n\n                    }}\n                    disabled={selectedPool === '' || user === ''}\n                  />\n                </Col>\n                :\n                <Col xs={6} style={{ textAlign: \"center\" }}>\n                  <ActionButton\n                    label=\"Approve\"\n                    onClick={() => {\n                      if (selectedPool) {\n                        approve(WETH.addr, CookDistribution);\n                      }\n                    }}\n                    disabled={selectedPool === '' || user === ''}\n                  />\n                </Col>\n              }\n            </Row>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n\n  return (\n    renderPoolZap()\n  );\n}\n\nexport default DistributionZap;\n"]},"metadata":{},"sourceType":"module"}